 .name fcn.00009010
 .offset 0000000000009010
 .file dash
 endbr64
 push r15
 push r14
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov r12, qword [rdi]
 test r12, r12
 cjmp LABEL10
 movzx ebx, byte [r12]
 mov r13, rdi
 mov r14, rsi
 mov rdi, rsi
 cmp bl, CONST
 cjmp LABEL16
 call CONST
 mov rsi, qword [rip + CONST]
LABEL71:
 movabs rcx, CONST
 mov rbx, r12
 nop
LABEL25:
 movzx edx, byte [rbx + CONST]
 add rbx, CONST
 cmp dl, CONST
 cjmp LABEL25
 bt rcx, rdx
 cjmp LABEL25
 mov r15, rbx
 sub r15, r12
 lea rbp, [rax + r15 + CONST]
 cmp rbp, rsi
 cjmp LABEL32
 nop dword [rax + rax]
LABEL36:
 call CONST
 cmp qword [rip + CONST], rbp
 cjmp LABEL36
LABEL32:
 mov rdi, qword [rip + CONST]
 cmp r12, rbx
 cjmp LABEL39
 mov rdx, r15
 mov rsi, r12
 call CONST
 add r15, rax
 mov byte [r15], CONST
 lea rdi, [r15 + CONST]
LABEL39:
 mov rsi, r14
 call CONST
 mov qword [rip + CONST], CONST
 movzx eax, byte [rbx]
 cmp al, CONST
 cjmp LABEL51
LABEL85:
 add rbx, CONST
 cmp al, CONST
 mov eax, CONST
 mov rdi, rbp
 cmovne rbx, rax
 mov qword [r13], rbx
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 jmp CONST
LABEL16:
 call CONST
 mov rsi, qword [rip + CONST]
 movabs rdx, CONST
 bt rdx, rbx
 mov rbp, rax
 cjmp LABEL71
 add rbp, CONST
 mov rbx, r12
 xor r15d, r15d
 cmp rsi, rbp
 cjmp LABEL36
 mov rdi, qword [rip + CONST]
 jmp LABEL39
LABEL51:
 lea rdx, [rbx + CONST]
 mov qword [rip + CONST], rdx
 movzx eax, byte [rbx + CONST]
 mov rbx, rdx
 test al, al
 cjmp LABEL84
 jmp LABEL85
LABEL91:
 movzx eax, byte [rbx + CONST]
 add rbx, CONST
 test al, al
 cjmp LABEL85
LABEL84:
 cmp al, CONST
 cjmp LABEL91
 jmp LABEL85
LABEL10:
 add rsp, CONST
 xor eax, eax
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
