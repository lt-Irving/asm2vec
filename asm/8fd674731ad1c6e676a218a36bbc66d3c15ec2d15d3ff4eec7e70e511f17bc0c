 .name fcn.00005ba0
 .offset 0000000000005ba0
 .file chsh
 endbr64
 push r14
 mov rcx, rdi
 push r13
 mov r13, rdi
 mov edi, CONST
 push r12
 mov r12d, CONST
 push rbp
 push rbx
 sub rsp, CONST
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 cmp rsi, CONST
 mov rbx, rsp
 cmovbe r12, rsi
 lea rsi, [rip + CONST]
 call CONST
 mov rdi, qword [rip + CONST]
 call CONST
 mov edx, r12d
 mov esi, CONST
 mov rdi, rbx
 mov rcx, qword [rip + CONST]
 call CONST
 cmp rbx, rax
 cjmp LABEL27
LABEL43:
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL30
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 ret
LABEL27:
 mov esi, CONST
 mov rdi, rbx
 call CONST
 mov rbp, rax
 test rax, rax
 cjmp LABEL43
 mov byte [rax], CONST
 movsx r14, byte [rsp]
 test r14b, r14b
 cjmp LABEL43
 call CONST
 mov rax, qword [rax]
 jmp LABEL50
LABEL56:
 movsx rdx, byte [rbp]
 test byte [rax + rdx*CONST + CONST], CONST
 cjmp LABEL53
LABEL50:
 sub rbp, CONST
 cmp rbp, rbx
 cjmp LABEL56
LABEL53:
 mov byte [rbp + CONST], CONST
 mov rsi, rbx
 jmp LABEL59
LABEL65:
 movsx r14, byte [rsi + CONST]
 add rsi, CONST
 test r14b, r14b
 cjmp LABEL63
LABEL59:
 test byte [rax + r14*CONST + CONST], CONST
 cjmp LABEL65
LABEL63:
 lea rdx, [r12 + CONST]
 mov rdi, r13
 call CONST
 mov byte [r13 + r12 + CONST], CONST
 jmp LABEL43
LABEL30:
 call CONST
