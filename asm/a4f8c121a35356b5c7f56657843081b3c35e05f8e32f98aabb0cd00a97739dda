 .name fcn.0001d960
 .offset 000000000001d960
 .file diff
LABEL347:
 push r15
 push r14
 mov r14, rdi
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov r15, qword [rdi + CONST]
 mov qword [rsp + CONST], rsi
 mov qword [rsp + CONST], rdx
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 mov rax, qword [rdi + CONST]
 cmp qword [rsi], CONST
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], rax
 lea rax, [r15*CONST]
 mov qword [rsp + CONST], rax
 lea rax, [rsp + CONST]
 mov qword [rsp + CONST], rax
 lea rax, [rsp + CONST]
 mov qword [rsp + CONST], rax
 cjmp LABEL24
 jmp LABEL25
LABEL67:
 test al, CONST
 cjmp LABEL27
 and edx, CONST
 cjmp LABEL27
LABEL69:
 test cl, CONST
 cjmp LABEL31
 test al, CONST
 cjmp LABEL27
LABEL31:
 and ecx, CONST
 cjmp LABEL35
 test al, CONST
 cjmp LABEL35
 nop word cs:[rax + rax]
LABEL27:
 mov rdi, qword [rsp + CONST]
 add qword [rsp + CONST], CONST
 mov rax, qword [rsp + CONST]
 cmp rax, qword [rdi]
 cjmp LABEL25
LABEL24:
 mov rax, qword [rsp + CONST]
 mov rdi, qword [rsp + CONST]
 mov rax, qword [rax]
 mov r13, qword [rax + rdi*CONST]
 mov rdi, qword [rsp + CONST]
 mov rbp, r13
 mov rax, qword [rdi]
 shl rbp, CONST
 add rax, rbp
 cmp byte [rax + CONST], CONST
 cjmp LABEL27
 mov ebx, dword [rax + CONST]
 test ebx, CONST
 cjmp LABEL35
 mov edx, dword [r14 + CONST]
 shr ebx, CONST
 mov rsi, r15
 mov rdi, r14
 call CONST
 mov ecx, ebx
 mov edx, ebx
 and cx, CONST
 test bl, CONST
 cjmp LABEL67
 and edx, CONST
 cjmp LABEL69
 test al, CONST
 cjmp LABEL69
 jmp LABEL27
LABEL35:
 mov rbx, qword [r14 + CONST]
 xor ecx, ecx
 mov rax, rbx
LABEL217:
 cmp rcx, rax
 cjmp LABEL77
 lea rsi, [rcx + rax]
 mov r8, qword [r14 + CONST]
 mov rdx, rsi
 shr rdx, CONST
 add rdx, rsi
 sar rdx, CONST
 lea rsi, [rdx + rdx*CONST]
 cmp r15, qword [r8 + rsi*CONST + CONST]
 cjmp LABEL86
 jmp LABEL87
LABEL99:
 lea rsi, [rcx + rdx]
 mov rax, rsi
 shr rax, CONST
 add rax, rsi
 sar rax, CONST
 lea rsi, [rax + rax*CONST]
 mov rdi, rax
 cmp r15, qword [r8 + rsi*CONST + CONST]
 cjmp LABEL96
 mov rdx, rax
LABEL86:
 cmp rcx, rdx
 cjmp LABEL99
LABEL77:
 cmp rbx, rcx
 cjmp LABEL101
 mov rdx, qword [r14 + CONST]
 lea rax, [rcx + rcx*CONST]
 lea rax, [rdx + rax*CONST]
 cmp qword [rax + CONST], r15
 cjmp LABEL101
 cmp rcx, CONST
 cjmp LABEL108
 jmp LABEL101
LABEL114:
 add rax, CONST
 cmp byte [rax + CONST], CONST
 cjmp LABEL101
LABEL108:
 cmp r13, qword [rax]
 cjmp LABEL114
LABEL224:
 mov rax, rbx
LABEL494:
 mov dword [rsp + CONST], CONST
 cmp rbx, rax
 cjmp LABEL27
 lea rax, [r13*CONST]
 mov r12, qword [rsp + CONST]
 mov qword [rsp + CONST], rax
 lea rax, [r13 + r13*CONST]
 shl rax, CONST
 mov qword [rsp + CONST], rax
 mov rax, r14
 mov r14, rbx
 mov rbx, rax
 jmp LABEL128
LABEL204:
 mov rdi, qword [rsp + CONST]
 mov rcx, qword [r12 + CONST]
 mov rcx, qword [rcx + rdi + CONST]
 mov rcx, qword [rcx]
 lea rcx, [rcx + rcx*CONST]
 lea rdi, [rdx + rcx*CONST]
 mov qword [rsp + CONST], rdi
LABEL211:
 add rbp, r15
 mov edx, dword [rbx + CONST]
 mov rdi, rbx
 sub rbp, rax
 lea rsi, [rbp + CONST]
 call CONST
 mov rdi, qword [rsp + CONST]
 lea r10, [rbp*CONST]
 mov qword [rsp + CONST], CONST
 mov ecx, eax
 mov rax, qword [rbx + CONST]
 lea r11, [rax + r10]
 mov rax, qword [rax + rdi]
 mov rdx, qword [r11]
 test rax, rax
 cjmp LABEL151
 mov rax, qword [rax + CONST]
 mov qword [rsp + CONST], rax
LABEL151:
 test rdx, rdx
 cjmp LABEL155
 mov rsi, qword [rdx + CONST]
 mov rdi, qword [rsp + CONST]
 mov qword [rsp + CONST], r10
 mov rdx, qword [rsp + CONST]
 mov dword [rsp + CONST], ecx
 call CONST
 mov ecx, dword [rsp + CONST]
 mov r10, qword [rsp + CONST]
 test eax, eax
 mov dword [rsp + CONST], eax
 cjmp LABEL166
 mov rdx, qword [rsp + CONST]
 mov rdi, qword [rsp + CONST]
 mov rsi, r12
 add r10, qword [rbx + CONST]
 mov qword [rsp + CONST], r10
 call CONST
 mov r10, qword [rsp + CONST]
 mov rdi, qword [rsp + CONST]
 mov qword [r10], rax
 call CONST
 mov rdx, qword [rbx + CONST]
 cmp qword [rdx + rbp*CONST], CONST
 cjmp LABEL179
LABEL326:
 cmp qword [rsp + CONST], CONST
 cjmp LABEL181
 mov rax, qword [rsp + CONST]
 mov rdi, qword [rsp + CONST]
 mov rax, qword [rdx + rax]
 cmp qword [rax + CONST], rdi
 cjmp LABEL186
 nop dword [rax]
LABEL181:
 add r14, CONST
 cmp r14, qword [rbx + CONST]
 cjmp LABEL190
LABEL128:
 mov rdx, qword [rbx + CONST]
 lea rax, [r14 + r14*CONST]
 lea rax, [rdx + rax*CONST]
 cmp r13, qword [rax]
 cjmp LABEL181
 cmp r15, qword [rax + CONST]
 cjmp LABEL181
 mov rbp, qword [rax + CONST]
 mov rax, qword [rax + CONST]
 mov rdx, qword [r12 + CONST]
 mov rdi, rbp
 sub rdi, rax
 mov qword [rsp + CONST], rdi
 cjmp LABEL204
 mov rcx, qword [r12 + CONST]
 mov rdi, qword [rsp + CONST]
 mov rcx, qword [rcx + rdi]
 lea rcx, [rcx + rcx*CONST]
 lea rsi, [rdx + rcx*CONST]
 mov qword [rsp + CONST], rsi
 jmp LABEL211
LABEL87:
 mov rdi, rdx
 mov rdx, rax
 nop word [rax + rax]
LABEL96:
 lea rcx, [rdi + CONST]
 mov rax, rdx
 jmp LABEL217
LABEL101:
 mov rax, qword [r14 + CONST]
 cmp qword [r14 + CONST], CONST
 mov rdx, qword [rax]
 mov qword [rsp + CONST], rax
 mov rax, qword [rdx + rbp]
 mov qword [rsp + CONST], rax
 cjmp LABEL224
 mov qword [rsp + CONST], CONST
 mov r11, qword [r14 + CONST]
 mov qword [rsp + CONST], r15
 mov qword [rsp + CONST], r13
 mov qword [rsp + CONST], rbx
LABEL244:
 mov rax, qword [r14 + CONST]
 mov rbx, qword [rsp + CONST]
 mov rdi, qword [rsp + CONST]
 mov rbx, qword [rax + rbx*CONST]
 mov rax, qword [rbx + CONST]
 shl rax, CONST
 cmp rdi, qword [rdx + rax]
 cjmp LABEL237
LABEL367:
 add qword [rsp + CONST], CONST
 mov rax, qword [rsp + CONST]
 cmp rax, qword [r14 + CONST]
 cjmp LABEL241
 mov rax, qword [rsp + CONST]
 mov rdx, qword [rax]
 jmp LABEL244
LABEL237:
 cmp qword [rbx + CONST], CONST
 mov r12, qword [rbx]
 mov r10, qword [rsp + CONST]
 cjmp LABEL248
 mov rcx, r12
 xor ebp, ebp
 mov r12, r11
 mov r8, r10
 jmp LABEL253
LABEL288:
 add rbp, CONST
 mov rcx, r13
 mov r8, r15
 cmp rbp, qword [rbx + CONST]
 cjmp LABEL258
LABEL253:
 mov rax, qword [rbx + CONST]
 mov r9, qword [rax + rbp*CONST]
 mov r13, qword [r9 + CONST]
 mov rdx, r13
 sub rdx, rcx
 lea r15, [rdx + r8]
 test rdx, rdx
 cjmp LABEL266
 cmp qword [r14 + CONST], r15
 cjmp LABEL268
LABEL316:
 lea rsi, [r12 + rcx]
 lea rdi, [r12 + r8]
 mov qword [rsp + CONST], r9
 mov qword [rsp + CONST], rcx
 mov qword [rsp + CONST], r8
 call CONST
 mov r8, qword [rsp + CONST]
 mov rcx, qword [rsp + CONST]
 test eax, eax
 mov r9, qword [rsp + CONST]
 cjmp LABEL279
LABEL266:
 mov r8, qword [rsp + CONST]
 mov rcx, qword [rsp + CONST]
 mov rdx, r9
 mov rsi, rbx
 mov rdi, r14
 call CONST
 mov r12, qword [r14 + CONST]
 cmp eax, CONST
 cjmp LABEL288
LABEL310:
 mov rbx, qword [rsp + CONST]
 xor rbx, qword fs:[CONST]
 cjmp LABEL291
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL268:
 mov qword [rsp + CONST], rdx
 mov qword [rsp + CONST], r9
 cmp qword [r14 + CONST], r15
 cjmp LABEL279
 mov rsi, r15
 mov rdi, r14
 mov qword [rsp + CONST], rcx
 mov qword [rsp + CONST], r8
 call CONST
 test eax, eax
 cjmp LABEL310
 mov r12, qword [r14 + CONST]
 mov rdx, qword [rsp + CONST]
 mov r9, qword [rsp + CONST]
 mov r8, qword [rsp + CONST]
 mov rcx, qword [rsp + CONST]
 jmp LABEL316
LABEL155:
 mov rdx, qword [rsp + CONST]
 mov rdi, qword [rsp + CONST]
 mov rsi, r12
 mov qword [rsp + CONST], r11
 call CONST
 mov r11, qword [rsp + CONST]
 mov rdx, qword [rbx + CONST]
 mov qword [r11], rax
 cmp qword [rdx + rbp*CONST], CONST
 cjmp LABEL326
LABEL179:
 mov eax, dword [rsp + CONST]
 test eax, eax
 cjmp LABEL326
 jmp LABEL310
LABEL186:
 mov rax, qword [rsp + CONST]
 mov rcx, r15
 mov rdi, rbx
 lea r8, [rax + CONST]
 lea rbp, [rax + CONST]
 mov rdx, r8
 mov rsi, rbp
 mov qword [rsp + CONST], r8
 call CONST
 mov dword [rsp + CONST], eax
 test eax, eax
 cjmp LABEL310
 mov r8, qword [rsp + CONST]
 mov rsi, rbp
 mov rdi, rbx
 mov rdx, r8
 call LABEL347
 mov dword [rsp + CONST], eax
 test eax, eax
 cjmp LABEL310
 add r14, CONST
 cmp r14, qword [rbx + CONST]
 cjmp LABEL128
 nop dword [rax]
LABEL190:
 mov r14, rbx
 jmp LABEL27
LABEL166:
 mov rdi, qword [rsp + CONST]
 call CONST
 mov eax, dword [rsp + CONST]
 jmp LABEL310
LABEL25:
 xor eax, eax
 jmp LABEL310
LABEL258:
 mov r11, r12
LABEL480:
 lea r12, [r13 + CONST]
 mov r10, r15
LABEL248:
 cmp qword [rsp + CONST], r12
 cjmp LABEL367
 mov r13, qword [rsp + CONST]
 mov r15, r10
 mov r10, r11
 nop word [rax + rax]
LABEL453:
 mov rax, r12
 sub rax, qword [rbx]
 test rax, rax
 cjmp LABEL375
 cmp qword [r14 + CONST], r15
 cjmp LABEL377
LABEL489:
 lea rax, [r15 + CONST]
 movzx edi, byte [r10 + r12 + CONST]
 cmp byte [r10 + r15], dil
 cjmp LABEL381
 mov r15, rax
LABEL375:
 mov rax, qword [r14 + CONST]
 mov rax, qword [rax + r12*CONST]
 test rax, rax
 cjmp LABEL386
 mov rcx, qword [rax + CONST]
 test rcx, rcx
 cjmp LABEL386
 mov rdi, qword [rax + CONST]
 mov rax, qword [rsp + CONST]
 xor edx, edx
 mov rsi, qword [rax]
 jmp LABEL394
LABEL403:
 add rdx, CONST
 cmp rcx, rdx
 cjmp LABEL386
LABEL394:
 mov rbp, qword [rdi + rdx*CONST]
 mov rax, rbp
 shl rax, CONST
 add rax, rsi
 cmp byte [rax + CONST], CONST
 cjmp LABEL403
 cmp r13, qword [rax]
 cjmp LABEL403
 cmp rbp, CONST
 cjmp LABEL386
 mov rsi, qword [rbx + CONST]
 mov rcx, qword [rbx]
 test rsi, rsi
 cjmp LABEL411
LABEL468:
 mov qword [rsp + CONST], r10
 sub rsp, CONST
 mov rdx, qword [rbx + CONST]
 mov r9, r12
 push CONST
 mov r8, rbp
 mov rdi, r14
 call CONST
 pop rdx
 pop rcx
 cmp eax, CONST
 mov r10, qword [rsp + CONST]
 cjmp LABEL386
 test eax, eax
 cjmp LABEL310
 mov rax, qword [rbx + CONST]
 cmp qword [rbx + CONST], rax
 cjmp LABEL429
LABEL505:
 mov esi, CONST
 mov edi, CONST
 call CONST
 test rax, rax
 cjmp LABEL434
 mov rdx, qword [rbx + CONST]
 mov rcx, qword [rbx + CONST]
 mov rsi, rbx
 mov rdi, r14
 mov r8, qword [rsp + CONST]
 mov qword [rcx + rdx*CONST], rax
 add rdx, CONST
 mov rcx, qword [rsp + CONST]
 mov qword [rax], rbp
 mov qword [rax + CONST], r12
 mov qword [rbx + CONST], rdx
 mov rdx, rax
 call CONST
 mov r10, qword [r14 + CONST]
 cmp eax, CONST
 cjmp LABEL310
LABEL386:
 add r12, CONST
 cmp qword [rsp + CONST], r12
 cjmp LABEL453
LABEL381:
 mov r11, r10
 jmp LABEL367
LABEL411:
 mov rsi, r12
 mov edi, CONST
 mov qword [rsp + CONST], r10
 sub rsi, rcx
 mov qword [rsp + CONST], rcx
 add rsi, CONST
 call CONST
 mov rcx, qword [rsp + CONST]
 mov r10, qword [rsp + CONST]
 test rax, rax
 mov rsi, rax
 mov qword [rbx + CONST], rax
 cjmp LABEL468
LABEL434:
 mov eax, CONST
 jmp LABEL310
LABEL279:
 mov r11, r12
 mov r10, r8
 mov r12, rcx
 cmp qword [rbx + CONST], rbp
 cjmp LABEL367
 test rbp, rbp
 cjmp LABEL248
 mov r15, r8
 mov r13, rcx
 jmp LABEL480
LABEL377:
 cmp qword [r14 + CONST], r15
 cjmp LABEL381
 lea esi, [r15 + CONST]
 mov rdi, r14
 call CONST
 test eax, eax
 cjmp LABEL310
 mov r10, qword [r14 + CONST]
 jmp LABEL489
LABEL241:
 mov r15, qword [rsp + CONST]
 mov r13, qword [rsp + CONST]
 mov rbx, qword [rsp + CONST]
 mov rax, qword [r14 + CONST]
 jmp LABEL494
LABEL429:
 lea rdx, [rax + rax + CONST]
 mov rdi, qword [rbx + CONST]
 lea rsi, [rdx*CONST]
 mov qword [rsp + CONST], rdx
 call CONST
 test rax, rax
 cjmp LABEL434
 mov rdx, qword [rsp + CONST]
 mov qword [rbx + CONST], rax
 mov qword [rbx + CONST], rdx
 jmp LABEL505
LABEL291:
 call CONST
