 .name sym.command_builtin
 .offset 0000000000091ed0
 .file bash
 endbr64
 push r14
 push r13
 push r12
 xor r12d, r12d
 push rbp
 xor ebp, ebp
 push rbx
 mov rbx, rdi
 sub rsp, CONST
 call CONST
 jmp LABEL11
LABEL24:
 cmp eax, CONST
 cjmp LABEL13
 mov ebp, CONST
LABEL11:
 lea rsi, [rip + CONST]
 mov rdi, rbx
 call CONST
 cmp eax, CONST
 cjmp LABEL19
 cmp eax, CONST
 cjmp LABEL21
 cjmp LABEL22
 cmp eax, CONST
 cjmp LABEL24
 call CONST
 mov eax, CONST
LABEL80:
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 ret
LABEL22:
 cmp eax, CONST
 cjmp LABEL13
 mov ebp, CONST
 jmp LABEL11
LABEL13:
 call CONST
 add rsp, CONST
 mov eax, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 ret
LABEL21:
 mov r12d, CONST
 jmp LABEL11
LABEL19:
 mov r13, qword [rip + CONST]
 test r13, r13
 cjmp LABEL51
 test r12d, r12d
 cjmp LABEL53
 test ebp, ebp
 cjmp LABEL55
LABEL85:
 or r12d, ebp
 cmp ebp, CONST
 setne r14b
 xor ebp, ebp
 nop dword [rax]
LABEL76:
 mov rax, qword [r13 + CONST]
 mov esi, r12d
 mov rdi, qword [rax]
 call CONST
 mov ebx, eax
 test eax, eax
 cjmp LABEL67
 test r14b, r14b
 cjmp LABEL67
 mov rax, qword [r13 + CONST]
 mov rdi, qword [rax]
 call CONST
LABEL67:
 mov r13, qword [r13]
 add ebp, ebx
 test r13, r13
 cjmp LABEL76
 xor eax, eax
 test ebp, ebp
 sete al
 jmp LABEL80
LABEL53:
 mov eax, dword [rip + CONST]
 test eax, eax
 cjmp LABEL83
 test ebp, ebp
 cjmp LABEL85
 lea rdi, [rip + CONST]
 call CONST
 call CONST
 mov rdi, r13
 mov rbp, rax
 mov rbx, qword [rax + CONST]
 call CONST
 mov rdx, qword [rbp + CONST]
 mov ecx, CONST
 mov qword [rbx + CONST], rax
 mov eax, dword [rbp + CONST]
 mov qword [rdx + CONST], CONST
LABEL124:
 or eax, ecx
 lea rdi, [rip + CONST]
 mov rsi, rbp
 mov dword [rbp + CONST], eax
 xor eax, eax
 or dword [rdx], ecx
 call CONST
 mov rdi, rbp
 call CONST
 lea rdi, [rip + CONST]
 mov dword [rsp + CONST], eax
 call CONST
 mov eax, dword [rsp + CONST]
 jmp LABEL80
LABEL55:
 lea rdi, [rip + CONST]
 call CONST
 call CONST
 mov rdi, r13
 mov rbp, rax
 mov rbx, qword [rax + CONST]
 call CONST
 mov rdx, qword [rbp + CONST]
 mov ecx, CONST
 mov qword [rbx + CONST], rax
 mov eax, dword [rbp + CONST]
 mov qword [rdx + CONST], CONST
 jmp LABEL124
LABEL51:
 xor eax, eax
 jmp LABEL80
LABEL83:
 lea rdi, [rip + CONST]
 call CONST
 mov eax, CONST
 jmp LABEL80
