 .name sym.remove_history_range
 .offset 00000000000d73a0
 .file bash
 endbr64
 push r15
 push r14
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov r14, qword [rip + CONST]
 test r14, r14
 cjmp LABEL10
 mov r12d, dword [rip + CONST]
 movsxd rbx, esi
 mov ebp, edi
 mov edx, ebx
 cmp r12d, ebx
 setle al
 shr edx, CONST
 or eax, edx
 test r12d, r12d
 sete dl
 or eax, edx
 mov edx, edi
 shr edx, CONST
 or eax, edx
 cmp r12d, edi
 setle dl
 or al, dl
 cjmp LABEL10
 cmp edi, ebx
 cjmp LABEL30
LABEL10:
 xor r15d, r15d
LABEL78:
 add rsp, CONST
 mov rax, r15
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL30:
 mov eax, ebx
 sub eax, edi
 lea edi, [rax + CONST]
 lea r13d, [rax + CONST]
 movsxd rdi, edi
 shl rdi, CONST
 call CONST
 mov r15, rax
 test rax, rax
 cjmp LABEL10
 movsxd rsi, ebp
 mov rax, rsi
 neg rax
 lea rcx, [r15 + rax*CONST]
 mov rax, rsi
 nop
LABEL61:
 mov rdx, qword [r14 + rax*CONST]
 mov qword [rcx + rax*CONST], rdx
 add rax, CONST
 cmp ebx, eax
 cjmp LABEL61
 mov eax, ebx
 lea r8, [r14 + rbx*CONST + CONST]
 lea rdi, [r14 + rsi*CONST]
 mov edx, CONST
 sub eax, ebp
 cmp ebp, ebx
 mov rsi, r8
 cmovg eax, edx
 sub r12d, ebx
 movsxd rdx, r12d
 add eax, CONST
 shl rdx, CONST
 cdqe
 mov qword [r15 + rax*CONST], CONST
 call CONST
 sub dword [rip + CONST], r13d
 jmp LABEL78
