 .name main
 .offset 0000000000004fc0
 .file chfn
 endbr64
 push r15
 push r14
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 or qword [rsp], CONST
 sub rsp, CONST
 or qword [rsp], CONST
 sub rsp, CONST
 lea r12, [rip + CONST]
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 mov ebp, edi
 mov rdi, qword [rsi]
 mov rbx, rsi
 call CONST
 mov qword [rip + CONST], rax
 call CONST
 lea rsi, [rip + CONST]
 mov edi, CONST
 call CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 lea rdi, [rip + CONST]
 call CONST
 mov rdx, rbx
 mov esi, ebp
 lea rdi, [rip + CONST]
 call CONST
 call CONST
 mov edx, CONST
 mov esi, CONST
 lea rdi, [rip + CONST]
 test eax, eax
 sete byte [rip + CONST]
 call CONST
LABEL71:
 xor r8d, r8d
 lea rcx, [rip + CONST]
 mov rsi, rbx
 mov edi, ebp
 lea rdx, [rip + CONST]
 call CONST
 cmp eax, CONST
 cjmp LABEL48
 cmp eax, CONST
 cjmp LABEL50
 cmp eax, CONST
 cjmp LABEL52
 sub eax, CONST
 cmp eax, CONST
 cjmp LABEL52
 movsxd rax, dword [r12 + rax*CONST]
 add rax, r12
 notrack jmp rax
 cmp byte [rip + CONST], CONST
 cjmp LABEL60
 mov edi, CONST
 call CONST
 test al, al
 cjmp LABEL64
LABEL60:
 mov rsi, qword [rip + CONST]
 mov edx, CONST
 lea rdi, [rip + CONST]
 mov byte [rip + CONST], CONST
 call CONST
 mov byte [rip + CONST], CONST
 jmp LABEL71
 cmp byte [rip + CONST], CONST
 cjmp LABEL73
 mov edi, CONST
 call CONST
 test al, al
 cjmp LABEL64
LABEL73:
 mov rsi, qword [rip + CONST]
 mov edx, CONST
 lea rdi, [rip + CONST]
 mov byte [rip + CONST], CONST
 call CONST
 mov byte [rip + CONST], CONST
 jmp LABEL71
 cmp byte [rip + CONST], CONST
 cjmp LABEL64
 mov rsi, qword [rip + CONST]
 mov edx, CONST
 lea rdi, [rip + CONST]
 mov byte [rip + CONST], CONST
 call CONST
 mov byte [rip + CONST], CONST
 jmp LABEL71
 cmp byte [rip + CONST], CONST
 cjmp LABEL95
 mov edi, CONST
 call CONST
 test al, al
 cjmp LABEL64
LABEL95:
 mov rsi, qword [rip + CONST]
 mov edx, CONST
 lea rdi, [rip + CONST]
 mov byte [rip + CONST], CONST
 call CONST
 mov byte [rip + CONST], CONST
 jmp LABEL71
 cmp byte [rip + CONST], CONST
 cjmp LABEL108
 mov edi, CONST
 call CONST
 test al, al
 cjmp LABEL64
LABEL108:
 mov rsi, qword [rip + CONST]
 mov edx, CONST
 lea rdi, [rip + CONST]
 mov byte [rip + CONST], CONST
 call CONST
 mov byte [rip + CONST], CONST
 jmp LABEL71
LABEL50:
 cmp eax, CONST
 cjmp LABEL52
 mov byte [rip + CONST], CONST
 jmp LABEL71
LABEL48:
 cmp byte [rip + CONST], CONST
 cjmp LABEL125
LABEL251:
 movsxd rax, dword [rip + CONST]
 cmp eax, ebp
 cjmp LABEL128
 call CONST
 mov rbx, rax
 test rax, rax
 cjmp LABEL132
 mov rdi, qword [rax]
 call CONST
 mov r12, rax
LABEL220:
 cmp byte [rip + CONST], CONST
 mov qword [rsp], CONST
 cjmp LABEL138
 mov ebp, dword [rbx + CONST]
 call CONST
 cmp eax, ebp
 cjmp LABEL142
LABEL138:
 mov ebp, dword [rbx + CONST]
 call CONST
 cmp ebp, eax
 cjmp LABEL146
 lea rdi, [rip + CONST]
 call CONST
 test eax, eax
 cjmp LABEL142
LABEL146:
 call CONST
 mov edi, eax
 call CONST
 test rax, rax
 cjmp LABEL155
 mov rsi, qword [rax]
 mov rbp, rsp
 lea rdx, [rip + CONST]
 lea rdi, [rip + CONST]
 mov rcx, rbp
 call CONST
 mov r13d, eax
 test eax, eax
 cjmp LABEL164
LABEL257:
 mov rdi, qword [rsp]
 mov esi, r13d
 call CONST
 mov r12, qword [rip + CONST]
 mov edx, CONST
 xor edi, edi
 lea rsi, [rip + CONST]
 mov rbx, rax
 call CONST
 mov r8, rbx
 mov rcx, r12
 mov esi, CONST
 mov rdi, qword [rip + CONST]
 mov rdx, rax
 xor eax, eax
 call CONST
 mov edi, CONST
 xor esi, esi
 call CONST
 mov rdi, rax
 test rax, rax
 cjmp LABEL186
 call CONST
 mov rbp, rax
 test rax, rax
 cjmp LABEL186
 lea rsi, [rip + CONST]
 mov edi, CONST
 call CONST
 mov rdi, qword [rsp]
 mov esi, r13d
 call CONST
 mov esi, CONST
 mov edi, CONST
 lea rdx, [rip + CONST]
 mov rcx, rax
 xor eax, eax
 call CONST
 mov edi, CONST
 mov rsi, rbp
 call CONST
 mov rdi, rbp
 call CONST
LABEL796:
 mov rdi, qword [rsp]
 test rdi, rdi
 cjmp LABEL210
 mov esi, r13d
 call CONST
LABEL210:
 mov edi, CONST
 call CONST
LABEL128:
 mov r12, qword [rbx + rax*CONST]
 mov rdi, r12
 call CONST
 mov rbx, rax
 test rax, rax
 cjmp LABEL220
 mov r13, qword [rip + CONST]
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov r8, r12
 mov rdx, rax
 mov rcx, r13
LABEL885:
 mov rdi, qword [rip + CONST]
 mov esi, CONST
 xor eax, eax
 call CONST
 call CONST
LABEL125:
 lea rdi, [rip + CONST]
 call CONST
 lea rdi, [rip + CONST]
 xor eax, eax
 call CONST
 lea rdi, [rip + CONST]
 xor eax, eax
 call CONST
 lea rdi, [rip + CONST]
 xor eax, eax
 call CONST
 lea rdi, [rip + CONST]
 xor eax, eax
 call CONST
 lea rdi, [rip + CONST]
 xor eax, eax
 call CONST
 jmp LABEL251
LABEL164:
 mov rdi, qword [rsp]
 xor esi, esi
 call CONST
 mov r13d, eax
 test eax, eax
 cjmp LABEL257
 mov rdi, qword [rsp]
 xor esi, esi
 call CONST
 mov r13d, eax
 test eax, eax
 cjmp LABEL257
 mov rdi, qword [rsp]
 xor esi, esi
 call CONST
 mov rsi, qword [rbx + CONST]
 lea rbx, [rsp + CONST]
 mov edx, CONST
 mov rdi, rbx
 call CONST
 movzx r13d, byte [rip + CONST]
 mov byte [rsp + CONST], CONST
 test r13b, r13b
 cjmp LABEL275
 mov rdi, rbx
 xor esi, esi
 call CONST
 mov rdi, rax
 test rax, rax
 cjmp LABEL281
LABEL537:
 xor r14d, r14d
 lea rsi, [rip + CONST]
 cmp byte [rip + CONST], CONST
 cmovne rsi, r14
 call CONST
 mov rdi, rax
 test rax, rax
 cjmp LABEL289
 cmp byte [rip + CONST], CONST
 lea rsi, [rip + CONST]
 cmovne rsi, r14
 call CONST
 mov rdi, rax
 test rax, rax
 cjmp LABEL289
 cmp byte [rip + CONST], CONST
 lea rsi, [rip + CONST]
 cmovne rsi, r14
 call CONST
 mov r14, rax
 test rax, rax
 cjmp LABEL289
 cmp byte [rip + CONST], CONST
 cjmp LABEL289
 cmp byte [rip + CONST], CONST
 cjmp LABEL307
LABEL689:
 mov edx, CONST
 mov rsi, r14
 lea rdi, [rip + CONST]
 call CONST
LABEL289:
 test r13b, r13b
 cjmp LABEL281
LABEL538:
 cmp byte [rip + CONST], CONST
 cjmp LABEL315
LABEL281:
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 test eax, eax
 cjmp LABEL320
 cjmp LABEL321
LABEL564:
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 test eax, eax
 cjmp LABEL326
 cjmp LABEL327
LABEL551:
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 test eax, eax
 cjmp LABEL332
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 test eax, eax
 cjmp LABEL337
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 test eax, eax
 cjmp LABEL342
 cjmp LABEL343
LABEL577:
 lea rsi, [rip + CONST]
 mov rax, rsi
LABEL352:
 mov ecx, dword [rax]
 add rax, CONST
 lea edx, [rcx + CONST]
 not ecx
 and edx, ecx
 and edx, CONST
 cjmp LABEL352
 mov ecx, edx
 shr ecx, CONST
 test edx, CONST
 cmove edx, ecx
 lea rcx, [rax + CONST]
 cmove rax, rcx
 mov edi, edx
 add dil, dl
 sbb rax, CONST
 sub rax, rsi
 lea rsi, [rip + CONST]
 mov rdi, rsi
 mov r13, rsi
LABEL372:
 mov ecx, dword [r13]
 add r13, CONST
 lea edx, [rcx + CONST]
 not ecx
 and edx, ecx
 and edx, CONST
 cjmp LABEL372
 mov ecx, edx
 shr ecx, CONST
 test edx, CONST
 cmove edx, ecx
 lea rcx, [r13 + CONST]
 cmove r13, rcx
 mov ecx, edx
 add cl, dl
 sbb r13, CONST
 sub r13, rsi
 lea rsi, [rip + CONST]
 mov r8, rsi
 mov r11, rsi
LABEL392:
 mov ecx, dword [r11]
 add r11, CONST
 lea edx, [rcx + CONST]
 not ecx
 and edx, ecx
 and edx, CONST
 cjmp LABEL392
 mov ecx, edx
 lea r10, [rip + CONST]
 shr ecx, CONST
 test edx, CONST
 mov r9, r10
 cmove edx, ecx
 lea rcx, [r11 + CONST]
 cmove r11, rcx
 mov ecx, edx
 add cl, dl
 sbb r11, CONST
 sub r11, rsi
 mov rsi, r10
LABEL412:
 mov ecx, dword [rsi]
 add rsi, CONST
 lea edx, [rcx + CONST]
 not ecx
 and edx, ecx
 and edx, CONST
 cjmp LABEL412
 mov ecx, edx
 lea r15, [rip + CONST]
 shr ecx, CONST
 test edx, CONST
 cmove edx, ecx
 lea rcx, [rsi + CONST]
 cmove rsi, rcx
 mov ecx, edx
 add cl, dl
 mov rcx, r15
 sbb rsi, CONST
 sub rsi, r10
 mov r10, r15
LABEL432:
 mov r14d, dword [rcx]
 add rcx, CONST
 lea edx, [r14 + CONST]
 not r14d
 and edx, r14d
 and edx, CONST
 cjmp LABEL432
 mov r14d, edx
 shr r14d, CONST
 test edx, CONST
 cmove edx, r14d
 lea r14, [rcx + CONST]
 cmove rcx, r14
 mov r14d, edx
 add r14b, dl
 sbb rcx, CONST
 add rax, r13
 add rax, r11
 sub rcx, r15
 add rax, rsi
 add rax, rcx
 cmp rax, CONST
 cjmp LABEL448
 cmp byte [rip + CONST], CONST
 mov ecx, CONST
 mov esi, CONST
 lea rdx, [rip + CONST]
 lea rax, [rip + CONST]
 cmove rax, rdx
 push rdx
 mov edx, CONST
 push r10
 push rax
 xor eax, eax
 push r9
 lea r9, [rip + CONST]
 push r8
 lea r8, [rip + CONST]
 push rdi
 mov rdi, rbx
 call CONST
 add rsp, CONST
 xor edi, edi
 call CONST
 test eax, eax
 cjmp LABEL471
 call CONST
 call CONST
 test eax, eax
 cjmp LABEL475
 mov edi, CONST
 mov byte [rip + CONST], CONST
 call CONST
 test eax, eax
 cjmp LABEL480
 mov rdi, r12
 call CONST
 mov rsi, rax
 test rax, rax
 cjmp LABEL485
 mov ecx, CONST
 mov rdi, rbp
 rep movsd dword [rdi], dword [rsi]
 mov rdi, rsp
 mov qword [rsp + CONST], rbx
 call CONST
 test eax, eax
 cjmp LABEL493
 call CONST
 test eax, eax
 cjmp LABEL496
 call CONST
 test eax, eax
 cjmp LABEL499
LABEL729:
 mov edi, CONST
 xor esi, esi
 mov byte [rip + CONST], CONST
 call CONST
 mov rdi, rax
 test rax, rax
 cjmp LABEL506
 call CONST
 mov rbp, rax
 test rax, rax
 cjmp LABEL506
 lea rsi, [rip + CONST]
 mov edi, CONST
 call CONST
 mov rcx, r12
 mov esi, CONST
 xor eax, eax
 lea rdx, [rip + CONST]
 mov edi, CONST
 call CONST
 mov edi, CONST
 mov rsi, rbp
 call CONST
 mov rdi, rbp
 call CONST
LABEL596:
 lea rdi, [rip + CONST]
 call CONST
 mov edi, CONST
 call CONST
 call CONST
 xor edi, edi
 call CONST
LABEL275:
 mov rdi, rbx
 lea rsi, [rip + CONST]
 call CONST
 mov rdi, rax
 test rax, rax
 cjmp LABEL537
 jmp LABEL538
LABEL326:
 mov r13, qword [rip + CONST]
 xor edi, edi
 mov edx, CONST
 lea rsi, [rip + CONST]
 call CONST
 mov rdi, qword [rip + CONST]
 mov esi, CONST
 lea r8, [rip + CONST]
 mov rdx, rax
 mov rcx, r13
 xor eax, eax
 call CONST
 jmp LABEL551
LABEL320:
 mov r13, qword [rip + CONST]
 xor edi, edi
 mov edx, CONST
 lea rsi, [rip + CONST]
 call CONST
 mov rdi, qword [rip + CONST]
 mov esi, CONST
 lea r8, [rip + CONST]
 mov rdx, rax
 mov rcx, r13
 xor eax, eax
 call CONST
 jmp LABEL564
LABEL342:
 mov r13, qword [rip + CONST]
 xor edi, edi
 mov edx, CONST
 lea rsi, [rip + CONST]
 call CONST
 mov rdi, qword [rip + CONST]
 mov esi, CONST
 lea r8, [rip + CONST]
 mov rdx, rax
 mov rcx, r13
 xor eax, eax
 call CONST
 jmp LABEL577
LABEL448:
 mov r12, qword [rip + CONST]
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov rdi, qword [rip + CONST]
 mov esi, CONST
 mov rdx, rax
 mov rcx, r12
 xor eax, eax
 call CONST
 call CONST
LABEL506:
 mov rcx, r12
 mov esi, CONST
 mov edi, CONST
 xor eax, eax
 lea rdx, [rip + CONST]
 call CONST
 jmp LABEL596
LABEL315:
 cmp byte [rip + CONST], CONST
 cjmp LABEL281
 cmp byte [rip + CONST], CONST
 cjmp LABEL281
 cmp byte [rip + CONST], CONST
 cjmp LABEL281
 xor edi, edi
 mov edx, CONST
 lea rsi, [rip + CONST]
 call CONST
 mov rdx, r12
 mov edi, CONST
 mov rsi, rax
 xor eax, eax
 call CONST
 xor edi, edi
 mov edx, CONST
 lea rsi, [rip + CONST]
 call CONST
 mov rdi, rax
 call CONST
 cmp byte [rip + CONST], CONST
 cjmp LABEL619
 mov edi, CONST
 call CONST
 test al, al
 cjmp LABEL623
LABEL619:
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov esi, CONST
 lea rdi, [rip + CONST]
 mov rdx, rax
 call CONST
LABEL824:
 cmp byte [rip + CONST], CONST
 cjmp LABEL633
 mov edi, CONST
 call CONST
 test al, al
 cjmp LABEL637
LABEL633:
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov esi, CONST
 lea rdi, [rip + CONST]
 mov rdx, rax
 call CONST
LABEL840:
 cmp byte [rip + CONST], CONST
 cjmp LABEL647
 mov edi, CONST
 call CONST
 test al, al
 cjmp LABEL651
LABEL647:
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov esi, CONST
 lea rdi, [rip + CONST]
 mov rdx, rax
 call CONST
LABEL856:
 cmp byte [rip + CONST], CONST
 cjmp LABEL661
 mov edi, CONST
 call CONST
 test al, al
 cjmp LABEL665
LABEL661:
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov esi, CONST
 lea rdi, [rip + CONST]
 mov rdx, rax
 call CONST
LABEL872:
 cmp byte [rip + CONST], CONST
 cjmp LABEL281
 xor edi, edi
 mov edx, CONST
 lea rsi, [rip + CONST]
 call CONST
 mov esi, CONST
 lea rdi, [rip + CONST]
 mov rdx, rax
 call CONST
 jmp LABEL281
LABEL307:
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 jmp LABEL689
LABEL499:
 call CONST
 mov r13, qword [rip + CONST]
 mov edx, CONST
 xor edi, edi
 lea rsi, [rip + CONST]
 mov rbx, rax
 call CONST
 mov r8, rbx
 mov rcx, r13
 mov esi, CONST
 mov rdi, qword [rip + CONST]
 mov rdx, rax
 xor eax, eax
 call CONST
 mov edi, CONST
 xor esi, esi
 call CONST
 mov rdi, rax
 test rax, rax
 cjmp LABEL709
 call CONST
 mov rbp, rax
 test rax, rax
 cjmp LABEL709
 lea rsi, [rip + CONST]
 mov edi, CONST
 call CONST
 call CONST
 mov esi, CONST
 mov edi, CONST
 lea rdx, [rip + CONST]
 mov rcx, rax
 xor eax, eax
 call CONST
 mov rsi, rbp
 mov edi, CONST
 call CONST
 mov rdi, rbp
 call CONST
 jmp LABEL729
LABEL132:
 mov r12, qword [rip + CONST]
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov rdi, qword [rip + CONST]
 mov esi, CONST
 mov rdx, rax
 mov rcx, r12
 xor eax, eax
 call CONST
 mov edi, CONST
 xor esi, esi
 call CONST
 mov rdi, rax
 test rax, rax
 cjmp LABEL746
 call CONST
 mov rbp, rax
 test rax, rax
 cjmp LABEL746
 lea rsi, [rip + CONST]
 mov edi, CONST
 call CONST
 call CONST
 mov esi, CONST
 mov edi, CONST
 lea rdx, [rip + CONST]
 mov ecx, eax
LABEL1003:
 xor eax, eax
 call CONST
LABEL1030:
 mov edi, CONST
 mov rsi, rbp
 call CONST
 mov rdi, rbp
 call CONST
LABEL782:
 call CONST
LABEL709:
 call CONST
 mov esi, CONST
 mov edi, CONST
 lea rdx, [rip + CONST]
 mov rcx, rax
 xor eax, eax
 call CONST
 jmp LABEL729
LABEL746:
 call CONST
 mov esi, CONST
 mov edi, CONST
 lea rdx, [rip + CONST]
 mov ecx, eax
 xor eax, eax
 call CONST
 jmp LABEL782
 xor edi, edi
 call CONST
LABEL52:
 mov edi, CONST
 call CONST
LABEL186:
 mov rdi, qword [rsp]
 mov esi, r13d
 call CONST
 mov esi, CONST
 mov edi, CONST
 lea rdx, [rip + CONST]
 mov rcx, rax
 xor eax, eax
 call CONST
 jmp LABEL796
LABEL64:
 mov r12, qword [rip + CONST]
 mov edx, CONST
 lea rsi, [rip + CONST]
LABEL876:
 xor edi, edi
 call CONST
 mov rdi, qword [rip + CONST]
 mov rcx, r12
 mov esi, CONST
 mov rdx, rax
 xor eax, eax
 call CONST
 jmp LABEL210
LABEL623:
 xor edi, edi
 mov edx, CONST
 lea rsi, [rip + CONST]
 call CONST
 xor edi, edi
 mov edx, CONST
 lea rsi, [rip + CONST]
 mov r13, rax
 call CONST
 lea rcx, [rip + CONST]
 mov rdx, r13
 mov edi, CONST
 mov rsi, rax
 xor eax, eax
 call CONST
 jmp LABEL824
LABEL637:
 xor edi, edi
 mov edx, CONST
 lea rsi, [rip + CONST]
 call CONST
 xor edi, edi
 mov edx, CONST
 lea rsi, [rip + CONST]
 mov r13, rax
 call CONST
 lea rcx, [rip + CONST]
 mov rdx, r13
 mov edi, CONST
 mov rsi, rax
 xor eax, eax
 call CONST
 jmp LABEL840
LABEL651:
 xor edi, edi
 mov edx, CONST
 lea rsi, [rip + CONST]
 call CONST
 xor edi, edi
 mov edx, CONST
 lea rsi, [rip + CONST]
 mov r13, rax
 call CONST
 lea rcx, [rip + CONST]
 mov rdx, r13
 mov edi, CONST
 mov rsi, rax
 xor eax, eax
 call CONST
 jmp LABEL856
LABEL665:
 xor edi, edi
 mov edx, CONST
 lea rsi, [rip + CONST]
 call CONST
 xor edi, edi
 mov edx, CONST
 lea rsi, [rip + CONST]
 mov r13, rax
 call CONST
 lea rcx, [rip + CONST]
 mov rdx, r13
 mov edi, CONST
 mov rsi, rax
 xor eax, eax
 call CONST
 jmp LABEL872
LABEL155:
 mov r12, qword [rip + CONST]
 mov edx, CONST
 lea rsi, [rip + CONST]
 jmp LABEL876
LABEL332:
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 mov r12, qword [rip + CONST]
 call CONST
 lea r8, [rip + CONST]
 mov rdx, rax
LABEL907:
 mov rcx, r12
 jmp LABEL885
LABEL142:
 mov r12, qword [rip + CONST]
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov rdi, qword [rip + CONST]
 mov esi, CONST
 mov rdx, rax
 mov rcx, r12
 xor eax, eax
 call CONST
 call CONST
 mov edi, CONST
 call CONST
LABEL337:
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 mov r12, qword [rip + CONST]
 call CONST
 lea r8, [rip + CONST]
 mov rdx, rax
 jmp LABEL907
LABEL343:
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 mov r12, qword [rip + CONST]
 call CONST
 lea r8, [rip + CONST]
 mov rdx, rax
 jmp LABEL907
LABEL480:
 call CONST
 mov r12, qword [rip + CONST]
 mov edx, CONST
 lea rsi, [rip + CONST]
 mov rbx, rax
LABEL1036:
 xor edi, edi
 call CONST
 mov r8, rbx
 mov rdx, rax
 jmp LABEL907
LABEL485:
 call CONST
 mov r13, qword [rip + CONST]
 mov edx, CONST
 xor edi, edi
 lea rsi, [rip + CONST]
 mov rbx, rax
 call CONST
 mov r9, rbx
 mov r8, r12
 mov rcx, r13
 mov rdx, rax
LABEL970:
 mov rdi, qword [rip + CONST]
 mov esi, CONST
 xor eax, eax
 call CONST
 jmp LABEL782
LABEL327:
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 mov r12, qword [rip + CONST]
 call CONST
 lea r8, [rip + CONST]
 mov rdx, rax
 jmp LABEL907
LABEL321:
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 mov r12, qword [rip + CONST]
 call CONST
 lea r8, [rip + CONST]
 mov rdx, rax
 jmp LABEL907
LABEL493:
 mov rbp, qword [rsp]
 call CONST
 mov r12, qword [rip + CONST]
 mov edx, CONST
 xor edi, edi
 lea rsi, [rip + CONST]
 mov rbx, rax
 call CONST
 mov r9, rbp
 mov r8, rbx
 mov rcx, r12
 mov rdx, rax
 jmp LABEL970
LABEL496:
 call CONST
 mov r12, qword [rip + CONST]
 mov edx, CONST
 xor edi, edi
 lea rsi, [rip + CONST]
 mov rbx, rax
 call CONST
 mov r8, rbx
 mov rcx, r12
 mov esi, CONST
 mov rdi, qword [rip + CONST]
 mov rdx, rax
 xor eax, eax
 call CONST
 mov edi, CONST
 xor esi, esi
 call CONST
 mov rdi, rax
 test rax, rax
 cjmp LABEL990
 call CONST
 mov rbp, rax
 test rax, rax
 cjmp LABEL990
 lea rsi, [rip + CONST]
 mov edi, CONST
 call CONST
 call CONST
 mov esi, CONST
 mov edi, CONST
 lea rdx, [rip + CONST]
 mov rcx, rax
 jmp LABEL1003
LABEL471:
 mov edx, CONST
 mov rbp, qword [rip + CONST]
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov rdi, rax
 mov rsi, rbp
 call CONST
 mov edi, CONST
 xor esi, esi
 call CONST
 mov rdi, rax
 test rax, rax
 cjmp LABEL1017
 call CONST
 mov rbp, rax
 test rax, rax
 cjmp LABEL1017
 lea rsi, [rip + CONST]
 mov edi, CONST
 call CONST
 lea rdx, [rip + CONST]
 mov esi, CONST
 xor eax, eax
 mov edi, CONST
 call CONST
 jmp LABEL1030
LABEL475:
 call CONST
 mov r12, qword [rip + CONST]
 mov edx, CONST
 lea rsi, [rip + CONST]
 mov rbx, rax
 jmp LABEL1036
LABEL990:
 call CONST
 mov esi, CONST
 mov edi, CONST
 lea rdx, [rip + CONST]
 mov rcx, rax
 xor eax, eax
 call CONST
 jmp LABEL782
LABEL1017:
 lea rdx, [rip + CONST]
 mov esi, CONST
 mov edi, CONST
 xor eax, eax
 call CONST
 jmp LABEL782
