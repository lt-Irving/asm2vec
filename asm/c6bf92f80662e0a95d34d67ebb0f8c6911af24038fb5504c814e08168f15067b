 .name main
 .offset 0000000000002680
 .file [
 endbr64
 push r12
 mov r12, rsi
 push rbp
 push rbx
 mov ebx, edi
 mov rdi, qword [rsi]
 call CONST
 lea rsi, [rip + CONST]
 mov edi, CONST
 call CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 lea rdi, [rip + CONST]
 call CONST
 lea rdi, [rip + CONST]
 mov dword [rip + CONST], CONST
 call CONST
 mov qword [rip + CONST], r12
 cmp ebx, CONST
 cjmp LABEL21
 cmp ebx, CONST
 cjmp LABEL23
 movsxd rax, ebx
 lea rsi, [rip + CONST]
 mov rdi, qword [r12 + rax*CONST + CONST]
 call CONST
 test eax, eax
 cjmp LABEL23
 mov dword [rip + CONST], CONST
 lea eax, [rbx + CONST]
 lea edi, [rbx + CONST]
 mov dword [rip + CONST], eax
 call CONST
 movsxd rdx, dword [rip + CONST]
 cmp edx, dword [rip + CONST]
 cjmp LABEL37
 xor eax, CONST
 movzx r12d, al
LABEL65:
 mov eax, r12d
 pop rbx
 pop rbp
 pop r12
 ret
LABEL21:
 mov rbp, qword [r12 + CONST]
 lea rsi, [rip + CONST]
 mov rdi, rbp
 call CONST
 test eax, eax
 cjmp LABEL50
 lea rsi, [rip + CONST]
 mov rdi, rbp
 call CONST
 mov r12d, eax
 test eax, eax
 cjmp LABEL56
 lea rsi, [rip + CONST]
 mov rdi, rbp
 call CONST
 test eax, eax
 cjmp LABEL23
 mov dword [rip + CONST], CONST
 mov r12d, CONST
 mov dword [rip + CONST], CONST
 jmp LABEL65
LABEL56:
 push rax
 mov rcx, qword [rip + CONST]
 xor eax, eax
 lea rdx, [rip + CONST]
 push CONST
 mov rdi, qword [rip + CONST]
 lea r9, [rip + CONST]
 lea r8, [rip + CONST]
 lea rsi, [rip + CONST]
 call CONST
 pop rdx
 pop rcx
 jmp LABEL65
LABEL23:
 lea rdi, [rip + CONST]
 call CONST
 mov edx, CONST
 lea rsi, [rip + CONST]
 mov rbp, rax
LABEL96:
 xor edi, edi
 call CONST
 mov rsi, rbp
 mov rdi, rax
 xor eax, eax
 call CONST
LABEL37:
 mov rax, qword [rip + CONST]
 mov rdi, qword [rax + rdx*CONST]
 call CONST
 mov edx, CONST
 lea rsi, [rip + CONST]
 mov rbp, rax
 jmp LABEL96
LABEL50:
 xor edi, edi
 call CONST
