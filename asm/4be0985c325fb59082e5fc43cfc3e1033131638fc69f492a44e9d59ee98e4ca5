 .name fcn.00006cb0
 .offset 0000000000006cb0
 .file date
 push r12
 mov r12, rsi
 lea rcx, [rip + CONST]
 mov esi, CONST
 push rbp
 push rbx
 movsxd rbx, edi
 mov rdi, r12
 mov rbp, rbx
 mov eax, ebx
 imul rbx, rbx, CONST
 mov edx, ebp
 sar eax, CONST
 sar edx, CONST
 and eax, CONST
 lea r8d, [rax + CONST]
 xor eax, eax
 shr rbx, CONST
 add ebx, ebp
 sar ebx, CONST
 sub ebx, edx
 mov edx, ebx
 sar edx, CONST
 mov r9d, edx
 xor r9d, ebx
 imul ebx, ebx, CONST
 sub r9d, edx
 mov rdx, CONST
 call CONST
 sub ebp, ebx
 cjmp LABEL30
 cdqe
 mov ecx, CONST
 mov edi, CONST
 lea rdx, [r12 + rax]
 mov eax, ebp
 sar eax, CONST
 mov byte [rdx], CONST
 xor ebp, eax
 sub ebp, eax
 mov eax, ebp
 imul rax, rcx
 shr rax, CONST
 mov ecx, eax
 imul esi, eax, CONST
 imul rcx, rdi
 shr rcx, CONST
 lea r8d, [rcx + CONST]
 lea ecx, [rcx + rcx*CONST]
 add ecx, ecx
 mov byte [rdx + CONST], r8b
 sub eax, ecx
 lea rcx, [rdx + CONST]
 add eax, CONST
 sub ebp, esi
 mov byte [rdx + CONST], al
 cjmp LABEL56
LABEL75:
 mov byte [rcx], CONST
LABEL30:
 mov rax, r12
 pop rbx
 pop rbp
 pop r12
 ret
LABEL56:
 mov eax, ebp
 mov byte [rdx + CONST], CONST
 imul rax, rdi
 shr rax, CONST
 lea ecx, [rax + CONST]
 lea eax, [rax + rax*CONST]
 add eax, eax
 mov byte [rdx + CONST], cl
 lea rcx, [rdx + CONST]
 sub ebp, eax
 add ebp, CONST
 mov byte [rdx + CONST], bpl
 jmp LABEL75
