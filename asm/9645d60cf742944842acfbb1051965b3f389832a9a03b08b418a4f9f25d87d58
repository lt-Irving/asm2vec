 .name sym.bind_variable
 .offset 0000000000050f10
 .file bash
 endbr64
 push r15
 push r14
 push r13
 mov r13, rdi
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov r15, qword [rip + CONST]
 test rsi, rsi
 mov qword [rsp], rsi
 setne bpl
 mov dword [rsp + CONST], edx
 test r15, r15
 cjmp LABEL15
 mov rbx, qword [rip + CONST]
 test rbx, rbx
 cjmp LABEL18
 test bpl, bpl
 cjmp LABEL18
LABEL184:
 xor edx, edx
 mov rsi, rbx
 mov rdi, r13
 call CONST
 test rax, rax
 cjmp LABEL26
 mov qword [rip + CONST], rbx
 mov rbx, qword [rax + CONST]
 test rbx, rbx
 cjmp LABEL26
 mov rdi, qword [rbx + CONST]
 test rdi, rdi
 cjmp LABEL33
 call CONST
LABEL33:
 mov r14, qword [rsp]
 mov rdi, r14
 call CONST
 lea rdi, [rax + CONST]
 call CONST
 mov rsi, r14
 mov rdi, rax
 call CONST
 mov rdi, qword [rbx + CONST]
 mov qword [rbx + CONST], rax
 test rdi, rdi
 cjmp LABEL26
 call CONST
 mov qword [rbx + CONST], CONST
LABEL26:
 mov r15, qword [rip + CONST]
 test r15, r15
 cjmp LABEL18
 nop dword [rax + rax]
LABEL69:
 mov rax, qword [rip + CONST]
 mov rsi, qword [rsp]
 xor ecx, ecx
 mov rdi, r13
 mov r8d, dword [rsp + CONST]
 mov rdx, qword [rax + CONST]
LABEL90:
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 jmp CONST
LABEL71:
 mov r15, qword [r15 + CONST]
 test r15, r15
 cjmp LABEL69
LABEL18:
 test byte [r15 + CONST], CONST
 cjmp LABEL71
 mov rbx, qword [r15 + CONST]
 xor edx, edx
 mov rdi, r13
 mov rsi, rbx
 call CONST
 test rax, rax
 cjmp LABEL71
 mov qword [rip + CONST], rbx
 mov rbx, qword [rax + CONST]
 test rbx, rbx
 cjmp LABEL71
 test byte [rbx + CONST], CONST
 cjmp LABEL84
LABEL152:
 mov rdx, qword [r15 + CONST]
 mov r8d, dword [rsp + CONST]
 xor ecx, ecx
 mov rsi, qword [rsp]
 mov rdi, qword [rbx]
 jmp LABEL90
LABEL84:
 mov r12, r15
 mov rbp, rbx
 mov r14, r15
 nop dword [rax]
LABEL109:
 lea rsi, [r14 + CONST]
 mov rdi, rbp
 call CONST
 lea rcx, [rip + CONST]
 cmp rax, rcx
 cjmp LABEL100
 test rax, rax
 cjmp LABEL102
 test byte [rax + CONST], CONST
 cjmp LABEL104
 mov r12, r14
 mov rbp, rax
LABEL102:
 mov r14, qword [r14 + CONST]
 test r14, r14
 cjmp LABEL109
 test byte [rbp + CONST], CONST
 cjmp LABEL111
 mov r14, rbx
 mov rbp, r15
 nop word [rax + rax]
LABEL126:
 lea rsi, [rbp + CONST]
 mov rdi, r14
 call CONST
 lea rdx, [rip + CONST]
 cmp rax, rdx
 cjmp LABEL120
 test rax, rax
 cmovne r12, rbp
 mov rbp, qword [rbp + CONST]
 cmovne r14, rax
 test rbp, rbp
 cjmp LABEL126
 test byte [r14 + CONST], CONST
 cjmp LABEL71
LABEL193:
 mov rdi, qword [r14 + CONST]
 test rdi, rdi
 cjmp LABEL131
 xor esi, esi
 call CONST
 test eax, eax
 cjmp LABEL135
 mov rdi, qword [r14 + CONST]
 mov edx, dword [rsp + CONST]
 mov rsi, qword [rsp]
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 jmp CONST
LABEL111:
 lea rax, [rip + CONST]
 cmp rbp, rax
 cjmp LABEL100
 mov r15, r12
 mov rbx, rbp
 jmp LABEL152
LABEL104:
 mov r15, r14
 mov rbx, rax
 jmp LABEL152
LABEL120:
 lea rax, [rip + CONST]
 test byte [rax + CONST], CONST
 cjmp LABEL158
LABEL100:
 mov rbp, qword [rbx]
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov rdi, rax
 mov rsi, rbp
 xor eax, eax
 call CONST
 mov rdi, qword [rbx]
 mov edx, dword [rsp + CONST]
 mov rsi, qword [rsp]
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 jmp CONST
LABEL15:
 call CONST
 mov rbx, qword [rip + CONST]
 test rbx, rbx
 cjmp LABEL26
 test bpl, bpl
 cjmp LABEL184
 jmp LABEL26
LABEL135:
 mov rdx, qword [r12 + CONST]
 mov rdi, qword [r14 + CONST]
 xor ecx, ecx
 mov r8d, dword [rsp + CONST]
 mov rsi, qword [rsp]
 jmp LABEL90
LABEL158:
 lea r14, [rip + CONST]
 jmp LABEL193
LABEL131:
 mov rdx, qword [r12 + CONST]
 mov r8d, dword [rsp + CONST]
 xor ecx, ecx
 mov rsi, qword [rsp]
 mov rdi, qword [r14]
 jmp LABEL90
