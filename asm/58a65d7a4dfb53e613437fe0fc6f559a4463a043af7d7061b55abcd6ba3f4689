 .name fcn.000244d0
 .offset 00000000000244d0
 .file diff
 push r15
 push r14
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov r12, qword [rsi + CONST]
 test r12, r12
 cjmp LABEL9
 mov rbp, rdi
 mov r13, rsi
 cmp rsi, r12
 cjmp LABEL13
 lea rdx, [rsi + CONST]
 mov eax, CONST
 cmp r12, rdx
 cjmp LABEL17
LABEL13:
 cmp byte [r12], CONST
 lea rbx, [rbp + CONST]
 cjmp LABEL20
 nop dword [rax + rax]
LABEL38:
 mov rsi, r12
 mov rdi, rbx
 call CONST
 test eax, eax
 cjmp LABEL26
LABEL48:
 cmp byte [rbx], CONST
 cjmp LABEL28
 lea r14, [rbp + CONST]
 cmp r14, rbx
 cjmp LABEL31
 cmp byte [rbp + CONST], CONST
 cjmp LABEL33
LABEL28:
 mov rdi, rbx
 call CONST
 lea rbx, [rbx + rax + CONST]
 cmp byte [rbx], CONST
 cjmp LABEL38
 mov rax, qword [rbp]
 test rax, rax
 cjmp LABEL38
 lea rbx, [rax + CONST]
 mov rsi, r12
 mov rbp, rax
 mov rdi, rbx
 call CONST
 test eax, eax
 cjmp LABEL48
 nop dword [rax]
LABEL26:
 mov qword [r13 + CONST], rbx
 mov eax, CONST
LABEL17:
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL20:
 lea rbx, [rip + CONST]
 jmp LABEL26
LABEL9:
 add rsp, CONST
 mov eax, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL31:
 mov rdi, r12
 call CONST
 lea r15, [rax + CONST]
 mov rax, rbx
 sub rax, r14
 mov rdx, rax
 not rdx
 cmp rdx, r15
 cjmp LABEL79
 call CONST
 mov dword [rax], CONST
 xor eax, eax
 jmp LABEL17
LABEL33:
 mov rdi, r12
 call CONST
 lea r15, [rax + CONST]
 xor eax, eax
LABEL79:
 add rax, r15
 cmp rax, CONST
 cjmp LABEL90
 mov rdx, r15
 mov rsi, r12
 mov rdi, rbx
 call CONST
 mov byte [rbx + r15], CONST
 jmp LABEL26
LABEL90:
 mov rdi, r12
 call CONST
 mov qword [rbp], rax
 test rax, rax
 cjmp LABEL101
 mov byte [rax + CONST], CONST
 lea rbx, [rax + CONST]
 jmp LABEL26
LABEL101:
 xor eax, eax
 jmp LABEL17
