 .name fcn.0001a350
 .offset 000000000001a350
 .file diff
 push r15
 pxor xmm0, xmm0
 push r14
 push r13
 mov r13, rdx
 lea rdx, [rsi + rsi*CONST]
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov qword [rsp + CONST], rcx
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 mov rax, qword [rdi + CONST]
 movaps xmmword [rsp + CONST], xmm0
 mov qword [rsp + CONST], CONST
 lea rbp, [rax + rdx*CONST]
 mov r10, qword [rbp + CONST]
 test r10, r10
 cjmp LABEL20
 lea rax, [rsp + CONST]
 mov r12, rdi
 mov r14, rsi
 xor ebx, ebx
 mov qword [rsp + CONST], rax
 jmp LABEL26
LABEL72:
 test rax, rax
 cjmp LABEL28
 mov rdi, qword [r13 + CONST]
 lea rsi, [r13 + CONST]
 mov rdx, r8
 call CONST
 test rax, rax
 cjmp LABEL28
LABEL80:
 mov rdx, qword [r12 + CONST]
 mov rsi, qword [rsp + CONST]
 mov rdi, qword [rsp + CONST]
 add rdx, r9
 call CONST
 test eax, eax
 cjmp LABEL41
 mov r10, qword [rbp + CONST]
 nop dword [rax]
LABEL50:
 add rbx, CONST
 cmp r10, rbx
 cjmp LABEL46
LABEL26:
 mov rax, qword [rbp + CONST]
 mov rax, qword [rax + rbx*CONST]
 cmp r14, rax
 cjmp LABEL50
 mov rdx, rax
 shl rdx, CONST
 add rdx, qword [r12]
 test byte [rdx + CONST], CONST
 cjmp LABEL50
 lea r9, [rax + rax*CONST]
 mov rcx, qword [r12 + CONST]
 lea r11, [rbp + CONST]
 mov rdi, r10
 shl r9, CONST
 mov rsi, r11
 add rcx, r9
 mov r15, qword [rcx + CONST]
 mov qword [rsp + CONST], rcx
 mov r8, qword [r15]
 mov rdx, r8
 mov qword [rsp], r8
 call CONST
 mov rcx, qword [rsp + CONST]
 mov r8, qword [rsp]
 cmp qword [rcx + CONST], CONST
 cjmp LABEL72
 test rax, rax
 cjmp LABEL50
 mov rdi, qword [r13 + CONST]
 lea rsi, [r13 + CONST]
 mov rdx, r8
 call CONST
 test rax, rax
 cjmp LABEL80
 jmp LABEL50
LABEL28:
 mov r15, qword [r15 + CONST]
 test r15, r15
 cjmp LABEL50
 mov rdx, r15
 mov rsi, r11
 mov rdi, r10
 call CONST
 test rax, rax
 cjmp LABEL50
 mov rdi, qword [r13 + CONST]
 lea rsi, [r13 + CONST]
 call CONST
 test rax, rax
 cjmp LABEL50
 jmp LABEL80
LABEL46:
 xor r9d, r9d
 lea rbx, [rsp + CONST]
 test r10, r10
 cjmp LABEL100
 nop dword [rax]
LABEL127:
 mov rax, qword [rbp + CONST]
 mov rdi, qword [rsp + CONST]
 mov rsi, rbx
 mov r10, qword [rax + r9*CONST]
 mov rdx, r10
 call CONST
 test rax, rax
 cjmp LABEL109
 mov r11, qword [r13 + CONST]
 lea r12, [r13 + CONST]
 mov rsi, r12
 mov rdi, r11
 call CONST
 sub rax, CONST
 mov rdx, rax
 cjmp LABEL109
 cmp rax, r11
 cjmp LABEL109
 sub r11, CONST
 lea rdi, [r13 + CONST]
 mov rsi, r12
 mov qword [r13 + CONST], r11
 call CONST
LABEL109:
 add r9, CONST
 cmp qword [rbp + CONST], r9
 cjmp LABEL127
LABEL100:
 mov rdi, qword [rsp + CONST]
LABEL148:
 call CONST
 xor eax, eax
LABEL146:
 mov rsi, qword [rsp + CONST]
 xor rsi, qword fs:[CONST]
 cjmp LABEL133
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL41:
 mov rdi, qword [rsp + CONST]
 mov dword [rsp], eax
 call CONST
 mov eax, dword [rsp]
 jmp LABEL146
LABEL20:
 xor edi, edi
 jmp LABEL148
LABEL133:
 call CONST
