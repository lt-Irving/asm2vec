 .name sym.initialize_shell_variables
 .offset 0000000000052ab0
 .file bash
 endbr64
 push r15
 mov r15, rdi
 push r14
 push r13
 push r12
 push rbp
 mov ebp, esi
 push rbx
 sub rsp, CONST
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 call CONST
 test r15, r15
 cjmp LABEL15
 mov r13, qword [r15]
 test r13, r13
 cjmp LABEL15
 nop dword [rax]
LABEL31:
 mov r12, r13
 jmp LABEL21
LABEL27:
 cmp eax, CONST
 cjmp LABEL23
LABEL21:
 movsx eax, byte [r12]
 add r12, CONST
 test eax, eax
 cjmp LABEL27
LABEL123:
 add r15, CONST
LABEL169:
 mov r13, qword [r15]
 test r13, r13
 cjmp LABEL31
LABEL15:
 call CONST
 mov rsi, qword [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 call CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 mov dword [rip + CONST], eax
 call CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov eax, dword [rip + CONST]
 test eax, eax
 cjmp LABEL46
LABEL616:
 mov r11d, dword [rip + CONST]
 test r11d, r11d
 cjmp LABEL49
 xor edx, edx
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
LABEL609:
 xor edx, edx
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov rdi, rax
 call CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov rsi, qword [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov r10d, dword [rip + CONST]
 test r10d, r10d
 cjmp LABEL74
 mov r9d, dword [rip + CONST]
 lea rax, [rip + CONST]
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 test r9d, r9d
 cmove rsi, rax
 call CONST
 or dword [rax + CONST], CONST
LABEL74:
 mov edi, CONST
 call CONST
 call CONST
 xor edx, edx
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 xor edi, edi
 or dword [rax + CONST], CONST
 call CONST
 xor edx, edx
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 cmp dword [rip + CONST], CONST
 mov dword [rip + CONST], CONST
 cjmp LABEL99
LABEL737:
 mov rbp, qword [rip + CONST]
 movzx eax, byte [rbp]
 cmp al, CONST
 cjmp LABEL103
 cmp al, CONST
 cjmp LABEL105
 cmp byte [rbp + CONST], CONST
 cjmp LABEL107
LABEL105:
 mov rdi, rbp
 call CONST
 mov r12, rax
 test rax, rax
 cjmp LABEL112
 mov rdi, rax
 call CONST
 mov rdi, r12
 mov rbp, rax
 call CONST
 jmp LABEL118
LABEL23:
 mov rax, r12
 sub rax, r13
 mov edx, eax
 sub edx, CONST
 cjmp LABEL123
 movsxd rdx, edx
 mov ecx, ebp
 lea rbx, [r13 + rdx]
 mov byte [rbx], CONST
 or ecx, dword [rip + CONST]
 movzx ecx, byte [r13]
 cjmp LABEL130
 cmp cl, CONST
 cjmp LABEL132
LABEL130:
 cmp cl, CONST
 cjmp LABEL134
LABEL185:
 xor r14d, r14d
LABEL196:
 mov rdi, r13
 call CONST
 test eax, eax
 cjmp LABEL139
 xor edx, edx
 mov rsi, r12
 mov rdi, r13
 call CONST
 mov rcx, rax
 test rax, rax
 cjmp LABEL146
 mov eax, dword [rax + CONST]
 mov edx, eax
 or eax, CONST
 or edx, CONST
 test r14d, r14d
 cmove eax, edx
 mov dword [rcx + CONST], eax
LABEL177:
 mov dword [rip + CONST], CONST
 mov byte [rbx], CONST
LABEL599:
 test byte [rcx + CONST], CONST
 cjmp LABEL123
 mov rdi, r13
 mov qword [rsp + CONST], rcx
 add r15, CONST
 call CONST
 lea rdi, [rax + CONST]
 call CONST
 mov rsi, r13
 mov rdi, rax
 call CONST
 mov rcx, qword [rsp + CONST]
 mov qword [rcx + CONST], rax
 jmp LABEL169
LABEL139:
 mov rsi, r12
 mov rdi, r13
 call CONST
 mov rcx, rax
 test rax, rax
 cjmp LABEL146
 or dword [rax + CONST], CONST
 jmp LABEL177
LABEL134:
 mov ecx, CONST
 mov rsi, r13
 lea rdi, [rip + CONST]
 repe cmpsb byte [rsi], byte [rdi]
 seta al
 sbb al, CONST
 test al, al
 cjmp LABEL185
 lea rdi, [rip + CONST]
 call CONST
 test rax, rax
 cjmp LABEL185
 mov edx, dword [rax + CONST]
 mov r14d, edx
 and edx, CONST
 shr r14d, CONST
 mov dword [rax + CONST], edx
 and r14d, CONST
 jmp LABEL196
LABEL762:
 mov edx, CONST
 xor edi, edi
 lea rsi, [rip + CONST]
 mov dword [rip + CONST], CONST
 call CONST
 mov rsi, r14
 mov rdi, rax
 xor eax, eax
 call CONST
 mov rax, qword [rsp + CONST]
 mov byte [rax], CONST
 nop dword [rax]
LABEL146:
 mov byte [rbx], CONST
 add r15, CONST
 jmp LABEL169
LABEL99:
 mov r8d, dword [rip + CONST]
 test r8d, r8d
 cjmp LABEL214
LABEL736:
 mov rbp, qword [rip + CONST]
 cmp byte [rbp], CONST
 cjmp LABEL103
LABEL675:
 mov rbp, qword [rip + CONST]
 test rbp, rbp
 cjmp LABEL103
 call CONST
 mov rbp, qword [rip + CONST]
LABEL103:
 mov rdi, rbp
 call CONST
 lea rdi, [rax + CONST]
 call CONST
 mov rsi, rbp
 mov rdi, rax
 call CONST
 mov rbp, rax
LABEL118:
 xor edx, edx
 mov rsi, rbp
 lea rdi, [rip + CONST]
 call CONST
 mov rdi, rbp
 call CONST
 lea rdi, [rip + CONST]
 call CONST
 test rax, rax
 cjmp LABEL240
LABEL647:
 call CONST
 xor edx, edx
 lea r12, [rsp + CONST]
 xor r13d, r13d
 mov rsi, rax
 lea rdi, [rip + CONST]
 call CONST
 lea rdi, [rip + CONST]
 call CONST
 lea rdi, [rip + CONST]
 call CONST
 mov rsi, qword [rip + CONST]
 mov edx, CONST
 mov rdi, r12
 mov rbp, qword [rax + CONST]
 mov rbx, rax
 call CONST
 mov esi, CONST
 mov rdi, r12
 call CONST
 test rax, rax
 cjmp LABEL262
 mov byte [rax], CONST
 lea r13, [rax + CONST]
LABEL262:
 mov rdx, r12
 xor esi, esi
 mov rdi, rbp
 call CONST
 mov rdx, r13
 mov esi, CONST
 mov rdi, rbp
 call CONST
 lea r13, [rsp + CONST]
 mov edx, CONST
 movsxd rdi, dword [rip + CONST]
 mov rsi, r13
 call CONST
 mov esi, CONST
 mov rdi, rbp
 mov rdx, rax
 call CONST
 movsxd rdi, dword [rip + CONST]
 mov edx, CONST
 mov rsi, r13
 call CONST
 mov esi, CONST
 mov rdi, rbp
 mov rdx, rax
 call CONST
 mov rdx, qword [rip + CONST]
 mov esi, CONST
 mov rdi, rbp
 call CONST
 mov esi, CONST
 lea rdx, [rip + CONST]
 mov rdi, rbp
 call CONST
 mov rsi, qword [rip + CONST]
 or dword [rbx + CONST], CONST
 test rsi, rsi
 cjmp LABEL301
 xor edx, edx
 lea rdi, [rip + CONST]
 call CONST
LABEL301:
 lea rdi, [rip + CONST]
 call CONST
 test rax, rax
 cjmp LABEL308
LABEL640:
 test byte [rax + CONST], CONST
 cjmp LABEL310
LABEL602:
 mov edi, dword [rip + CONST]
 test edi, edi
 cjmp LABEL313
 mov esi, dword [rip + CONST]
 lea rax, [rip + CONST]
 lea rdi, [rip + CONST]
 test esi, esi
 cmove rdi, rax
 xor esi, esi
 call CONST
 lea rdi, [rip + CONST]
 mov rbp, rax
 mov rsi, rax
 call CONST
 mov rdi, rbp
 call CONST
LABEL313:
 call CONST
 mov ecx, dword [rip + CONST]
 test ecx, ecx
 cjmp LABEL330
LABEL625:
 mov edi, dword [rip + CONST]
 mov edx, CONST
 mov rsi, r12
 call CONST
 lea rdi, [rip + CONST]
 mov rbp, rax
 call CONST
 test rax, rax
 cjmp LABEL339
LABEL730:
 mov eax, dword [rip + CONST]
 cmp eax, dword [rip + CONST]
 cjmp LABEL342
 mov edi, eax
 mov edx, CONST
 mov rsi, r12
 call CONST
 mov rbp, rax
LABEL342:
 lea rdi, [rip + CONST]
 call CONST
 test rax, rax
 cjmp LABEL351
LABEL724:
 lea rdi, [rip + CONST]
 call CONST
 test rax, rax
 cjmp LABEL355
 test byte [rax + CONST], CONST
 cjmp LABEL357
LABEL355:
 lea rdi, [rip + CONST]
 call CONST
 lea rdi, [rip + CONST]
 call CONST
 lea rdi, [rip + CONST]
 call CONST
 mov rbp, rax
 test rax, rax
 cjmp LABEL366
 mov rdi, qword [rax + CONST]
 lea rsi, [rip + CONST]
 call CONST
 test eax, eax
 cjmp LABEL371
LABEL517:
 mov rbp, qword [rbp + CONST]
LABEL366:
 xor edx, edx
 mov rsi, rbp
 lea rdi, [rip + CONST]
 call CONST
 lea rbx, [rip + CONST]
 xor edx, edx
 xor esi, esi
 mov qword [rax + CONST], rbx
 lea rbx, [rip + CONST]
 lea rdi, [rip + CONST]
 mov qword [rax + CONST], rbx
 lea rbx, [rip + CONST]
 call CONST
 xor edx, edx
 xor esi, esi
 lea rdi, [rip + CONST]
 mov qword [rax + CONST], rbx
 lea rbx, [rip + CONST]
 mov qword [rax + CONST], rbx
 lea rbx, [rip + CONST]
 call CONST
 xor edx, edx
 xor esi, esi
 lea rdi, [rip + CONST]
 mov qword [rax + CONST], rbx
 lea rbx, [rip + CONST]
 mov qword [rax + CONST], CONST
 call CONST
 xor edx, edx
 xor esi, esi
 lea rdi, [rip + CONST]
 mov qword [rax + CONST], rbx
 lea rbx, [rip + CONST]
 mov qword [rax + CONST], rbx
 lea rbx, [rip + CONST]
 call CONST
 xor edx, edx
 xor esi, esi
 lea rdi, [rip + CONST]
 or dword [rax + CONST], CONST
 mov qword [rax + CONST], rbx
 lea rbx, [rip + CONST]
 mov qword [rax + CONST], rbx
 lea rbx, [rip + CONST]
 call CONST
 lea rcx, [rip + CONST]
 xor edx, edx
 xor esi, esi
 or dword [rax + CONST], CONST
 lea rdi, [rip + CONST]
 mov qword [rax + CONST], rcx
 mov qword [rax + CONST], rbx
 lea rbx, [rip + CONST]
 call CONST
 xor edx, edx
 xor esi, esi
 lea rdi, [rip + CONST]
 or dword [rax + CONST], CONST
 mov qword [rax + CONST], rbx
 lea rbx, [rip + CONST]
 mov qword [rax + CONST], rbx
 call CONST
 lea rcx, [rip + CONST]
 xor edx, edx
 xor esi, esi
 or dword [rax + CONST], CONST
 lea rdi, [rip + CONST]
 mov qword [rax + CONST], rcx
 mov qword [rax + CONST], rbx
 call CONST
 lea rcx, [rip + CONST]
 xor edx, edx
 lea rdi, [rip + CONST]
 or dword [rax + CONST], CONST
 xor esi, esi
 mov qword [rax + CONST], rcx
 mov qword [rax + CONST], rbx
 lea rbx, [rip + CONST]
 call CONST
 xor edx, edx
 xor esi, esi
 lea rdi, [rip + CONST]
 or dword [rax + CONST], CONST
 mov qword [rax + CONST], rbx
 lea rbx, [rip + CONST]
 mov qword [rax + CONST], CONST
 call CONST
 lea rcx, [rip + CONST]
 lea rdx, [rip + CONST]
 mov qword [rax + CONST], rcx
 lea rsi, [rip + CONST]
 xor ecx, ecx
 lea rdi, [rip + CONST]
 mov qword [rax + CONST], rbx
 call CONST
 mov ecx, CONST
 lea rdx, [rip + CONST]
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov ecx, CONST
 lea rdx, [rip + CONST]
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov ecx, CONST
 lea rdx, [rip + CONST]
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov ecx, CONST
 lea rdx, [rip + CONST]
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 lea rdi, [rip + CONST]
 mov ecx, CONST
 lea rdx, [rip + CONST]
 lea rsi, [rip + CONST]
 call CONST
 lea rdi, [rip + CONST]
 call CONST
 test rax, rax
 cjmp LABEL496
LABEL671:
 lea rdi, [rip + CONST]
 call CONST
 test rax, rax
 cjmp LABEL500
LABEL663:
 lea rdi, [rip + CONST]
 call CONST
 test rax, rax
 cjmp LABEL504
LABEL655:
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL507
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL371:
 mov qword [rip + CONST], CONST
 jmp LABEL517
LABEL132:
 mov ecx, CONST
 lea rsi, [rip + CONST]
 mov rdi, r13
 repe cmpsb byte [rsi], byte [rdi]
 seta cl
 sbb cl, CONST
 test cl, cl
 cjmp LABEL185
 lea rdx, [r13 + rdx + CONST]
 cmp byte [rdx], CONST
 cjmp LABEL185
 movzx ecx, byte [rdx + CONST]
 mov esi, CONST
 cmp esi, ecx
 cjmp LABEL185
 cmp byte [rdx + CONST], CONST
 cjmp LABEL185
 cmp byte [r12], CONST
 cjmp LABEL185
 mov ecx, CONST
 lea rsi, [rip + CONST]
 mov rdi, r12
 repe cmpsb byte [rsi], byte [rdi]
 seta dl
 sbb dl, CONST
 test dl, dl
 cjmp LABEL185
 sub eax, CONST
 lea r14, [r13 + CONST]
 mov rdi, r12
 movsxd rdx, eax
 lea rax, [r14 + rdx]
 mov qword [rsp + CONST], rdx
 mov byte [rax], CONST
 mov qword [rsp + CONST], rax
 call CONST
 mov rdx, qword [rsp + CONST]
 mov rcx, rax
 cdqe
 lea rdi, [rdx + rax + CONST]
 mov qword [rsp + CONST], rcx
 call CONST
 mov rdx, qword [rsp + CONST]
 mov rsi, r14
 mov rdi, rax
 call CONST
 mov rdx, qword [rsp + CONST]
 mov rcx, qword [rsp + CONST]
 mov rsi, r12
 mov qword [rsp + CONST], rax
 mov byte [rax + rdx], CONST
 lea rdi, [rax + rdx + CONST]
 lea edx, [rcx + CONST]
 movsxd rdx, edx
 call CONST
 mov rdi, r14
 call CONST
 mov r9, qword [rsp + CONST]
 test eax, eax
 cjmp LABEL577
 mov eax, dword [rip + CONST]
 test eax, eax
 cjmp LABEL580
 mov rdi, r14
 mov qword [rsp + CONST], r9
 call CONST
 mov r9, qword [rsp + CONST]
 test eax, eax
 cjmp LABEL580
LABEL577:
 mov rdi, r9
 call CONST
LABEL784:
 mov rdi, r14
 call CONST
 mov rcx, rax
 test rax, rax
 cjmp LABEL593
 or dword [rax + CONST], CONST
 mov rax, qword [rsp + CONST]
 mov dword [rip + CONST], CONST
 mov byte [rax], CONST
 mov byte [rbx], CONST
 jmp LABEL599
LABEL310:
 mov rdi, qword [rax]
 call CONST
 jmp LABEL602
LABEL357:
 mov rdi, qword [rax]
 call CONST
 jmp LABEL355
LABEL49:
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 jmp LABEL609
LABEL46:
 mov rsi, qword [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov rsi, qword [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 jmp LABEL616
LABEL330:
 lea rdi, [rip + CONST]
 call CONST
 test rax, rax
 cjmp LABEL620
LABEL742:
 test byte [rax + CONST], CONST
 cjmp LABEL622
LABEL697:
 mov edx, dword [rip + CONST]
 test edx, edx
 cjmp LABEL625
 mov eax, dword [rip + CONST]
 test eax, eax
 cjmp LABEL625
 lea rdi, [rip + CONST]
 call CONST
 lea rdi, [rip + CONST]
 call CONST
 lea rdi, [rip + CONST]
 call CONST
 jmp LABEL625
LABEL308:
 lea rdi, [rip + CONST]
 call CONST
 test rax, rax
 cjmp LABEL602
 jmp LABEL640
LABEL240:
 mov rsi, qword [rip + CONST]
 test rsi, rsi
 cjmp LABEL643
LABEL745:
 xor edx, edx
 lea rdi, [rip + CONST]
 call CONST
 jmp LABEL647
LABEL504:
 lea rdi, [rip + CONST]
 lea rbx, [rip + CONST]
 call CONST
 lea rcx, [rip + CONST]
 or dword [rax + CONST], CONST
 mov qword [rax + CONST], rcx
 mov qword [rax + CONST], rbx
 jmp LABEL655
LABEL500:
 lea rdi, [rip + CONST]
 lea rbx, [rip + CONST]
 call CONST
 lea rcx, [rip + CONST]
 or dword [rax + CONST], CONST
 mov qword [rax + CONST], rcx
 mov qword [rax + CONST], rbx
 jmp LABEL663
LABEL496:
 lea rdi, [rip + CONST]
 lea rbx, [rip + CONST]
 call CONST
 mov qword [rax + CONST], rbx
 lea rbx, [rip + CONST]
 or dword [rax + CONST], CONST
 mov qword [rax + CONST], rbx
 jmp LABEL671
LABEL112:
 mov rdi, qword [rip + CONST]
 call CONST
 test al, CONST
 cjmp LABEL675
 lea rdi, [rip + CONST]
 call CONST
 mov rdi, qword [rip + CONST]
 mov rsi, rax
 call CONST
 mov rbp, rax
 mov rax, qword [rip + CONST]
 cmp byte [rax], CONST
 cjmp LABEL118
 mov esi, CONST
 mov rdi, rbp
 call CONST
 mov rbx, rax
 test rax, rax
 cjmp LABEL118
 mov rdi, rbp
 mov rbp, rbx
 call CONST
 jmp LABEL118
LABEL622:
 mov rdi, qword [rax]
 call CONST
 jmp LABEL697
LABEL107:
 lea rdi, [rip + CONST]
 call CONST
 mov r12, rax
 test rax, rax
 cjmp LABEL702
 mov rdi, rax
 call CONST
 mov rdi, qword [rip + CONST]
 movsxd rbx, eax
 call CONST
 lea rdi, [rbx + rax + CONST]
 call CONST
 mov rsi, r12
 mov rdi, rax
 mov rbp, rax
 call CONST
 mov rax, qword [rip + CONST]
 lea rdi, [rbp + rbx]
 lea rsi, [rax + CONST]
 call CONST
 jmp LABEL118
LABEL351:
 xor edx, edx
 mov rsi, rbp
 lea rdi, [rip + CONST]
 call CONST
 or dword [rax + CONST], CONST
 jmp LABEL724
LABEL339:
 xor edx, edx
 mov rsi, rbp
 lea rdi, [rip + CONST]
 call CONST
 or dword [rax + CONST], CONST
 jmp LABEL730
LABEL214:
 lea rdi, [rip + CONST]
 call CONST
 test rax, rax
 cjmp LABEL734
LABEL754:
 cmp dword [rip + CONST], CONST
 cjmp LABEL736
 jmp LABEL737
LABEL620:
 lea rdi, [rip + CONST]
 call CONST
 test rax, rax
 cjmp LABEL697
 jmp LABEL742
LABEL643:
 call CONST
 mov rsi, qword [rip + CONST]
 jmp LABEL745
LABEL702:
 mov rbp, qword [rip + CONST]
 jmp LABEL103
LABEL734:
 mov rsi, qword [rip + CONST]
 test rsi, rsi
 cjmp LABEL750
LABEL757:
 xor edx, edx
 lea rdi, [rip + CONST]
 call CONST
 jmp LABEL754
LABEL750:
 call CONST
 mov rsi, qword [rip + CONST]
 jmp LABEL757
LABEL593:
 mov rsi, r12
 mov rdi, r13
 call CONST
 test rax, rax
 cjmp LABEL762
 or dword [rax + CONST], CONST
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 mov qword [rsp + CONST], rax
 mov dword [rip + CONST], CONST
 mov dword [rip + CONST], CONST
 call CONST
 mov rsi, r14
 mov rdi, rax
 xor eax, eax
 call CONST
 mov rax, qword [rsp + CONST]
 mov rcx, qword [rsp + CONST]
 mov byte [rax], CONST
 mov byte [rbx], CONST
 jmp LABEL599
LABEL580:
 mov edx, CONST
 mov rsi, r14
 mov rdi, r9
 call CONST
 jmp LABEL784
LABEL507:
 call CONST
