 .name fcn.0000cfe0
 .offset 000000000000cfe0
 .file diff
 push r15
 push r14
 push r13
 mov r13, rsi
 push r12
 mov r12, rdi
 push rbp
 push rbx
 sub rsp, CONST
 cmp byte [rip + CONST], CONST
 cjmp LABEL10
 mov rbx, qword [rip + CONST]
 mov rbp, qword [rip + CONST]
 cmp rbx, rdi
 setne r14b
 cmp rbp, rsi
 setne r15b
 test r14b, r14b
 cjmp LABEL18
 test r15b, r15b
 cjmp LABEL18
LABEL10:
 mov qword [rip + CONST], r12
 mov qword [rip + CONST], r13
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL18:
 cmp byte [rip + CONST], CONST
 cjmp LABEL32
LABEL81:
 cmp byte [rip + CONST], CONST
 cjmp LABEL34
 test r14b, r14b
 cjmp LABEL36
 test r15b, r15b
 cjmp LABEL36
LABEL50:
 mov rax, qword [rip + CONST]
 add rbp, CONST
 add rbx, CONST
 mov esi, CONST
 lea rdx, [rax + rbp*CONST + CONST]
 mov rax, qword [rip + CONST]
 lea rdi, [rax + rbx*CONST + CONST]
 call CONST
 cmp r12, rbx
 cjmp LABEL36
 cmp r13, rbp
 cjmp LABEL50
 jmp LABEL36
LABEL59:
 mov rax, qword [rip + CONST]
 mov esi, CONST
 xor edi, edi
 lea rdx, [rax + rbp*CONST]
 add rbp, CONST
 call CONST
LABEL36:
 cmp r13, rbp
 cjmp LABEL59
LABEL34:
 cmp r12, rbx
 cjmp LABEL10
 nop dword [rax]
LABEL70:
 mov rax, qword [rip + CONST]
 xor edx, edx
 mov esi, CONST
 lea rdi, [rax + rbx*CONST]
 add rbx, CONST
 call CONST
 cmp rbx, r12
 cjmp LABEL70
 jmp LABEL10
LABEL32:
 mov rcx, r12
 mov r8, r13
 mov rdi, qword [rip + CONST]
 xor eax, eax
 sub rcx, rbx
 sub r8, rbp
 mov esi, CONST
 lea rdx, [rip + CONST]
 call CONST
 jmp LABEL81
