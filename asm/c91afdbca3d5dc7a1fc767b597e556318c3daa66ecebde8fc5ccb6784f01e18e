 .name fcn.00005c70
 .offset 0000000000005c70
 .file choom
 endbr64
 push r14
 mov r14d, esi
 push r13
 mov r13, rdx
 push r12
 push rbp
 mov rbp, rdi
 sub rsp, CONST
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 call CONST
 mov dword [rsp + CONST], eax
 mov r12d, eax
 test eax, eax
 cjmp LABEL16
 test byte [rip + CONST], CONST
 cjmp LABEL18
LABEL72:
 mov edi, r12d
 xor ecx, ecx
 mov edx, r14d
 mov rsi, r13
 call CONST
 mov r12d, eax
 test eax, eax
 cjmp LABEL26
LABEL16:
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL29
 add rsp, CONST
 mov eax, r12d
 pop rbp
 pop r12
 pop r13
 pop r14
 ret
LABEL26:
 call CONST
 cmp dword [rax], CONST
 cjmp LABEL16
 mov rax, qword [rbp + CONST]
 test rax, rax
 cjmp LABEL16
 lea rdx, [rsp + CONST]
 mov rsi, r13
 mov rdi, rbp
 call rax
 test eax, eax
 cjmp LABEL16
 mov edi, dword [rsp + CONST]
 xor ecx, ecx
 mov edx, r14d
 mov rsi, r13
 call CONST
 mov r12d, eax
 jmp LABEL16
LABEL18:
 call CONST
 lea r9, [rip + CONST]
 mov esi, CONST
 lea r8, [rip + CONST]
 mov ecx, eax
 mov rax, qword [rip + CONST]
 lea rdx, [rip + CONST]
 mov rdi, qword [rax]
 xor eax, eax
 call CONST
 mov rdx, r13
 mov rdi, rbp
 xor eax, eax
 lea rsi, [rip + CONST]
 call CONST
 mov r12d, dword [rsp + CONST]
 jmp LABEL72
LABEL29:
 call CONST
