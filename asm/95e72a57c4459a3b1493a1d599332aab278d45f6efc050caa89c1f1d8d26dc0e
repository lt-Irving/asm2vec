 .name main
 .offset 0000000000001300
 .file bzip2recover
 endbr64
 push r15
 mov edx, CONST
 push r14
 push r13
 push r12
 push rbp
 mov ebp, edi
 lea rdi, [rip + CONST]
 push rbx
 mov rbx, rsi
 sub rsp, CONST
 mov rsi, qword [rsi]
 call CONST
 mov edx, CONST
 mov rcx, qword [rip + CONST]
 mov esi, CONST
 lea rdi, [rip + CONST]
 mov byte [rip + CONST], CONST
 mov byte [rip + CONST], CONST
 mov byte [rip + CONST], CONST
 call CONST
 cmp ebp, CONST
 cjmp LABEL23
 mov rbp, qword [rbx + CONST]
 mov rdi, rbp
 call CONST
 cmp rax, CONST
 cjmp LABEL28
 lea rdx, [rax + CONST]
 mov ecx, CONST
 mov rsi, rbp
 lea rdi, [rip + CONST]
 call CONST
 lea rdi, [rip + CONST]
 lea rsi, [rip + CONST]
 call CONST
 mov rdi, rax
 test rax, rax
 cjmp LABEL39
 call CONST
 mov rdi, qword [rip + CONST]
 xor ebp, ebp
 xor ebx, ebx
 xor r14d, r14d
 mov r13, rax
 lea rcx, [rip + CONST]
 xor eax, eax
 lea rdx, [rip + CONST]
 mov esi, CONST
 xor r15d, r15d
 xor r12d, r12d
 call CONST
 mov dword [rsp + CONST], r14d
 mov r14, r15
 mov qword [rip + CONST], CONST
 mov dword [rsp + CONST], CONST
 jmp LABEL57
LABEL77:
 cmp eax, CONST
 cjmp LABEL59
 cmp ebp, CONST
 cjmp LABEL61
LABEL59:
 mov r14, r15
LABEL57:
 mov rdi, r13
 lea r15, [r14 + CONST]
 call CONST
 cmp eax, CONST
 cjmp LABEL67
 mov ecx, ebp
 add r12d, r12d
 and eax, CONST
 add ebp, ebp
 shr ecx, CONST
 or ebp, eax
 or r12d, ecx
 movzx eax, r12w
 cmp r12w, CONST
 cjmp LABEL77
 cmp ebp, CONST
 cjmp LABEL59
LABEL61:
 lea rdx, [r14 + CONST]
 cmp r15, CONST
 mov r9d, CONST
 cmova r9, rdx
 mov edx, dword [rsp + CONST]
 lea rax, [rip + CONST]
 mov qword [rax + rbx*CONST], r9
 test edx, edx
 cjmp LABEL88
 lea rax, [rip + CONST]
 mov r8, qword [rax + rbx*CONST]
 mov rax, r9
 sub rax, r8
 cmp rax, CONST
 cjmp LABEL94
LABEL515:
 cmp dword [rsp + CONST], CONST
 cjmp LABEL96
LABEL88:
 add dword [rsp + CONST], CONST
 movsxd rbx, dword [rsp + CONST]
 lea rax, [rip + CONST]
 mov qword [rax + rbx*CONST], r15
 jmp LABEL59
LABEL67:
 lea rax, [rip + CONST]
 mov r10, r15
 mov r15, r14
 mov r14d, dword [rsp + CONST]
 mov r8, qword [rax + rbx*CONST]
 cmp r8, r10
 cjmp LABEL108
LABEL518:
 mov rdi, r13
 call CONST
 mov eax, dword [rsp + CONST]
 lea rcx, [rip + CONST]
 test eax, eax
 cjmp LABEL114
 mov rdi, qword [rip + CONST]
 lea rdx, [rip + CONST]
 mov esi, CONST
 xor eax, eax
 call CONST
 lea rdi, [rip + CONST]
 lea rsi, [rip + CONST]
 call CONST
 mov rdi, rax
 test rax, rax
 cjmp LABEL125
 call CONST
 xor r13d, r13d
 xor r14d, r14d
 xor ebx, ebx
 mov qword [rsp + CONST], rax
 mov dword [rsp + CONST], CONST
 mov qword [rsp + CONST], CONST
 nop dword [rax]
LABEL168:
 mov rdi, qword [rsp + CONST]
 call CONST
 mov esi, eax
 cmp eax, CONST
 cjmp LABEL138
 mov eax, ebp
 add r12d, r12d
 movsxd r15, dword [rsp + CONST]
 add ebp, ebp
 shr eax, CONST
 or r12d, eax
 mov eax, esi
 and eax, CONST
 or ebp, eax
 lea rax, [rip + CONST]
 mov rax, qword [rax + r15*CONST]
 lea rdx, [rax + CONST]
 cmp rdx, r13
 cjmp LABEL152
 mov r14d, r12d
 mov edx, ebp
 shl r14d, CONST
 shr edx, CONST
 or r14d, edx
LABEL152:
 lea rdx, [rip + CONST]
 cmp qword [rsp + CONST], CONST
 mov rdx, qword [rdx + r15*CONST]
 cjmp LABEL161
 cmp rax, r13
 cjmp LABEL163
 cmp r13, rdx
 cjmp LABEL165
LABEL387:
 add r13, CONST
 cmp r13, rax
 cjmp LABEL168
 lea rax, [rip + CONST]
 lea rdx, [rax + CONST]
 nop dword [rax]
LABEL175:
 mov byte [rax], CONST
 add rax, CONST
 cmp rdx, rax
 cjmp LABEL175
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov esi, CONST
 lea rdi, [rip + CONST]
 call CONST
 lea rcx, [rip + CONST]
 mov esi, CONST
 mov rdx, CONST
 test rax, rax
 lea rbx, [rax + CONST]
 lea rax, [rip + CONST]
 cmove rbx, rax
 mov r9, rbx
 mov rdi, rbx
 sub r9, rax
 mov eax, dword [rsp + CONST]
 mov qword [rsp + CONST], r9
 lea r15d, [rax + CONST]
 xor eax, eax
 mov r8d, r15d
 call CONST
 movzx eax, byte [rbx]
 mov r9, qword [rsp + CONST]
 test al, al
 cjmp LABEL202
 nop
LABEL210:
 cmp al, CONST
 cjmp LABEL205
 mov byte [rbx], CONST
LABEL205:
 movzx eax, byte [rbx + CONST]
 add rbx, CONST
 test al, al
 cjmp LABEL210
LABEL202:
 lea rdi, [rip + CONST]
LABEL218:
 mov edx, dword [rdi]
 add rdi, CONST
 lea eax, [rdx + CONST]
 not edx
 and eax, edx
 and eax, CONST
 cjmp LABEL218
 mov edx, eax
 movsxd rsi, r9d
 shr edx, CONST
 test eax, CONST
 cmove eax, edx
 lea rdx, [rdi + CONST]
 cmove rdi, rdx
 mov edx, eax
 add dl, al
 lea rax, [rip + CONST]
 mov edx, CONST
 sbb rdi, CONST
 add rsi, rax
 call CONST
 lea rdx, [rip + CONST]
 mov rdi, rax
 sub rax, rdx
 cmp rax, CONST
 cjmp LABEL237
 lea rdx, [rip + CONST]
 cmp byte [rdx + rax], CONST
 cjmp LABEL240
LABEL237:
 lea rcx, [rip + CONST]
 mov edx, CONST
 lea rsi, [rip + CONST]
 sub rcx, rdi
 add rcx, CONST
 call CONST
LABEL539:
 mov rdi, qword [rip + CONST]
 lea r8, [rip + CONST]
 mov ecx, r15d
 xor eax, eax
 lea rdx, [rip + CONST]
 mov esi, CONST
 call CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov qword [rsp + CONST], rax
 test rax, rax
 cjmp LABEL259
 mov edi, CONST
 call CONST
 mov rbx, rax
 test rax, rax
 cjmp LABEL264
 mov rax, qword [rsp + CONST]
 mov byte [rbx + CONST], CONST
 mov r15d, CONST
 mov qword [rbx + CONST], CONST
 mov qword [rbx], rax
LABEL278:
 mov ecx, r15d
 mov esi, CONST
 mov rdi, rbx
 sub r15d, CONST
 shr esi, cl
 and esi, CONST
 call CONST
 cmp r15d, CONST
 cjmp LABEL278
 mov r15d, CONST
 nop dword [rax]
LABEL289:
 mov ecx, r15d
 mov esi, CONST
 mov rdi, rbx
 sub r15d, CONST
 shr esi, cl
 and esi, CONST
 call CONST
 cmp r15d, CONST
 cjmp LABEL289
 mov r15d, CONST
 nop dword [rax]
LABEL300:
 mov ecx, r15d
 mov esi, CONST
 mov rdi, rbx
 sub r15d, CONST
 shr esi, cl
 and esi, CONST
 call CONST
 cmp r15d, CONST
 cjmp LABEL300
 mov r15d, CONST
 nop dword [rax]
LABEL311:
 mov ecx, r15d
 mov esi, CONST
 mov rdi, rbx
 sub r15d, CONST
 shr esi, cl
 and esi, CONST
 call CONST
 cmp r15d, CONST
 cjmp LABEL311
 mov r15d, CONST
 nop dword [rax]
LABEL322:
 mov ecx, r15d
 mov esi, CONST
 mov rdi, rbx
 sub r15d, CONST
 shr esi, cl
 and esi, CONST
 call CONST
 cmp r15d, CONST
 cjmp LABEL322
 mov r15d, CONST
 nop dword [rax]
LABEL333:
 mov ecx, r15d
 mov esi, CONST
 mov rdi, rbx
 sub r15d, CONST
 shr esi, cl
 and esi, CONST
 call CONST
 cmp r15d, CONST
 cjmp LABEL333
 mov r15d, CONST
 nop dword [rax]
LABEL344:
 mov ecx, r15d
 mov esi, CONST
 mov rdi, rbx
 sub r15d, CONST
 shr esi, cl
 and esi, CONST
 call CONST
 cmp r15d, CONST
 cjmp LABEL344
 mov r15d, CONST
 nop dword [rax]
LABEL355:
 mov ecx, r15d
 mov esi, CONST
 mov rdi, rbx
 sub r15d, CONST
 shr esi, cl
 and esi, CONST
 call CONST
 cmp r15d, CONST
 cjmp LABEL355
 mov r15d, CONST
 nop dword [rax]
LABEL366:
 mov ecx, r15d
 mov esi, CONST
 mov rdi, rbx
 sub r15d, CONST
 shr esi, cl
 and esi, CONST
 call CONST
 cmp r15d, CONST
 cjmp LABEL366
 mov r15d, CONST
 nop dword [rax]
LABEL377:
 mov ecx, r15d
 mov esi, CONST
 mov rdi, rbx
 sub r15d, CONST
 shr esi, cl
 and esi, CONST
 call CONST
 cmp r15d, CONST
 cjmp LABEL377
 jmp LABEL168
LABEL165:
 mov rdi, rbx
 call CONST
 lea rax, [rip + CONST]
 mov rdx, qword [rax + r15*CONST]
LABEL163:
 cmp r13, rdx
 cjmp LABEL384
 lea rax, [rip + CONST]
 mov rax, qword [rax + r15*CONST]
 jmp LABEL387
LABEL161:
 cmp r13, rdx
 cjmp LABEL387
 mov eax, dword [rsp + CONST]
 mov edx, dword [rsp + CONST]
 cmp eax, edx
 cjmp LABEL138
LABEL481:
 mov qword [rsp + CONST], CONST
 add eax, CONST
 add r13, CONST
 mov dword [rsp + CONST], eax
 jmp LABEL168
LABEL384:
 mov r15d, CONST
 nop
LABEL409:
 mov ecx, r15d
 mov esi, CONST
 mov rdi, rbx
 sub r15d, CONST
 shr esi, cl
 and esi, CONST
 call CONST
 cmp r15d, CONST
 cjmp LABEL409
 mov r15d, CONST
 nop dword [rax]
LABEL420:
 mov ecx, r15d
 mov esi, CONST
 mov rdi, rbx
 sub r15d, CONST
 shr esi, cl
 and esi, CONST
 call CONST
 cmp r15d, CONST
 cjmp LABEL420
 mov r15d, CONST
 nop dword [rax]
LABEL431:
 mov ecx, r15d
 mov esi, CONST
 mov rdi, rbx
 sub r15d, CONST
 shr esi, cl
 and esi, CONST
 call CONST
 cmp r15d, CONST
 cjmp LABEL431
 mov r15d, CONST
 nop dword [rax]
LABEL442:
 mov ecx, r15d
 mov esi, CONST
 mov rdi, rbx
 sub r15d, CONST
 shr esi, cl
 and esi, CONST
 call CONST
 cmp r15d, CONST
 cjmp LABEL442
 mov r15d, CONST
 nop dword [rax]
LABEL453:
 mov ecx, r15d
 mov esi, CONST
 mov rdi, rbx
 sub r15d, CONST
 shr esi, cl
 and esi, CONST
 call CONST
 cmp r15d, CONST
 cjmp LABEL453
 mov r15d, CONST
 nop dword [rax]
LABEL464:
 mov ecx, r15d
 mov esi, CONST
 mov rdi, rbx
 sub r15d, CONST
 shr esi, cl
 and esi, CONST
 call CONST
 cmp r15d, CONST
 cjmp LABEL464
 mov r15d, CONST
 nop dword [rax]
LABEL475:
 mov ecx, r15d
 mov esi, r14d
 mov rdi, rbx
 sub r15d, CONST
 shr esi, cl
 and esi, CONST
 call CONST
 cmp r15d, CONST
 cjmp LABEL475
 mov rdi, rbx
 call CONST
 mov eax, dword [rsp + CONST]
 mov edx, dword [rsp + CONST]
 cmp eax, edx
 cjmp LABEL481
LABEL138:
 mov rdi, qword [rip + CONST]
 lea rcx, [rip + CONST]
 lea rdx, [rip + CONST]
 xor eax, eax
 mov esi, CONST
 call CONST
 add rsp, CONST
 xor eax, eax
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL94:
 mov eax, dword [rsp + CONST]
 mov rdi, qword [rip + CONST]
 mov esi, CONST
 lea rdx, [rip + CONST]
 lea r14d, [rax + CONST]
 xor eax, eax
 mov ecx, r14d
 call CONST
 lea rdx, [rip + CONST]
 movsxd rax, dword [rsp + CONST]
 lea rdi, [rip + CONST]
 mov rdx, qword [rdx + rbx*CONST]
 mov dword [rsp + CONST], r14d
 mov qword [rdi + rax*CONST], rdx
 lea rdx, [rip + CONST]
 lea rdi, [rip + CONST]
 mov rdx, qword [rdx + rbx*CONST]
 mov qword [rdi + rax*CONST], rdx
 jmp LABEL515
LABEL108:
 sub r10, r8
 cmp r10, CONST
 cjmp LABEL518
 lea rax, [rip + CONST]
 mov qword [rax + rbx*CONST], r15
 test r14d, r14d
 cjmp LABEL518
 mov rdi, qword [rip + CONST]
 mov r9, r15
 mov ecx, r14d
 xor eax, eax
 lea rdx, [rip + CONST]
 mov esi, CONST
 call CONST
 jmp LABEL518
LABEL240:
 cmp byte [rdx + rax + CONST], CONST
 lea rdx, [rdx + CONST]
 cjmp LABEL237
 cmp byte [rdx + rax + CONST], CONST
 lea rdx, [rdx + CONST]
 cjmp LABEL237
 cmp byte [rdx + rax + CONST], CONST
 cjmp LABEL237
 jmp LABEL539
LABEL264:
 call CONST
LABEL96:
 mov rdi, qword [rip + CONST]
 mov r9d, CONST
 xor eax, eax
 lea r8, [rip + CONST]
 lea rcx, [rip + CONST]
 lea rdx, [rip + CONST]
 mov esi, CONST
 call CONST
 mov rdi, qword [rip + CONST]
 mov esi, CONST
 xor eax, eax
 lea rcx, [rip + CONST]
 lea rdx, [rip + CONST]
 call CONST
 lea rcx, [rip + CONST]
 lea rdx, [rip + CONST]
LABEL581:
 mov rdi, qword [rip + CONST]
 mov esi, CONST
 xor eax, eax
 call CONST
 mov edi, CONST
 call CONST
LABEL259:
 mov rdi, qword [rip + CONST]
 lea r8, [rip + CONST]
 lea rcx, [rip + CONST]
 mov esi, CONST
 lea rdx, [rip + CONST]
 call CONST
 mov edi, CONST
 call CONST
LABEL125:
 lea r8, [rip + CONST]
 lea rcx, [rip + CONST]
 lea rdx, [rip + CONST]
LABEL585:
 mov rdi, qword [rip + CONST]
 mov esi, CONST
 xor eax, eax
 call CONST
 mov edi, CONST
 call CONST
LABEL114:
 lea rdx, [rip + CONST]
 jmp LABEL581
LABEL39:
 lea r8, [rip + CONST]
 lea rcx, [rip + CONST]
 lea rdx, [rip + CONST]
 jmp LABEL585
LABEL28:
 mov rdi, qword [rip + CONST]
 mov r8d, eax
 xor eax, eax
 lea rcx, [rip + CONST]
 lea rdx, [rip + CONST]
 mov esi, CONST
 call CONST
 mov edi, CONST
 call CONST
LABEL23:
 lea r8, [rip + CONST]
 mov rdi, qword [rip + CONST]
 lea rdx, [rip + CONST]
 xor eax, eax
 mov rcx, r8
 mov esi, CONST
 call CONST
 mov edx, CONST
 mov esi, CONST
 mov rcx, qword [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov edi, CONST
 call CONST
