 .name fcn.00006830
 .offset 0000000000006830
 .file choom
 endbr64
 push r15
 push r14
 mov r14, rcx
 push r13
 push r12
 push rbp
 mov rbp, rsi
 mov esi, CONST
 push rbx
 mov rbx, rdx
 mov rdx, rcx
 sub rsp, CONST
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 call CONST
 mov r12d, eax
 call CONST
 mov r13, rax
 test r12d, r12d
 cjmp LABEL21
 test byte [rip + CONST], CONST
 cjmp LABEL23
LABEL88:
 xor esi, esi
 mov rdx, rbx
 mov rdi, rbp
 call CONST
 test rbx, rbx
 cjmp LABEL29
 lea rax, [rsp + CONST]
 xor r15d, r15d
 xor ecx, ecx
 mov qword [rsp], rax
LABEL46:
 mov rdx, rbx
 mov rsi, rbp
 mov edi, r12d
 mov dword [rsp + CONST], ecx
 call CONST
 test rax, rax
 cjmp LABEL40
 add rbp, rax
 add r15, rax
 sub rbx, rax
 cjmp LABEL44
 xor ecx, ecx
 jmp LABEL46
LABEL40:
 mov r14d, dword [r13]
 cjmp LABEL48
 cmp r14d, CONST
 mov ecx, dword [rsp + CONST]
 cjmp LABEL51
 cmp r14d, CONST
 cjmp LABEL48
LABEL51:
 cmp ecx, CONST
 cjmp LABEL55
LABEL48:
 test r15, r15
 mov eax, CONST
 cmove r15d, eax
LABEL103:
 mov edi, r12d
 call CONST
 mov dword [r13], r14d
LABEL101:
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL64
 add rsp, CONST
 mov eax, r15d
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL23:
 call CONST
 lea r9, [rip + CONST]
 mov esi, CONST
 lea r8, [rip + CONST]
 mov ecx, eax
 mov rax, qword [rip + CONST]
 lea rdx, [rip + CONST]
 mov rdi, qword [rax]
 xor eax, eax
 call CONST
 mov rsi, r14
 lea rdi, [rip + CONST]
 xor eax, eax
 call CONST
 jmp LABEL88
LABEL55:
 mov rdi, qword [rsp]
 add ecx, CONST
 xor esi, esi
 mov qword [rsp + CONST], CONST
 mov dword [rsp + CONST], ecx
 mov dword [rsp + CONST], ecx
 mov qword [rsp + CONST], CONST
 call CONST
 mov ecx, dword [rsp + CONST]
 jmp LABEL46
LABEL21:
 mov r15d, dword [rax]
 neg r15d
 jmp LABEL101
LABEL44:
 mov r14d, dword [r13]
 jmp LABEL103
LABEL29:
 mov r14d, dword [r13]
 xor r15d, r15d
 jmp LABEL103
LABEL64:
 call CONST
