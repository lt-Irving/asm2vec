 .name fcn.00004460
 .offset 0000000000004460
 .file csplit
 push rbp
 mov rbp, qword [rip + CONST]
 test rbp, rbp
 cjmp LABEL3
 lea rsi, [rbp + CONST]
 lea rdi, [rbp + CONST]
 call CONST
 mov rdi, rbp
 call CONST
 mov qword [rip + CONST], CONST
LABEL3:
 mov rax, qword [rip + CONST]
 test rax, rax
 cjmp LABEL12
LABEL38:
 mov rdx, qword [rax + CONST]
 cmp rdx, qword [rip + CONST]
 cjmp LABEL15
LABEL31:
 mov rcx, qword [rax + CONST]
 add rdx, CONST
 mov qword [rax + CONST], rdx
 mov rdi, qword [rcx + CONST]
 lea rdx, [rdi + CONST]
 mov rsi, rdx
 mov qword [rcx + CONST], rdx
 shl rsi, CONST
 lea r8, [rcx + rsi + CONST]
 cmp qword [rcx], rdx
 cjmp LABEL26
LABEL44:
 mov rax, r8
 pop rbp
 ret
LABEL15:
 mov qword [rip + CONST], rdx
 jmp LABEL31
LABEL12:
 cmp byte [rip + CONST], CONST
 cjmp LABEL33
 call CONST
 test al, al
 cjmp LABEL33
 mov rax, qword [rip + CONST]
 jmp LABEL38
LABEL26:
 mov rdx, qword [rcx + CONST]
 mov qword [rax + CONST], rdx
 test rdx, rdx
 cjmp LABEL42
 cmp qword [rdx], CONST
 cjmp LABEL44
LABEL42:
 mov qword [rip + CONST], rax
 mov rax, qword [rax + CONST]
 pop rbp
 mov qword [rip + CONST], rax
 mov rax, r8
 ret
LABEL33:
 xor r8d, r8d
 pop rbp
 mov rax, r8
 ret
