 .name main
 .offset 0000000000002500
 .file delpart
 endbr64
 push r12
 push rbp
 mov ebp, edi
 mov edi, CONST
 push rbx
 mov rbx, rsi
 lea rsi, [rip + CONST]
 sub rsp, CONST
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 call CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 lea rdi, [rip + CONST]
 call CONST
 xor r8d, r8d
 mov rsi, rbx
 mov edi, ebp
 lea rcx, [rip + CONST]
 lea rdx, [rip + CONST]
 call CONST
 cmp eax, CONST
 cjmp LABEL25
 cmp eax, CONST
 cjmp LABEL27
 mov r12, qword [rip + CONST]
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov edi, CONST
 lea rcx, [rip + CONST]
 mov rsi, rax
 mov rdx, r12
 xor eax, eax
 call CONST
 xor edi, edi
 call CONST
LABEL27:
 cmp eax, CONST
 cjmp LABEL42
LABEL195:
 mov r12, qword [rip + CONST]
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov rdi, qword [rip + CONST]
 mov esi, CONST
 mov rdx, rax
 mov rcx, r12
 xor eax, eax
 call CONST
 mov edi, CONST
 call CONST
LABEL25:
 cmp ebp, CONST
 cjmp LABEL57
 mov rdi, qword [rbx + CONST]
 xor esi, esi
 xor eax, eax
 call CONST
 mov ebp, eax
 test eax, eax
 cjmp LABEL64
 mov edx, CONST
 xor edi, edi
 lea rsi, [rip + CONST]
 call CONST
 mov rdi, qword [rbx + CONST]
 mov rsi, rax
 call CONST
 lea rdi, [rsp + CONST]
 mov ecx, CONST
 mov rdx, rsp
 mov dword [rsp + CONST], eax
 xor eax, eax
 pxor xmm0, xmm0
 mov esi, CONST
 rep stosd dword [rdi], eax
 lea rdi, [rsp + CONST]
 mov ecx, CONST
 mov qword [rsp + CONST], CONST
 rep stosd dword [rdi], eax
 lea rax, [rsp + CONST]
 mov edi, ebp
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], rax
 xor eax, eax
 mov qword [rsp], CONST
 mov dword [rsp + CONST], CONST
 movups xmmword [rsp + CONST], xmm0
 movups xmmword [rsp + CONST], xmm0
 call CONST
 test eax, eax
 cjmp LABEL95
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL98
 add rsp, CONST
 xor eax, eax
 pop rbx
 pop rbp
 pop r12
 ret
LABEL42:
 mov rbp, qword [rip + CONST]
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov rdi, rax
 mov rsi, rbp
 call CONST
 mov r12, qword [rip + CONST]
 mov edx, CONST
 xor edi, edi
 lea rsi, [rip + CONST]
 call CONST
 mov rcx, r12
 mov esi, CONST
 mov rdi, rbp
 mov rdx, rax
 xor eax, eax
 call CONST
 mov rsi, rbp
 mov edi, CONST
 call CONST
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov rsi, rbp
 mov rdi, rax
 call CONST
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov rsi, rbp
 mov rdi, rax
 call CONST
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 mov rbx, rax
 call CONST
 mov r9, rbx
 lea r8, [rip + CONST]
 lea rdx, [rip + CONST]
 mov rcx, rax
 lea rsi, [rip + CONST]
 mov edi, CONST
 xor eax, eax
 call CONST
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov edi, CONST
 lea rdx, [rip + CONST]
 mov rsi, rax
 xor eax, eax
 call CONST
 xor edi, edi
 call CONST
LABEL64:
 mov r12, qword [rbx + CONST]
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov edi, CONST
 mov rsi, rax
 mov rdx, r12
 xor eax, eax
 call CONST
LABEL98:
 call CONST
LABEL95:
 lea rsi, [rip + CONST]
 xor edi, edi
 mov edx, CONST
 call CONST
 mov edi, CONST
 mov rsi, rax
 xor eax, eax
 call CONST
LABEL57:
 xor edi, edi
 mov edx, CONST
 lea rsi, [rip + CONST]
 call CONST
 mov rdi, rax
 xor eax, eax
 call CONST
 jmp LABEL195
