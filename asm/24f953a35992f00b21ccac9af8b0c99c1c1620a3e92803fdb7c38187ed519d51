 .name fcn.00008050
 .offset 0000000000008050
 .file apt-mark
LABEL279:
 mov r12d, eax
 jmp LABEL1
 endbr64
 push r15
 push r14
 push r13
 push r12
 mov r12, rdi
 push rbp
 push rbx
 sub rsp, CONST
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 lea rbx, [rsp + CONST]
 mov rdi, rbx
 mov qword [rsp + CONST], rbx
 call CONST
 xor esi, esi
 mov rdi, rbx
 call CONST
 mov r14, qword [rsp + CONST]
 test r14, r14
 cjmp LABEL23
 mov rax, qword [r12 + CONST]
 lea r13, [rsp + CONST]
 mov edx, CONST
 mov esi, CONST
 mov rdi, r13
 lea r15, [rax + CONST]
 call CONST
 lea rax, [rsp + CONST]
 xor esi, esi
 mov rdi, rax
 mov qword [rsp + CONST], rax
 call CONST
 mov rsi, qword [rsp + CONST]
 mov rcx, r15
 mov rdx, rbx
 mov rdi, r13
 lea rbp, [rsp + CONST]
 lea rax, [rip + CONST]
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], rax
 mov qword [rsp + CONST], rbp
 mov qword [rsp + CONST], rbp
 call CONST
 mov rdi, r13
 call CONST
 mov rbx, qword [rsp + CONST]
 cmp rbx, rbp
 cjmp LABEL51
 mov rax, qword [r12 + CONST]
 lea rsi, [rip + CONST]
 lea r15, [rsp + CONST]
 mov rdi, qword [rax]
 call CONST
 mov qword [rsp + CONST], CONST
 test eax, eax
 mov dword [rsp + CONST], eax
 lea rax, [rsp + CONST]
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], rax
 sete byte [rsp + CONST]
 jmp LABEL65
LABEL107:
 mov edx, dword [rsp + CONST]
 test edx, edx
 cjmp LABEL68
 movdqu xmm2, xmmword [rbx + CONST]
 lea rdx, [rsp + CONST]
 mov rsi, r13
 mov rdi, r15
 mov byte [rsp + CONST], CONST
 lea r12, [rsp + CONST]
 movaps xmmword [rsp + CONST], xmm2
 mov rax, qword [rbx + CONST]
 mov qword [rsp + CONST], rax
 call CONST
 mov r12, qword [rsp + CONST]
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 lea rdi, [rip + CONST]
 mov rsi, rax
 mov rdx, r12
 xor eax, eax
 call CONST
LABEL234:
 mov rdi, qword [rsp + CONST]
 lea rax, [rsp + CONST]
 cmp rdi, rax
 cjmp LABEL91
 call CONST
LABEL91:
 mov rbx, qword [rbx]
 cmp rbx, rbp
 cjmp LABEL95
LABEL65:
 mov rax, qword [rbx + CONST]
 mov ecx, dword [rax + CONST]
 test ecx, ecx
 cjmp LABEL99
 mov eax, dword [rax + CONST]
 lea rax, [rax + rax*CONST]
 shl rax, CONST
 add rax, qword [r14 + CONST]
 movzx eax, word [rax + CONST]
 and eax, CONST
 cmp al, byte [rsp + CONST]
 cjmp LABEL107
 movdqu xmm0, xmmword [rbx + CONST]
 mov rdx, qword [rsp + CONST]
 mov rsi, r13
 mov rdi, r15
 mov byte [rsp + CONST], CONST
 lea r12, [rsp + CONST]
 movaps xmmword [rsp + CONST], xmm0
 mov rax, qword [rbx + CONST]
 mov qword [rsp + CONST], rax
 call CONST
 lea r12, [rsp + CONST]
 mov rsi, r15
 mov rdi, r12
 call CONST
 mov rdi, qword [rsp + CONST]
 lea rax, [rsp + CONST]
 cmp rdi, rax
 cjmp LABEL125
 call CONST
LABEL125:
 movdqu xmm1, xmmword [rbx + CONST]
 movzx edx, byte [rsp + CONST]
 mov rsi, r13
 mov rdi, r14
 movaps xmmword [rsp + CONST], xmm1
 mov rax, qword [rbx + CONST]
 mov qword [rsp + CONST], rax
 call CONST
 mov rbx, qword [rbx]
 cmp rbx, rbp
 cjmp LABEL65
LABEL95:
 mov rdi, qword [rip + CONST]
 mov rdx, r13
 mov byte [rsp + CONST], CONST
 lea rsi, [rip + CONST]
 lea r12, [rsp + CONST]
 call CONST
 mov rbx, qword [rsp + CONST]
 mov r15, qword [rsp + CONST]
 cmp rbx, r15
 cjmp LABEL147
 test al, al
 cjmp LABEL149
LABEL266:
 lea r13, [rsp + CONST]
 nop dword [rax + rax]
LABEL169:
 mov eax, dword [rsp + CONST]
 mov r14, qword [rbx]
 lea rsi, [rip + CONST]
 test eax, eax
 cjmp LABEL156
 lea rsi, [rip + CONST]
LABEL156:
 lea rdi, [rip + CONST]
 mov r12, r13
 call CONST
 mov rdx, r14
 lea rdi, [rip + CONST]
 mov rsi, rax
 xor eax, eax
 call CONST
 add rbx, CONST
 mov r15, rbx
 cmp qword [rsp + CONST], rbx
 cjmp LABEL169
 mov rbx, qword [rsp + CONST]
 mov r12d, CONST
LABEL264:
 cmp r15, rbx
 cjmp LABEL173
 nop word [rax + rax]
LABEL182:
 mov rdi, qword [rbx]
 lea rax, [rbx + CONST]
 cmp rdi, rax
 cjmp LABEL178
 call CONST
LABEL178:
 add rbx, CONST
 cmp r15, rbx
 cjmp LABEL182
 mov r15, qword [rsp + CONST]
LABEL173:
 test r15, r15
 cjmp LABEL1
 mov rdi, r15
 call CONST
LABEL1:
 mov rbx, qword [rsp + CONST]
 lea rax, [rip + CONST]
 mov qword [rsp + CONST], rax
 cmp rbx, rbp
 cjmp LABEL192
 nop dword [rax]
LABEL198:
 mov rdi, rbx
 mov rbx, qword [rbx]
 call CONST
 cmp rbx, rbp
 cjmp LABEL198
LABEL192:
 mov rdi, qword [rsp + CONST]
 call CONST
LABEL281:
 mov rdi, qword [rsp + CONST]
 call CONST
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL205
 add rsp, CONST
 mov eax, r12d
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL68:
 movdqu xmm3, xmmword [rbx + CONST]
 lea rdx, [rsp + CONST]
 mov rsi, r13
 mov rdi, r15
 mov byte [rsp + CONST], CONST
 lea r12, [rsp + CONST]
 movaps xmmword [rsp + CONST], xmm3
 mov rax, qword [rbx + CONST]
 mov qword [rsp + CONST], rax
 call CONST
 mov r12, qword [rsp + CONST]
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 lea rdi, [rip + CONST]
 mov rsi, rax
 mov rdx, r12
 xor eax, eax
 call CONST
 jmp LABEL234
LABEL99:
 movdqu xmm4, xmmword [rbx + CONST]
 lea rdx, [rsp + CONST]
 mov rsi, r13
 mov rdi, r15
 mov byte [rsp + CONST], CONST
 lea r12, [rsp + CONST]
 movaps xmmword [rsp + CONST], xmm4
 mov rax, qword [rbx + CONST]
 mov qword [rsp + CONST], rax
 call CONST
 mov r12, qword [rsp + CONST]
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 lea rdi, [rip + CONST]
 mov rsi, rax
 mov rdx, r12
 xor eax, eax
 call CONST
 jmp LABEL234
LABEL149:
 mov edx, CONST
 xor esi, esi
 lea r12, [rsp + CONST]
 mov rdi, r14
 call CONST
 mov rbx, qword [rsp + CONST]
 mov r15, qword [rsp + CONST]
 mov r12d, eax
 test al, al
 cjmp LABEL264
 cmp rbx, r15
 cjmp LABEL266
 nop word [rax + rax]
LABEL147:
 mov r12d, CONST
 jmp LABEL173
LABEL51:
 call CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 mov r12, rax
 call CONST
 mov rdi, r12
 mov rsi, rax
 xor eax, eax
 call CONST
 jmp LABEL279
LABEL23:
 xor r12d, r12d
 jmp LABEL281
LABEL205:
 call CONST
