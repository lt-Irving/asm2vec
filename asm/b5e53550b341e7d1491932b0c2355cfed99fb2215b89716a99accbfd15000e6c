 .name fcn.00002d00
 .offset 0000000000002d00
 .file base64
 push r15
 push r14
 push r13
 push r12
 push rbp
 push rbx
 lea r11, [rsp + CONST]
LABEL10:
 sub rsp, CONST
 or qword [rsp], CONST
 cmp rsp, r11
 cjmp LABEL10
 sub rsp, CONST
 xor ebx, ebx
 mov qword [rsp], rdx
 mov r15, rdi
 mov r13, rsi
 lea r12, [rsp + CONST]
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 nop
LABEL80:
 xor r14d, r14d
 mov ebp, CONST
 jmp LABEL23
LABEL35:
 cmp r14, CONST
 cjmp LABEL25
LABEL23:
 mov rdx, rbp
 lea rdi, [r12 + r14]
 mov rcx, r15
 mov esi, CONST
 sub rdx, r14
 call CONST
 add r14, rax
 mov eax, dword [r15]
 test al, CONST
 cjmp LABEL35
 test r14, r14
 cjmp LABEL25
LABEL78:
 test rbx, rbx
 cjmp LABEL39
 cmp qword [rsp], CONST
 cjmp LABEL41
LABEL39:
 test al, CONST
 cjmp LABEL43
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL46
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL25:
 movabs rax, CONST
 lea rdx, [r14 + CONST]
 mov rsi, r14
 mov rdi, r12
 mul rdx
 lea rax, [rsp + CONST]
 mov qword [rsp + CONST], rax
 shr rdx, CONST
 lea rbp, [rdx*CONST]
 mov rdx, rax
 mov rcx, rbp
 call CONST
 cmp qword [rsp], CONST
 cjmp LABEL68
 mov rcx, qword [rip + CONST]
 mov rdi, qword [rsp + CONST]
 mov rdx, rbp
 mov esi, CONST
 call CONST
 cmp rbp, rax
 cjmp LABEL75
LABEL85:
 mov eax, dword [r15]
 test al, CONST
 cjmp LABEL78
 cmp r14, CONST
 cjmp LABEL80
 jmp LABEL78
LABEL68:
 xor r10d, r10d
 test rbp, rbp
 cjmp LABEL84
 jmp LABEL85
LABEL102:
 mov rax, qword [r13 + CONST]
 cmp rax, qword [r13 + CONST]
 cjmp LABEL88
 lea rdx, [rax + CONST]
 xor ebx, ebx
 mov qword [r13 + CONST], rdx
 mov byte [rax], CONST
LABEL116:
 cmp rbp, r10
 cjmp LABEL85
LABEL84:
 mov rdx, qword [rsp]
 mov rax, rbp
 sub rax, r10
 sub rdx, rbx
 cmp rdx, rax
 cmova rdx, rax
 test rdx, rdx
 cjmp LABEL102
 mov rax, qword [rsp + CONST]
 mov esi, CONST
 mov qword [rsp + CONST], r10
 mov rcx, qword [rip + CONST]
 mov qword [rsp + CONST], rdx
 lea rdi, [rax + r10]
 call CONST
 mov rdx, qword [rsp + CONST]
 mov r10, qword [rsp + CONST]
 cmp rdx, rax
 cjmp LABEL113
 add rbx, rdx
 add r10, rdx
 jmp LABEL116
LABEL88:
 mov esi, CONST
 mov rdi, r13
 mov qword [rsp + CONST], r10
 call CONST
 cmp eax, CONST
 cjmp LABEL122
 mov r10, qword [rsp + CONST]
 xor ebx, ebx
 jmp LABEL116
LABEL41:
 mov rax, qword [r13 + CONST]
 cmp rax, qword [r13 + CONST]
 cjmp LABEL128
 lea rdx, [rax + CONST]
 mov qword [r13 + CONST], rdx
 mov byte [rax], CONST
LABEL138:
 mov eax, dword [r15]
 jmp LABEL39
LABEL128:
 mov esi, CONST
 mov rdi, r13
 call CONST
 add eax, CONST
 cjmp LABEL138
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov r12, rax
 call CONST
 mov rdx, r12
 mov edi, CONST
 mov esi, dword [rax]
 xor eax, eax
 call CONST
LABEL113:
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov r12, rax
 call CONST
 mov rdx, r12
 mov edi, CONST
 mov esi, dword [rax]
 xor eax, eax
 call CONST
LABEL75:
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov r12, rax
 call CONST
 mov rdx, r12
 mov edi, CONST
 mov esi, dword [rax]
 xor eax, eax
 call CONST
LABEL43:
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov r12, rax
 call CONST
 mov rdx, r12
 mov edi, CONST
 mov esi, dword [rax]
 xor eax, eax
 call CONST
LABEL46:
 call CONST
LABEL122:
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov r12, rax
 call CONST
 mov rdx, r12
 mov edi, CONST
 mov esi, dword [rax]
 xor eax, eax
 call CONST
 nop
