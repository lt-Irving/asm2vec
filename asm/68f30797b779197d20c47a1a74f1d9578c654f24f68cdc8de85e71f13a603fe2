 .name fcn.00004fd0
 .offset 0000000000004fd0
 .file chsh
 endbr64
 push r15
 push r14
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 test edi, edi
 cjmp LABEL12
 lea eax, [rdi + CONST]
 mov dword [rsp + CONST], CONST
 mov rbx, rsi
 lea r14, [rsp + CONST]
 lea rax, [rsi + rax*CONST + CONST]
 mov qword [rsp], rax
 nop dword [rax]
LABEL66:
 mov rbp, qword [rbx]
 mov rdi, rbp
 call CONST
 cmp rax, CONST
 cjmp LABEL24
 mov esi, CONST
 mov rdi, rbp
 call CONST
 mov r12, rax
 test rax, rax
 cjmp LABEL30
 mov r15, qword [rip + CONST]
 lea r13, [rip + CONST]
 test r15, r15
 cjmp LABEL34
 jmp LABEL35
LABEL47:
 mov r15, qword [r13 + CONST]
 add r13, CONST
 test r15, r15
 cjmp LABEL35
LABEL34:
 mov rdi, r15
 call CONST
 mov rsi, r15
 mov rdi, rbp
 mov rdx, rax
 call CONST
 test eax, eax
 cjmp LABEL47
 sub r12, rbp
 mov ecx, CONST
 mov rsi, rbp
 mov rdi, r14
 mov rdx, r12
 call CONST
 mov edx, CONST
 xor edi, edi
 lea rsi, [rip + CONST]
 mov byte [rsp + r12 + CONST], CONST
 call CONST
 mov rdx, r14
 mov edi, CONST
 mov rsi, rax
 xor eax, eax
 call CONST
LABEL24:
 add rbx, CONST
 cmp rbx, qword [rsp]
 cjmp LABEL66
LABEL12:
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL69
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL30:
 mov r15d, dword [rsp + CONST]
 mov rdi, r14
 mov ecx, CONST
 xor eax, eax
 lea r8, [rip + CONST]
 mov edx, CONST
 mov esi, CONST
 mov r9d, r15d
 call CONST
 mov eax, r15d
 mov rsi, qword [rbx]
 mov rdi, r14
 add eax, CONST
 mov dword [rsp + CONST], eax
 call CONST
 jmp LABEL24
LABEL35:
 xor esi, esi
 mov rdi, rbp
 call CONST
 jmp LABEL24
LABEL69:
 call CONST
