 .name fcn.00018c00
 .offset 0000000000018c00
 .file diff
 push r15
 push r14
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 test rsi, rsi
 cjmp LABEL8
 mov r12, qword [rsi + CONST]
 test rdx, rdx
 cjmp LABEL11
 test r12, r12
 cjmp LABEL11
 mov r15, qword [rdx + CONST]
 test r15, r15
 cjmp LABEL16
 mov r13, rdi
 lea rdi, [r12 + r15]
 mov rbp, rdx
 mov rbx, rsi
 mov qword [r13], rdi
 shl rdi, CONST
 call CONST
 mov qword [r13 + CONST], rax
 test rax, rax
 cjmp LABEL26
 mov rdi, rax
 mov r10, qword [rbx + CONST]
 xor r14d, r14d
 xor ecx, ecx
 xor edx, edx
 jmp LABEL32
LABEL50:
 sete r8b
 mov qword [rdi], rsi
 add rdx, CONST
 movzx r8d, r8b
 add rcx, r8
LABEL53:
 mov r12, qword [rbx + CONST]
 add rdi, CONST
 cmp rdx, r12
 cjmp LABEL41
LABEL32:
 lea rsi, [r10 + rdx*CONST]
 cmp r15, rcx
 cjmp LABEL44
 mov r9, qword [rbp + CONST]
 mov rsi, qword [rsi]
 add r14, CONST
 mov r8, qword [r9 + rcx*CONST]
 cmp rsi, r8
 cjmp LABEL50
 add rcx, CONST
 mov qword [rdi], r8
 jmp LABEL53
LABEL11:
 test r12, r12
 cjmp LABEL16
LABEL8:
 test rdx, rdx
 cjmp LABEL57
 cmp qword [rdx + CONST], CONST
 cjmp LABEL59
LABEL57:
 mov qword [rdi + CONST], CONST
 pxor xmm0, xmm0
 xor eax, eax
 movaps xmmword [rdi], xmm0
LABEL108:
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL59:
 mov rsi, rdx
LABEL16:
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 jmp CONST
LABEL41:
 mov rdx, qword [rbp + CONST]
 cmp rcx, rdx
 cjmp LABEL83
LABEL101:
 mov qword [r13 + CONST], r14
 add rsp, CONST
 xor eax, eax
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL83:
 mov rbx, rdx
 lea rdi, [rax + r14*CONST]
 lea rsi, [r9 + rcx*CONST]
 sub rbx, rcx
 lea rdx, [rbx*CONST]
 add r14, rbx
 call CONST
 jmp LABEL101
LABEL44:
 sub r12, rdx
 lea rdx, [r12*CONST]
 add r14, r12
 call CONST
 jmp LABEL101
LABEL26:
 mov eax, CONST
 jmp LABEL108
