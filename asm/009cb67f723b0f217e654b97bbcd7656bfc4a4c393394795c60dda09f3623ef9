 .name fcn.00008b50
 .offset 0000000000008b50
 .file dpkg-deb
 push r15
 push r14
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov r12, qword [rdx]
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], CONST
 test r12, r12
 cjmp LABEL15
 lea rax, [rsp + CONST]
 mov r15, rdi
 mov r14, rsi
 xor r13d, r13d
 mov qword [rsp + CONST], rax
 lea rbx, [rdx + CONST]
 lea rbp, [rsp + CONST]
 jmp LABEL23
LABEL55:
 call CONST
 mov edx, CONST
 cmp dword [rax], CONST
 cjmp LABEL27
 lea rsi, [rip + CONST]
 xor edi, edi
 add rbx, CONST
 add r13d, CONST
 call CONST
 mov rdx, r12
 mov rsi, r15
 mov rdi, rax
 xor eax, eax
 call CONST
 mov r12, qword [rbx + CONST]
 test r12, r12
 cjmp LABEL40
LABEL23:
 mov rdi, rbp
 call CONST
 mov rcx, r12
 mov rdx, r14
 mov rdi, rbp
 lea rsi, [rip + CONST]
 xor eax, eax
 call CONST
 mov rdi, qword [rsp + CONST]
 xor esi, esi
 xor eax, eax
 call CONST
 mov edi, eax
 test eax, eax
 cjmp LABEL55
 push qword [rsp + CONST]
 xor edx, edx
 mov ecx, CONST
 xor esi, esi
 push CONST
 mov r9d, CONST
 mov r8d, CONST
 mov dword [rsp + CONST], eax
 call CONST
 pop rdx
 pop rcx
 test rax, rax
 mov edi, dword [rsp + CONST]
 cjmp LABEL69
 call CONST
 mov r12, qword [rbx]
 add rbx, CONST
 test r12, r12
 cjmp LABEL23
LABEL40:
 mov rdi, rbp
 call CONST
 test r13d, r13d
 cjmp LABEL78
LABEL92:
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL81
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL15:
 lea rdi, [rsp + CONST]
 call CONST
 jmp LABEL92
LABEL69:
 mov r12, qword [rsp + CONST]
 mov rbp, qword [rsp + CONST]
 mov edx, CONST
 xor edi, edi
 lea rsi, [rip + CONST]
 call CONST
 mov rcx, r12
 mov rdx, r15
 mov rsi, rbp
 mov rdi, rax
 xor eax, eax
 call CONST
LABEL27:
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov rdx, r14
 mov rsi, r12
 mov rdi, rax
 xor eax, eax
 call CONST
LABEL81:
 call CONST
LABEL78:
 lea rsi, [rip + CONST]
 xor edi, edi
 movsxd rcx, r13d
 mov r8d, CONST
 lea rdx, [rip + CONST]
 call CONST
 mov esi, r13d
 mov rdi, rax
 xor eax, eax
 call CONST
