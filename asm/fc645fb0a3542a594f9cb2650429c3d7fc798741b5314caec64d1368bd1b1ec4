 .name fcn.0001ced0
 .offset 000000000001ced0
 .file diff
 push rbp
 mov rbp, rsp
 push r15
 push r14
 push r13
 mov r13, rcx
 push r12
 mov r12, rsi
 push rbx
 sub rsp, CONST
 mov qword [rbp + CONST], rdx
 mov rax, qword fs:[CONST]
 mov qword [rbp + CONST], rax
 xor eax, eax
 mov rax, qword [rdi]
 mov qword [rbp + CONST], CONST
 mov qword [rbp + CONST], CONST
 mov qword [rbp + CONST], rax
 mov qword [rbp + CONST], CONST
 test r8b, r8b
 cjmp LABEL20
 mov edi, CONST
 lea rbx, [rbp + CONST]
 call CONST
 mov qword [rbp + CONST], rbx
 mov qword [rbp + CONST], rax
 test rax, rax
 cjmp LABEL27
LABEL420:
 mov rax, qword [rbp + CONST]
 pxor xmm0, xmm0
 mov qword [rbp + CONST], CONST
 movaps xmmword [rbp + CONST], xmm0
 mov rbx, qword [rax + CONST]
 mov rax, qword [rbp + CONST]
 shl rax, CONST
 mov qword [rbp + CONST], rax
 cmp rax, CONST
 cjmp LABEL37
 add rax, CONST
 mov byte [rbp + CONST], CONST
 sub rsp, rax
 lea rax, [rsp + CONST]
 and rax, CONST
 mov qword [rbp + CONST], rax
LABEL426:
 mov rdx, qword [rbp + CONST]
 mov rdi, qword [rbp + CONST]
 mov rsi, r13
 call CONST
 lea rax, [rbp + CONST]
 mov rcx, qword [r13]
 mov qword [rbp + CONST], rax
 add rax, CONST
 mov qword [rbp + CONST], rcx
 mov qword [rbp + CONST], rax
LABEL180:
 lea rax, [rbp + CONST]
 mov qword [rbp + CONST], rax
 jmp LABEL56
LABEL114:
 cmp edx, CONST
 cjmp LABEL58
LABEL118:
 cmp rax, rcx
 cjmp LABEL60
 cmp qword [r12 + CONST], rbx
 cjmp LABEL62
LABEL60:
 mov r14, qword [r12 + CONST]
 mov rdi, qword [r14]
 lea rsi, [rdi + r9]
 movzx eax, byte [rsi + CONST]
 test al, CONST
 cjmp LABEL68
 test byte [rsi + CONST], CONST
 cjmp LABEL70
 cmp al, CONST
 cjmp LABEL72
 mov rcx, qword [rbp + CONST]
LABEL210:
 mov rdx, rcx
 mov rdi, r12
 mov qword [rbp + CONST], rcx
 call CONST
 mov rcx, qword [rbp + CONST]
 test al, al
 cjmp LABEL80
 mov rax, qword [r14 + CONST]
 lea rdx, [rcx + CONST]
 mov rbx, qword [rax + r15*CONST]
LABEL240:
 cmp qword [rbp + CONST], CONST
 mov qword [rbp + CONST], rdx
 cjmp LABEL86
 cmp rdx, qword [r12 + CONST]
 cjmp LABEL88
 mov rax, qword [r12 + CONST]
 mov rax, qword [rax + rdx*CONST]
 test rax, rax
 cjmp LABEL88
 mov rdi, qword [rax + CONST]
 lea rsi, [rax + CONST]
 mov rdx, rbx
 call CONST
 test rax, rax
 cjmp LABEL88
LABEL86:
 mov qword [rbp + CONST], CONST
LABEL251:
 test rbx, rbx
 cjmp LABEL101
LABEL166:
 mov rcx, qword [rbp + CONST]
LABEL56:
 mov rax, qword [r13 + CONST]
 cmp rax, rcx
 cjmp LABEL105
 mov rdi, qword [rbp + CONST]
 mov r9, rbx
 mov r15, rbx
 shl r9, CONST
 mov rsi, qword [rdi]
 add rsi, r9
 movzx edx, byte [rsi + CONST]
 cmp edx, CONST
 cjmp LABEL114
 mov rdx, qword [rsi]
 add rdx, CONST
 cmp qword [rbp + CONST], rdx
 cjmp LABEL118
 shl rdx, CONST
 add rdx, r13
 mov qword [rdx + CONST], CONST
 mov rax, qword [r13 + CONST]
 mov qword [rdx], rcx
 jmp LABEL118
LABEL68:
 mov rax, qword [r12 + CONST]
 mov rdx, qword [rbp + CONST]
 mov rsi, rbx
 mov rdi, qword [rbp + CONST]
 mov r9, qword [rax + rdx*CONST]
 mov rax, qword [r14 + CONST]
 lea rdx, [rbx + rbx*CONST]
 mov qword [rbp + CONST], r9
 lea r15, [rax + rdx*CONST]
 call CONST
 mov r9, qword [rbp + CONST]
 test al, al
 cjmp LABEL137
 mov r10, qword [r15 + CONST]
 test r10, r10
 cjmp LABEL80
 lea rax, [r9 + CONST]
 mov rbx, CONST
 mov r15, qword [r15 + CONST]
 mov r11, qword [r9 + CONST]
 mov qword [rbp + CONST], r12
 xor r9d, r9d
 mov r12, rbx
 mov rbx, rax
 nop dword [rax]
LABEL162:
 mov r14, qword [r15 + r9*CONST]
 mov rsi, rbx
 mov rdi, r11
 mov rdx, r14
 call CONST
 test rax, rax
 cjmp LABEL156
 cmp r12, CONST
 cjmp LABEL158
 mov r12, r14
LABEL156:
 add r9, CONST
 cmp r10, r9
 cjmp LABEL162
 mov rbx, r12
 mov r12, qword [rbp + CONST]
 test rbx, rbx
 cjmp LABEL166
LABEL101:
 cmp rbx, CONST
 cjmp LABEL137
LABEL80:
 cmp qword [rbp + CONST], CONST
 cjmp LABEL170
LABEL88:
 mov rdi, qword [rbp + CONST]
 mov rcx, qword [rbp + CONST]
 lea rdx, [rbp + CONST]
 mov r8, r13
 mov r9, qword [rbp + CONST]
 lea rsi, [rdi + CONST]
 call CONST
 mov rcx, qword [rbp + CONST]
 mov rbx, rax
 jmp LABEL180
LABEL58:
 mov rdi, qword [rsi]
 lea rdx, [rdi + CONST]
 cmp qword [rbp + CONST], rdx
 cjmp LABEL118
 shl rdx, CONST
 lea rax, [r13 + rdx]
 cmp qword [rax], rcx
 cjmp LABEL188
 test byte [rsi + CONST], CONST
 cjmp LABEL190
 mov rsi, qword [rbp + CONST]
 cmp qword [rsi + rdx], CONST
 cjmp LABEL193
LABEL190:
 mov qword [rax + CONST], rcx
 mov rax, qword [r13 + CONST]
 jmp LABEL118
LABEL70:
 mov r8, qword [rbp + CONST]
 mov rcx, r12
 lea rsi, [r14 + CONST]
 mov rdx, rbx
 mov qword [rbp + CONST], r9
 call CONST
 movsxd rcx, eax
 test rcx, rcx
 cjmp LABEL205
 mov r9, qword [rbp + CONST]
 mov rsi, qword [r14]
 mov rcx, qword [rbp + CONST]
 add rsi, r9
 jmp LABEL210
LABEL72:
 mov rax, qword [rsi]
 add rax, CONST
 shl rax, CONST
 add rax, r13
 mov rdx, qword [rax + CONST]
 mov rdi, qword [rax]
 mov rcx, rdx
 sub rcx, rdi
 cmp qword [rbp + CONST], CONST
 cjmp LABEL220
 cmp rdi, CONST
 cjmp LABEL88
 cmp rdx, CONST
 cjmp LABEL88
 test rcx, rcx
 cjmp LABEL226
 mov rax, qword [r12 + CONST]
 mov r15, qword [rbp + CONST]
 mov rdx, rcx
 mov qword [rbp + CONST], rcx
 add rdi, rax
 lea rsi, [rax + r15]
 call CONST
 mov rcx, qword [rbp + CONST]
 test eax, eax
 cjmp LABEL88
LABEL291:
 mov rax, qword [r14 + CONST]
 lea rdx, [r15 + rcx]
 mov rbx, qword [rax + rbx*CONST]
 jmp LABEL240
LABEL158:
 mov rbx, r12
 mov rsi, qword [rbp + CONST]
 mov rdi, qword [rbp + CONST]
 mov rdx, rbx
 mov r12, qword [rbp + CONST]
 call CONST
 test rax, rax
 cjmp LABEL248
 mov rcx, qword [rbp + CONST]
 test rcx, rcx
 cjmp LABEL251
 mov r15, qword [rcx]
 mov rdx, qword [rbp + CONST]
 lea rax, [r15 + CONST]
 mov qword [rcx], rax
 cmp rax, qword [rcx + CONST]
 cjmp LABEL257
 mov rax, qword [rcx + CONST]
LABEL418:
 lea r15, [r15 + r15*CONST]
 shl r15, CONST
 add r15, rax
 mov qword [r15 + CONST], r14
 mov r14, qword [rbp + CONST]
 mov qword [r15], rdx
 mov rdi, r14
 call CONST
 mov qword [r15 + CONST], rax
 test rax, rax
 cjmp LABEL269
 mov rsi, r13
 mov rdi, rax
 mov rdx, r14
 call CONST
 mov rsi, qword [rbp + CONST]
 lea rdi, [r15 + CONST]
 call CONST
 test eax, eax
 cjmp LABEL251
 nop word [rax + rax]
LABEL269:
 mov rdi, qword [rbp + CONST]
 call CONST
 cmp byte [rbp + CONST], CONST
 cjmp LABEL283
LABEL363:
 mov rdi, qword [rbp + CONST]
 call CONST
 mov eax, CONST
 jmp LABEL287
LABEL220:
 test rcx, rcx
 cjmp LABEL226
LABEL205:
 mov r15, qword [rbp + CONST]
 jmp LABEL291
LABEL62:
 cmp qword [rbp + CONST], CONST
 cjmp LABEL293
 mov rcx, qword [rbp + CONST]
 test rcx, rcx
 cjmp LABEL296
 mov rax, r13
 xor edx, edx
 nop word [rax + rax]
LABEL307:
 cmp qword [rax], CONST
 cjmp LABEL301
 cmp qword [rax + CONST], CONST
 cjmp LABEL303
LABEL301:
 add rdx, CONST
 add rax, CONST
 cmp rcx, rdx
 cjmp LABEL307
LABEL296:
 mov rdi, qword [rbp + CONST]
 call CONST
 cmp byte [rbp + CONST], CONST
 cjmp LABEL311
LABEL461:
 mov rdi, qword [rbp + CONST]
 call CONST
 xor eax, eax
 jmp LABEL287
LABEL303:
 cmp qword [rbp + CONST], rdx
 cjmp LABEL296
 mov rdi, qword [rbp + CONST]
 mov r9, qword [rbp + CONST]
 mov r8, r13
 mov rcx, qword [rbp + CONST]
 mov rdx, qword [rbp + CONST]
 lea rsi, [rdi + CONST]
 call CONST
 mov r9, rax
 mov rbx, rax
 mov r15, rax
 shl r9, CONST
 jmp LABEL60
LABEL226:
 mov rdi, qword [rbp + CONST]
 mov rsi, rbx
 mov qword [rbp + CONST], r9
 call CONST
 test al, al
 cjmp LABEL137
 mov rdx, qword [r14 + CONST]
 lea rax, [rbx + rbx*CONST]
 mov rcx, qword [rbp + CONST]
 lea rax, [rdx + rax*CONST]
 mov qword [rbp + CONST], rcx
 mov rax, qword [rax + CONST]
 mov rbx, qword [rax]
 mov rax, qword [r12 + CONST]
 mov rax, qword [rax + rcx*CONST]
 mov rdx, rbx
 mov rdi, qword [rax + CONST]
 lea rsi, [rax + CONST]
 call CONST
 test rax, rax
 cjmp LABEL251
 mov r9, qword [rbp + CONST]
 mov rsi, qword [r14]
 mov rcx, qword [rbp + CONST]
 add rsi, r9
 jmp LABEL210
LABEL248:
 mov rbx, r14
 jmp LABEL251
LABEL137:
 mov rdi, qword [rbp + CONST]
 call CONST
 cmp byte [rbp + CONST], CONST
 cjmp LABEL283
LABEL440:
 cmp qword [rbp + CONST], CONST
 cjmp LABEL363
LABEL27:
 mov eax, CONST
 jmp LABEL287
LABEL188:
 mov qword [rax + CONST], rcx
 mov rdx, qword [rbp + CONST]
 mov rsi, r13
 mov rdi, qword [rbp + CONST]
 mov qword [rbp + CONST], r9
 mov qword [rbp + CONST], rcx
 call CONST
 mov rax, qword [r13 + CONST]
 mov rcx, qword [rbp + CONST]
 mov r9, qword [rbp + CONST]
 jmp LABEL118
LABEL105:
 mov rdi, qword [rbp + CONST]
 call CONST
 cmp byte [rbp + CONST], CONST
 cjmp LABEL380
 mov rdi, qword [rbp + CONST]
 test rdi, rdi
 cjmp LABEL383
LABEL436:
 call CONST
LABEL383:
 xor eax, eax
LABEL287:
 mov rbx, qword [rbp + CONST]
 xor rbx, qword fs:[CONST]
 cjmp LABEL388
 lea rsp, [rbp + CONST]
 pop rbx
 pop r12
 pop r13
 pop r14
 pop r15
 pop rbp
 ret
LABEL193:
 mov rdx, qword [rbp + CONST]
 mov rdi, r13
 mov qword [rbp + CONST], rcx
 mov qword [rbp + CONST], r9
 call CONST
 mov rax, qword [r13 + CONST]
 mov r9, qword [rbp + CONST]
 mov rcx, qword [rbp + CONST]
 jmp LABEL118
LABEL257:
 lea rsi, [rax + rax*CONST]
 mov rax, qword [rbp + CONST]
 mov qword [rbp + CONST], rdx
 shl rsi, CONST
 mov rdi, qword [rax + CONST]
 call CONST
 test rax, rax
 cjmp LABEL269
 mov rcx, qword [rbp + CONST]
 mov rdx, qword [rbp + CONST]
 shl qword [rcx + CONST], CONST
 mov qword [rcx + CONST], rax
 jmp LABEL418
LABEL20:
 mov qword [rbp + CONST], CONST
 jmp LABEL420
LABEL37:
 mov rdi, qword [rbp + CONST]
 call CONST
 mov byte [rbp + CONST], CONST
 mov qword [rbp + CONST], rax
 test rax, rax
 cjmp LABEL426
 mov rdi, qword [rbp + CONST]
 test rdi, rdi
 cjmp LABEL27
 call CONST
 jmp LABEL27
LABEL380:
 mov rdi, qword [rbp + CONST]
 call CONST
 mov rdi, qword [rbp + CONST]
 test rdi, rdi
 cjmp LABEL436
 jmp LABEL383
LABEL283:
 mov rdi, qword [rbp + CONST]
 call CONST
 jmp LABEL440
LABEL170:
 mov rdi, qword [rbp + CONST]
 call CONST
 cmp byte [rbp + CONST], CONST
 mov eax, CONST
 cjmp LABEL287
 mov rdi, qword [rbp + CONST]
 mov dword [rbp + CONST], eax
 call CONST
 mov eax, dword [rbp + CONST]
 jmp LABEL287
LABEL293:
 mov rdi, qword [rbp + CONST]
 call CONST
 cmp byte [rbp + CONST], CONST
 cjmp LABEL383
 mov rdi, qword [rbp + CONST]
 call CONST
 xor eax, eax
 jmp LABEL287
LABEL311:
 mov rdi, qword [rbp + CONST]
 call CONST
 jmp LABEL461
LABEL388:
 call CONST
