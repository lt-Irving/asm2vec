 .name fcn.00019090
 .offset 0000000000019090
 .file diff
 push r15
 push r14
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov rbp, qword [rdx + CONST]
 test rbp, rbp
 cjmp LABEL9
 cjmp LABEL10
 mov rax, qword [rdx + CONST]
 lea rcx, [rax + rbp*CONST]
 nop dword [rax]
LABEL17:
 add rbp, qword [rax]
 add rax, CONST
 cmp rcx, rax
 cjmp LABEL17
LABEL10:
 mov rax, qword [rsi + CONST]
 mov r14, rdx
 mov r12, rsi
 mov r13, rdi
 and rax, rbp
 lea rdx, [rax + rax*CONST]
 mov rax, qword [rsi + CONST]
 lea rax, [rax + rdx*CONST]
 mov r10, qword [rax]
 test r10, r10
 cjmp LABEL28
 mov r11, qword [rax + CONST]
 xor r9d, r9d
 nop word [rax + rax]
LABEL42:
 mov rbx, qword [r11 + r9*CONST]
 cmp qword [rbx], rbp
 cjmp LABEL34
 lea rdi, [rbx + CONST]
 mov rsi, r14
 call CONST
 test al, al
 cjmp LABEL39
LABEL34:
 add r9, CONST
 cmp r10, r9
 cjmp LABEL42
LABEL28:
 mov esi, CONST
 mov edi, CONST
 call CONST
 mov rbx, rax
 test rax, rax
 cjmp LABEL48
 lea r15, [rax + CONST]
 mov rsi, r14
 mov rdi, r15
 call CONST
 test eax, eax
 cjmp LABEL54
 mov rax, qword [r14 + CONST]
 mov qword [rbx + CONST], r15
 test rax, rax
 cjmp LABEL58
 mov rsi, qword [r14 + CONST]
 mov r8, qword [r12]
 lea r9, [rsi + rax*CONST]
 jmp LABEL62
LABEL88:
 movzx ecx, byte [rbx + CONST]
 movzx edx, byte [rax + CONST]
 mov r10d, ecx
 shr dl, CONST
 and ecx, CONST
 shr r10b, CONST
 or edx, r10d
 and edx, CONST
 shl edx, CONST
 or edx, ecx
 mov byte [rbx + CONST], dl
 cmp edi, CONST
 cjmp LABEL75
 cmp edi, CONST
 cjmp LABEL77
 or edx, CONST
 mov byte [rbx + CONST], dl
LABEL90:
 add rsi, CONST
 cmp r9, rsi
 cjmp LABEL58
LABEL62:
 mov rax, qword [rsi]
 shl rax, CONST
 add rax, r8
 movzx edi, byte [rax + CONST]
 cmp edi, CONST
 cjmp LABEL88
 test dword [rax + CONST], CONST
 cjmp LABEL90
 movzx edx, byte [rbx + CONST]
 movzx eax, byte [rax + CONST]
 mov ecx, edx
 shr al, CONST
 and edx, CONST
 shr cl, CONST
 or eax, ecx
 and eax, CONST
 shl eax, CONST
 or eax, edx
 mov byte [rbx + CONST], al
LABEL125:
 add rsi, CONST
 or byte [rbx + CONST], CONST
 cmp r9, rsi
 cjmp LABEL62
LABEL58:
 mov rdx, rbp
 mov rsi, rbx
 mov rdi, r12
 call CONST
 test eax, eax
 cjmp LABEL111
LABEL39:
 add rsp, CONST
 mov rax, rbx
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL75:
 or edx, CONST
 mov byte [rbx + CONST], dl
 jmp LABEL90
LABEL77:
 cmp edi, CONST
 cjmp LABEL125
 test dword [rax + CONST], CONST
 cjmp LABEL90
 jmp LABEL125
LABEL54:
 mov rdi, rbx
 call CONST
LABEL48:
 mov dword [r13], CONST
 xor ebx, ebx
 jmp LABEL39
LABEL9:
 mov dword [rdi], CONST
 xor ebx, ebx
 jmp LABEL39
LABEL111:
 mov rdi, rbx
 call CONST
 jmp LABEL48
