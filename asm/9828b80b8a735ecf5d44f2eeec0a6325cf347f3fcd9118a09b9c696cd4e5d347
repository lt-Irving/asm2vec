 .name sym.getenv
 .offset 00000000000af9e0
 .file bash
 endbr64
 push r14
 push r13
 push r12
 push rbp
 push rbx
 cmp byte [rdi], CONST
 cjmp LABEL7
 mov rbp, rdi
 call CONST
 mov rbx, rax
 test rax, rax
 cjmp LABEL12
 mov rdi, qword [rip + CONST]
 test rdi, rdi
 cjmp LABEL15
 call CONST
LABEL15:
 mov r12, qword [rbx + CONST]
 test r12, r12
 cjmp LABEL19
 mov rdi, r12
 call CONST
 lea rdi, [rax + CONST]
 call CONST
 mov rsi, r12
 mov rdi, rax
 call CONST
 mov r12, rax
LABEL19:
 mov qword [rip + CONST], r12
LABEL45:
 pop rbx
 mov rax, r12
 pop rbp
 pop r12
 pop r13
 pop r14
 ret
LABEL12:
 cmp qword [rip + CONST], CONST
 cjmp LABEL37
 mov rdi, rbp
 call CONST
 test rax, rax
 cjmp LABEL7
 test byte [rax + CONST], CONST
 cjmp LABEL7
 mov r12, qword [rax + CONST]
 jmp LABEL45
LABEL7:
 xor r12d, r12d
 pop rbx
 pop rbp
 mov rax, r12
 pop r12
 pop r13
 pop r14
 ret
LABEL37:
 mov r12, qword [rip + CONST]
 test r12, r12
 cjmp LABEL7
 mov rdi, rbp
 call CONST
 mov rbx, qword [r12]
 mov r14d, eax
 test rbx, rbx
 cjmp LABEL7
 add r12, CONST
 movsxd r13, eax
 jmp LABEL65
LABEL74:
 movzx eax, byte [rbp]
 cmp byte [rbx], al
 cjmp LABEL68
LABEL76:
 mov rbx, qword [r12]
 add r12, CONST
 test rbx, rbx
 cjmp LABEL7
LABEL65:
 test r14d, r14d
 cjmp LABEL74
 cmp byte [rbx + r13], CONST
 cjmp LABEL76
LABEL87:
 lea r12, [rbx + r13 + CONST]
 jmp LABEL45
LABEL68:
 mov rdx, r13
 mov rsi, rbp
 mov rdi, rbx
 call CONST
 test eax, eax
 cjmp LABEL76
 cmp byte [rbx + r13], CONST
 cjmp LABEL76
 jmp LABEL87
