 .name sym.trim_pathname
 .offset 000000000003f580
 .file bash
 endbr64
 push r12
 mov r12, rdi
 push rbp
 push rbx
 sub rsp, CONST
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 test rdi, rdi
 cjmp LABEL10
 call CONST
 mov rbx, rax
 test eax, eax
 cjmp LABEL14
LABEL10:
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL17
 add rsp, CONST
 mov rax, r12
 pop rbx
 pop rbp
 pop r12
 ret
LABEL14:
 lea rdi, [rip + CONST]
 call CONST
 mov rdi, rax
 test rax, rax
 cjmp LABEL10
 cmp byte [rax], CONST
 cjmp LABEL10
 mov rsi, rsp
 mov qword [rsp], CONST
 call CONST
 test eax, eax
 cjmp LABEL10
 mov rdi, qword [rsp]
 test rdi, rdi
 cjmp LABEL10
 movzx eax, byte [r12]
 mov rbp, r12
 cmp al, CONST
 cjmp LABEL42
LABEL104:
 test al, al
 cjmp LABEL10
 mov rdx, rbp
 xor ecx, ecx
 nop
LABEL55:
 cmp al, CONST
 sete al
 add rdx, CONST
 movzx eax, al
 add ecx, eax
 movzx eax, byte [rdx]
 test al, al
 cjmp LABEL55
 movsxd rcx, ecx
 cmp rdi, rcx
 cjmp LABEL10
 movsxd rbx, ebx
 xor eax, eax
 add rbx, r12
 cmp byte [rbx], CONST
 mov rsi, rbx
 setne al
 sub rsi, rax
 cmp rbp, rsi
 cjmp LABEL67
 jmp LABEL68
LABEL73:
 sub rsi, CONST
 cmp rbp, rsi
 cjmp LABEL10
LABEL67:
 cmp byte [rsi], CONST
 cjmp LABEL73
 sub rdi, CONST
 cjmp LABEL73
 mov qword [rsp], CONST
LABEL68:
 cmp rbp, rsi
 cjmp LABEL10
 mov rax, rsi
 sub rax, rbp
 cmp eax, CONST
 cjmp LABEL10
 mov eax, CONST
 sub rbx, rsi
 mov byte [rbp + CONST], CONST
 lea rdi, [rbp + CONST]
 mov word [rbp], ax
 movsxd rbx, ebx
 mov rdx, rbx
 call CONST
 mov byte [rbp + rbx + CONST], CONST
 jmp LABEL10
LABEL42:
 mov rax, r12
 nop dword [rax + rax]
LABEL101:
 mov rcx, rax
 movzx edx, byte [rax + CONST]
 add rax, CONST
 test dl, dl
 cjmp LABEL10
 cmp dl, CONST
 cjmp LABEL101
 movzx eax, byte [rcx + CONST]
 lea rbp, [rcx + CONST]
 jmp LABEL104
LABEL17:
 call CONST
