 .name fcn.00006460
 .offset 0000000000006460
 .file cp
 push rbp
 mov rbp, rsp
 push r15
 push r14
 mov r14, rsi
 push r13
 mov r13, rcx
 push r12
 mov r12, rdi
 push rbx
 mov rbx, rdx
 sub rsp, CONST
 mov rax, qword fs:[CONST]
 mov qword [rbp + CONST], rax
 xor eax, eax
 call CONST
 mov rcx, rsp
 lea r8, [rax + CONST]
 add rax, CONST
 mov rdx, rax
 and rax, CONST
 sub rcx, rax
 and rdx, CONST
 mov rax, rcx
 cmp rsp, rax
 cjmp LABEL25
LABEL29:
 sub rsp, CONST
 or qword [rsp + CONST], CONST
 cmp rsp, rax
 cjmp LABEL29
LABEL25:
 and edx, CONST
 sub rsp, rdx
 test rdx, rdx
 cjmp LABEL33
LABEL158:
 lea rdi, [rsp + CONST]
 mov rsi, r12
 mov rdx, r8
 and rdi, CONST
 call CONST
 mov r12, rax
 add r14, rax
 test rbx, rbx
 cjmp LABEL42
 lea r15, [rbp + CONST]
 jmp LABEL44
LABEL60:
 cmp byte [r13 + CONST], CONST
 cjmp LABEL46
LABEL97:
 movzx r8d, byte [r13 + CONST]
 test r8b, r8b
 cjmp LABEL49
LABEL108:
 cmp byte [rbx + CONST], CONST
 cjmp LABEL51
LABEL117:
 mov rax, qword [rbx + CONST]
 mov byte [r12 + rax], CONST
 mov rbx, qword [rbx + CONST]
 test rbx, rbx
 cjmp LABEL42
LABEL44:
 mov rax, qword [rbx + CONST]
 cmp byte [r13 + CONST], CONST
 mov byte [r12 + rax], CONST
 cjmp LABEL60
 mov rax, qword [rbx + CONST]
 mov rdx, qword [rbx + CONST]
 mov rsi, r15
 mov rdi, r12
 mov qword [rbp + CONST], rdx
 mov rdx, qword [rbx + CONST]
 mov qword [rbp + CONST], rax
 mov rax, qword [rbx + CONST]
 mov qword [rbp + CONST], rdx
 mov qword [rbp + CONST], rax
 call CONST
 test eax, eax
 cjmp LABEL60
 mov rsi, r12
 mov edi, CONST
 call CONST
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 mov r13, rax
 call CONST
 mov r12, rax
 call CONST
 mov rcx, r13
 mov rdx, r12
 xor edi, edi
 mov esi, dword [rax]
 xor eax, eax
 call CONST
 xor r8d, r8d
 jmp LABEL91
LABEL46:
 mov edx, dword [rbx + CONST]
 mov esi, dword [rbx + CONST]
 mov rdi, r12
 call CONST
 test eax, eax
 cjmp LABEL97
 mov rdi, r13
 call CONST
 test al, al
 cjmp LABEL101
 mov edx, dword [rbx + CONST]
 mov esi, CONST
 mov rdi, r12
 call CONST
 movzx r8d, byte [r13 + CONST]
 test r8b, r8b
 cjmp LABEL108
 nop dword [rax]
LABEL49:
 mov r8d, dword [rbx + CONST]
 mov ecx, CONST
 mov rdx, r12
 mov rdi, r14
 mov esi, CONST
 call CONST
 test eax, eax
 cjmp LABEL117
 xor r8d, r8d
 jmp LABEL91
LABEL51:
 mov esi, dword [rbx + CONST]
 mov rdi, r12
 mov byte [rbp + CONST], r8b
 call CONST
 test eax, eax
 cjmp LABEL117
 mov rsi, r12
 mov edi, CONST
 call CONST
 mov edx, CONST
 lea rsi, [rip + CONST]
 mov r13, rax
LABEL166:
 xor edi, edi
 call CONST
 mov r12, rax
 call CONST
 mov rcx, r13
 mov rdx, r12
 xor edi, edi
 mov esi, dword [rax]
 xor eax, eax
 call CONST
 movzx r8d, byte [rbp + CONST]
 jmp LABEL91
LABEL42:
 mov r8d, CONST
LABEL91:
 mov rax, qword [rbp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL147
 lea rsp, [rbp + CONST]
 mov eax, r8d
 pop rbx
 pop r12
 pop r13
 pop r14
 pop r15
 pop rbp
 ret
LABEL33:
 or qword [rsp + rdx + CONST], CONST
 jmp LABEL158
LABEL101:
 mov rsi, r12
 mov edi, CONST
 mov byte [rbp + CONST], al
 call CONST
 mov edx, CONST
 lea rsi, [rip + CONST]
 mov r13, rax
 jmp LABEL166
LABEL147:
 call CONST
