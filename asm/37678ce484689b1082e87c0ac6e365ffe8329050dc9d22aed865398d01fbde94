 .name sym.set_shellopts
 .offset 000000000009f530
 .file bash
 endbr64
 push r15
 mov edi, CONST
 lea r15, [rip + CONST]
 push r14
 xor r14d, r14d
 push r13
 lea r13, [rip + CONST]
 push r12
 push rbp
 push rbx
 lea rbx, [rip + CONST]
 sub rsp, CONST
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 mov r12, rsp
 mov rbp, r12
 jmp LABEL18
LABEL41:
 mov rax, qword [rbx + CONST]
 test rax, rax
 cjmp LABEL21
 mov rdi, r15
 call rax
 test eax, eax
 setne al
LABEL128:
 test al, al
 cjmp LABEL27
LABEL47:
 mov rdi, r15
 call CONST
 mov byte [rbp], CONST
 lea r14d, [r14 + rax + CONST]
LABEL27:
 add rbp, CONST
 add rbx, CONST
 test r13, r13
 cjmp LABEL35
LABEL51:
 mov r15, r13
 mov edi, dword [rbx + CONST]
 mov r13, qword [rbx + CONST]
LABEL18:
 mov byte [rbp], CONST
 test edi, edi
 cjmp LABEL41
 call CONST
 test rax, rax
 cjmp LABEL27
 mov r8d, dword [rax]
 test r8d, r8d
 cjmp LABEL47
 add rbp, CONST
 add rbx, CONST
 test r13, r13
 cjmp LABEL51
 nop word [rax + rax]
LABEL35:
 lea edi, [r14 + CONST]
 lea rbp, [rip + CONST]
 xor r14d, r14d
 movsxd rdi, edi
 lea rbx, [rip + CONST]
 lea r13, [rip + CONST]
 call CONST
 mov r15, rax
 jmp LABEL61
LABEL70:
 add r12, CONST
 test rbx, rbx
 cjmp LABEL64
LABEL83:
 mov rax, qword [rbp]
 mov r13, rbx
 add rbp, CONST
 mov rbx, rax
LABEL61:
 cmp byte [r12], CONST
 cjmp LABEL70
 movsxd rdi, r14d
 mov rsi, r13
 add r12, CONST
 add rdi, r15
 call CONST
 mov rdi, r13
 call CONST
 add eax, r14d
 lea r14d, [rax + CONST]
 cdqe
 mov byte [r15 + rax], CONST
 test rbx, rbx
 cjmp LABEL83
LABEL64:
 mov rax, r15
 test r14d, r14d
 cjmp LABEL86
 sub r14d, CONST
 movsxd r14, r14d
 lea rax, [r15 + r14]
LABEL86:
 mov byte [rax], CONST
 lea rdi, [rip + CONST]
 call CONST
 test rax, rax
 cjmp LABEL94
 mov ebx, dword [rax + CONST]
 mov rsi, r15
 lea rdi, [rip + CONST]
 mov edx, ebx
 and edx, CONST
 mov dword [rax + CONST], edx
 xor edx, edx
 call CONST
 mov esi, dword [rip + CONST]
 mov edx, dword [rax + CONST]
 mov ecx, edx
 or ecx, CONST
 mov dword [rax + CONST], ecx
 test esi, esi
 cjmp LABEL109
 and ebx, CONST
 cjmp LABEL111
LABEL109:
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL114
 add rsp, CONST
 mov rdi, r15
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 jmp CONST
LABEL21:
 mov rax, qword [rbx]
 mov edi, dword [rax]
 test edi, edi
 setne al
 jmp LABEL128
LABEL94:
 xor edx, edx
 mov rsi, r15
 lea rdi, [rip + CONST]
 call CONST
 mov edx, dword [rax + CONST]
 mov ecx, edx
 or ecx, CONST
 mov dword [rax + CONST], ecx
 mov ecx, dword [rip + CONST]
 test ecx, ecx
 cjmp LABEL109
LABEL111:
 test dl, CONST
 cjmp LABEL109
 and edx, CONST
 or edx, CONST
 mov dword [rax + CONST], edx
 jmp LABEL109
LABEL114:
 call CONST
