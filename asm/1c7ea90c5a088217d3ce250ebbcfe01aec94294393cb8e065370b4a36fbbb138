 .name sym.array_keys
 .offset 000000000007e560
 .file bash
 endbr64
 push r13
 push r12
 push rbp
 mov ebp, esi
 xor esi, esi
 sub rsp, CONST
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 lea rcx, [rsp + CONST]
 lea rdx, [rsp + CONST]
 call CONST
 test rax, rax
 cjmp LABEL14
 mov rdx, qword [rsp + CONST]
 movzx ecx, byte [rdx]
 cmp cl, CONST
 cjmp LABEL18
 cmp cl, CONST
 cjmp LABEL14
LABEL18:
 cmp byte [rdx + CONST], CONST
 cjmp LABEL14
 mov rdi, qword [rax + CONST]
 test rdi, rdi
 cjmp LABEL14
 mov eax, dword [rax + CONST]
 test ah, CONST
 cjmp LABEL14
 test al, CONST
 cjmp LABEL30
 test al, CONST
 cjmp LABEL32
 call CONST
 mov r13, rax
LABEL62:
 test r13, r13
 cjmp LABEL14
 mov rax, qword [rsp + CONST]
 xor edx, edx
 mov esi, ebp
 mov rdi, r13
 cmp byte [rax], CONST
 cjmp LABEL42
 and ebp, CONST
 cjmp LABEL44
LABEL42:
 call CONST
 mov r12, rax
LABEL77:
 mov rdi, r13
 call CONST
 jmp LABEL49
LABEL14:
 xor r12d, r12d
LABEL49:
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL53
 add rsp, CONST
 mov rax, r12
 pop rbp
 pop r12
 pop r13
 ret
LABEL32:
 call CONST
 mov r13, rax
 jmp LABEL62
LABEL30:
 lea rdi, [rip + CONST]
 call CONST
 xor esi, esi
 mov rdi, rax
 call CONST
 mov r13, rax
 jmp LABEL62
LABEL44:
 call CONST
 mov rbp, rax
 mov rdi, rax
 call CONST
 mov rdi, rbp
 mov r12, rax
 call CONST
 jmp LABEL77
LABEL53:
 call CONST
