 .name fcn.0000cdb0
 .offset 000000000000cdb0
 .file diff
 push r15
 mov rax, rdi
 mov r15, rdx
 push r14
 push r13
 push r12
 push rbp
 push rbx
 mov ebx, esi
 sub rsp, CONST
 mov rcx, qword [rip + CONST]
 mov rbp, qword [rip + CONST]
 mov byte [rsp + CONST], sil
 mov r12, qword [rip + CONST]
 mov qword [rsp + CONST], rcx
 cmp sil, CONST
 cjmp LABEL16
 cmp sil, CONST
 cjmp LABEL18
 xor r13d, r13d
 test rdi, rdi
 cjmp LABEL21
LABEL112:
 mov rdx, qword [rax + CONST]
 mov rdi, rax
 cmp byte [rdx + CONST], CONST
 mov rdx, r12
 sete r14b
 xor esi, esi
 call CONST
 mov rdx, rax
 cmp bl, CONST
 cjmp LABEL31
LABEL72:
 test r15, r15
 cjmp LABEL33
 mov rax, qword [r15 + CONST]
 cmp byte [rax + CONST], CONST
 sete al
 or r14d, eax
 mov rax, qword [r15]
 cmp byte [rax], CONST
 cjmp LABEL40
LABEL33:
 test r14b, r14b
 cjmp LABEL42
LABEL68:
 mov rax, qword [rbp + CONST]
 cmp rax, qword [rbp + CONST]
 cjmp LABEL45
 lea rdx, [rax + CONST]
 mov qword [rbp + CONST], rdx
 mov byte [rax], CONST
LABEL42:
 test r13b, r13b
 cjmp LABEL50
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL40:
 mov rsi, qword [rsp + CONST]
 mov rdi, rdx
 call CONST
 mov rdx, r12
 mov rdi, r15
 mov rsi, rax
 call CONST
 test r14b, r14b
 cjmp LABEL42
 jmp LABEL68
LABEL21:
 xor r14d, r14d
 xor edx, edx
 cmp bl, CONST
 cjmp LABEL72
LABEL31:
 mov rax, qword [rsp + CONST]
 mov rdi, rdx
 lea rsi, [r12 + rax + CONST]
 shr rsi, CONST
 call CONST
 lea rdx, [rax + CONST]
 cmp bl, CONST
 cjmp LABEL80
 mov rax, qword [r15 + CONST]
 mov esi, CONST
 cmp byte [rax + CONST], CONST
 sete al
 cmp al, r14b
 cjmp LABEL86
 cmp r14b, CONST
 sbb esi, esi
 and esi, CONST
 add esi, CONST
 cmp r14b, CONST
 sbb eax, eax
 and eax, CONST
 add eax, CONST
 mov byte [rsp + CONST], al
 jmp LABEL86
LABEL50:
 add rsp, CONST
 mov edi, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 jmp CONST
LABEL16:
 mov qword [rsp + CONST], rdi
 mov edi, CONST
 call CONST
 mov rax, qword [rsp + CONST]
LABEL133:
 mov r13d, CONST
 test rax, rax
 cjmp LABEL112
 mov rax, qword [rsp + CONST]
 xor edi, edi
 xor r14d, r14d
 lea rsi, [r12 + rax + CONST]
 shr rsi, CONST
 call CONST
 lea rdx, [rax + CONST]
LABEL80:
 movsx esi, bl
LABEL86:
 mov rax, qword [rbp + CONST]
 cmp rax, qword [rbp + CONST]
 cjmp LABEL123
 movzx ecx, byte [rsp + CONST]
 lea rsi, [rax + CONST]
 mov qword [rbp + CONST], rsi
 mov byte [rax], cl
 jmp LABEL72
LABEL18:
 mov qword [rsp + CONST], rdi
 mov edi, CONST
 call CONST
 mov rax, qword [rsp + CONST]
 jmp LABEL133
LABEL45:
 mov esi, CONST
 mov rdi, rbp
 call CONST
 jmp LABEL42
LABEL123:
 mov rdi, rbp
 mov qword [rsp + CONST], rdx
 call CONST
 mov rdx, qword [rsp + CONST]
 jmp LABEL72
