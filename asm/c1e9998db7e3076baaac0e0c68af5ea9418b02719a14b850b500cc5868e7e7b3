 .name fcn.00002e00
 .offset 0000000000002e00
 .file dircolors
 push r15
 push r14
 push r13
 mov r13, rdi
 lea rdi, [rip + CONST]
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov qword [rsp + CONST], rsi
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], CONST
 call CONST
 test rax, rax
 cjmp LABEL17
 mov rdi, rax
 cmp byte [rax], CONST
 lea rax, [rip + CONST]
 cmovne rax, rdi
 mov qword [rsp + CONST], rax
LABEL260:
 mov dword [rsp], CONST
 lea r12, [rip + CONST]
 xor ebx, ebx
 mov byte [rsp + CONST], CONST
 nop dword [rax + rax]
LABEL46:
 add rbx, CONST
 test r13, r13
 cjmp LABEL30
LABEL137:
 lea rsi, [rsp + CONST]
 lea rdi, [rsp + CONST]
 mov rcx, r13
 mov edx, CONST
 call CONST
 test rax, rax
 cjmp LABEL37
 mov r14, qword [rsp + CONST]
LABEL145:
 call CONST
 mov rcx, qword [rax]
 mov r15, rax
LABEL153:
 movzx edx, byte [r14]
 test byte [rcx + rdx*CONST + CONST], CONST
 cjmp LABEL44
 test dl, dl
 cjmp LABEL46
 cmp dl, CONST
 cjmp LABEL46
 mov rbp, r14
 nop dword [rax + rax]
LABEL60:
 movzx eax, byte [rbp + CONST]
 add rbp, CONST
 mov rdx, rax
 movzx eax, word [rcx + rax*CONST]
 shr ax, CONST
 xor eax, CONST
 test dl, dl
 setne dl
 test dl, al
 cjmp LABEL60
 mov rsi, rbp
 mov rdi, r14
 sub rsi, r14
 call CONST
 cmp byte [rbp], CONST
 mov r14, rax
 cjmp LABEL67
 mov rcx, qword [r15]
 nop dword [rax]
LABEL73:
 movzx edx, byte [rbp + CONST]
 add rbp, CONST
 test byte [rcx + rdx*CONST + CONST], CONST
 cjmp LABEL73
 test dl, dl
 cjmp LABEL67
 mov rsi, rbp
 cmp dl, CONST
 cjmp LABEL67
 nop dword [rax + rax]
LABEL88:
 mov rdi, rsi
 movzx eax, byte [rsi + CONST]
 add rsi, CONST
 test al, al
 setne dl
 cmp al, CONST
 setne al
 test dl, al
 cjmp LABEL88
 movzx eax, byte [rsi + CONST]
 test byte [rcx + rax*CONST + CONST], CONST
 cjmp LABEL91
LABEL150:
 sub rsi, rbp
 mov rdi, rbp
 call CONST
 mov rbp, rax
 test r14, r14
 cjmp LABEL46
 test rax, rax
 cjmp LABEL99
 lea rsi, [rip + CONST]
 mov rdi, r14
 call CONST
 test eax, eax
 cjmp LABEL104
 mov eax, dword [rsp]
 cmp eax, CONST
 cjmp LABEL107
 test eax, eax
 cjmp LABEL109
 movzx eax, byte [r14]
 cmp al, CONST
 cjmp LABEL112
LABEL190:
 cmp al, CONST
 cjmp LABEL114
 lea rsi, [rip + CONST]
 mov rdi, r14
 call CONST
 test eax, eax
 cjmp LABEL109
 lea rsi, [rip + CONST]
 mov rdi, r14
 call CONST
 test eax, eax
 cjmp LABEL109
 lea rsi, [rip + CONST]
 mov rdi, r14
 call CONST
 test eax, eax
 cjmp LABEL129
 nop dword [rax + rax]
LABEL109:
 mov rdi, r14
 add rbx, CONST
 call CONST
 mov rdi, rbp
 call CONST
 test r13, r13
 cjmp LABEL137
LABEL30:
 lea rax, [rip + CONST]
 cmp r12, rax
 cjmp LABEL140
 mov rdi, r12
 mov r14, r12
 call CONST
 lea r12, [r12 + rax + CONST]
 jmp LABEL145
LABEL91:
 mov rsi, rdi
 movzx eax, byte [rdi + CONST]
 sub rdi, CONST
 test byte [rcx + rax*CONST + CONST], CONST
 cjmp LABEL150
 jmp LABEL91
LABEL44:
 add r14, CONST
 jmp LABEL153
LABEL67:
 test r14, r14
 cjmp LABEL46
LABEL99:
 mov rdx, qword [rsp + CONST]
 mov esi, CONST
 xor edi, edi
 call CONST
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 mov r15, rax
 call CONST
 mov r8, rbx
 mov rcx, r15
 xor esi, esi
 mov rdx, rax
 xor edi, edi
 xor eax, eax
 call CONST
 mov rdi, r14
 call CONST
 mov byte [rsp + CONST], CONST
 jmp LABEL46
LABEL104:
 mov rsi, qword [rsp + CONST]
 xor edx, edx
 mov rdi, rbp
 call CONST
 cmp dword [rsp], CONST
 cjmp LABEL181
 mov dword [rsp], CONST
 test eax, eax
 cjmp LABEL109
LABEL181:
 mov dword [rsp], CONST
 jmp LABEL109
LABEL107:
 movzx eax, byte [r14]
 mov dword [rsp], CONST
 cmp al, CONST
 cjmp LABEL190
LABEL112:
 mov rax, qword [rip + CONST]
 cmp qword [rip + CONST], rax
 cjmp LABEL193
LABEL252:
 lea rdx, [rax + CONST]
 mov rdi, r14
 mov qword [rip + CONST], rdx
 mov byte [rax], CONST
 call CONST
 mov rax, qword [rip + CONST]
 cmp qword [rip + CONST], rax
 cjmp LABEL201
LABEL257:
 lea rdx, [rax + CONST]
 mov rdi, rbp
 mov qword [rip + CONST], rdx
 mov byte [rax], CONST
 call CONST
 mov rax, qword [rip + CONST]
 cmp qword [rip + CONST], rax
 cjmp LABEL209
LABEL243:
 lea rdx, [rax + CONST]
 mov qword [rip + CONST], rdx
 mov byte [rax], CONST
 jmp LABEL109
LABEL37:
 mov rdi, qword [rsp + CONST]
 call CONST
LABEL140:
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL218
 movzx eax, byte [rsp + CONST]
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL114:
 mov rdi, r14
 call CONST
 mov rax, qword [rip + CONST]
 cmp qword [rip + CONST], rax
 cjmp LABEL232
LABEL298:
 mov rax, qword [rip + CONST]
 mov rdi, rbp
 lea rdx, [rax + CONST]
 mov qword [rip + CONST], rdx
 mov byte [rax], CONST
 call CONST
 mov rax, qword [rip + CONST]
 cmp qword [rip + CONST], rax
 cjmp LABEL209
LABEL247:
 mov rax, qword [rip + CONST]
 jmp LABEL243
LABEL209:
 mov esi, CONST
 lea rdi, [rip + CONST]
 call CONST
 jmp LABEL247
LABEL193:
 mov esi, CONST
 lea rdi, [rip + CONST]
 call CONST
 mov rax, qword [rip + CONST]
 jmp LABEL252
LABEL201:
 mov esi, CONST
 lea rdi, [rip + CONST]
 call CONST
 mov rax, qword [rip + CONST]
 jmp LABEL257
LABEL17:
 lea rax, [rip + CONST]
 mov qword [rsp + CONST], rax
 jmp LABEL260
LABEL129:
 xor r15d, r15d
 mov qword [rsp + CONST], rbx
 lea rsi, [rip + CONST]
 mov rbx, r15
 jmp LABEL265
LABEL275:
 add rbx, CONST
 lea rax, [rip + CONST]
 mov rsi, qword [rax + rbx*CONST]
 test rsi, rsi
 cjmp LABEL270
LABEL265:
 mov rdi, r14
 mov r15d, ebx
 call CONST
 test eax, eax
 cjmp LABEL275
 mov rax, qword [rip + CONST]
 cmp qword [rip + CONST], rax
 mov rbx, qword [rsp + CONST]
 cjmp LABEL279
LABEL336:
 lea rax, [rip + CONST]
 movsxd r15, r15d
 mov r15, qword [rax + r15*CONST]
 mov rax, qword [rip + CONST]
 lea rdx, [rax + CONST]
 mov qword [rip + CONST], rdx
 movzx edx, byte [r15]
 mov byte [rax], dl
 mov rax, qword [rip + CONST]
 cmp qword [rip + CONST], rax
 cjmp LABEL290
LABEL340:
 mov rax, qword [rip + CONST]
 lea rdx, [rax + CONST]
 mov qword [rip + CONST], rdx
 movzx edx, byte [r15 + CONST]
 mov byte [rax], dl
 mov rax, qword [rip + CONST]
 cmp qword [rip + CONST], rax
 cjmp LABEL298
LABEL232:
 mov esi, CONST
 lea rdi, [rip + CONST]
 call CONST
 jmp LABEL298
LABEL270:
 cmp dword [rsp], CONST
 mov rbx, qword [rsp + CONST]
 cjmp LABEL109
 mov rdx, qword [rsp + CONST]
 test rdx, rdx
 cjmp LABEL308
 mov esi, CONST
 xor edi, edi
 call CONST
 mov r15, rax
LABEL332:
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov r9, r14
 mov r8, rbx
 mov rcx, r15
 mov rdx, rax
 xor esi, esi
 xor edi, edi
 xor eax, eax
 call CONST
 mov byte [rsp + CONST], CONST
 jmp LABEL109
LABEL308:
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov r15, rax
 jmp LABEL332
LABEL279:
 mov esi, CONST
 lea rdi, [rip + CONST]
 call CONST
 jmp LABEL336
LABEL290:
 mov esi, CONST
 lea rdi, [rip + CONST]
 call CONST
 jmp LABEL340
LABEL218:
 call CONST
