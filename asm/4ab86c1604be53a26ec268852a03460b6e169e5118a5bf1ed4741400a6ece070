 .name sym.assoc_to_string
 .offset 000000000007f370
 .file bash
 endbr64
 push r15
 push r14
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov qword [rsp + CONST], rsi
 test rdi, rdi
 cjmp LABEL10
 mov ecx, dword [rdi + CONST]
 mov r14, rdi
 test ecx, ecx
 cjmp LABEL14
 mov eax, dword [rdi + CONST]
 mov r12d, edx
 xor r13d, r13d
 xor ebp, ebp
 test eax, eax
 cjmp LABEL20
 nop dword [rax]
LABEL66:
 mov rax, qword [r14]
 mov rbx, qword [rax + r13*CONST]
 test rbx, rbx
 cjmp LABEL25
 jmp LABEL26
LABEL45:
 call CONST
 mov rdi, rax
 mov r15, rax
 call CONST
 mov rsi, rbp
 mov rdi, rax
 call CONST
 mov rbp, rax
 test r15, r15
 cjmp LABEL36
LABEL42:
 mov rbx, qword [rbx]
 test rbx, rbx
 cjmp LABEL26
LABEL25:
 mov r15, qword [rbx + CONST]
 test r15, r15
 cjmp LABEL42
 mov rdi, r15
 test r12d, r12d
 cjmp LABEL45
 call CONST
 lea rdi, [rax + CONST]
 call CONST
 mov rsi, r15
 mov rdi, rax
 call CONST
 mov rdi, rax
 mov r15, rax
 call CONST
 mov rsi, rbp
 mov rdi, rax
 call CONST
 mov rbp, rax
LABEL36:
 mov rdi, r15
 call CONST
 mov rbx, qword [rbx]
 test rbx, rbx
 cjmp LABEL25
LABEL26:
 add r13, CONST
 cmp dword [r14 + CONST], r13d
 cjmp LABEL66
 test rbp, rbp
 cjmp LABEL20
 cmp qword [rbp], CONST
 cjmp LABEL70
 mov rdi, rbp
 xor eax, eax
 call CONST
 mov rbp, rax
 test rax, rax
 cjmp LABEL20
LABEL70:
 mov rsi, qword [rsp + CONST]
 mov rdi, rbp
 call CONST
 mov r12, rax
LABEL97:
 mov rdi, rbp
 call CONST
LABEL102:
 add rsp, CONST
 mov rax, r12
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL20:
 mov edi, CONST
 xor ebp, ebp
 call CONST
 mov byte [rax], CONST
 mov r12, rax
 jmp LABEL97
LABEL14:
 mov edi, CONST
 call CONST
 mov byte [rax], CONST
 mov r12, rax
 jmp LABEL102
LABEL10:
 xor r12d, r12d
 jmp LABEL102
