 .name fcn.000060d0
 .offset 00000000000060d0
 .file dash
 endbr64
 push r15
 push r14
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 cmp edi, CONST
 cjmp LABEL9
 mov rbp, qword [rsi + CONST]
 lea r12, [rsi + CONST]
 xor r13d, r13d
 test rbp, rbp
 cjmp LABEL14
 jmp LABEL15
LABEL44:
 mov byte [rax], CONST
 mov rdi, rbp
 lea r14, [rax + CONST]
 call CONST
 mov rbx, qword [rax]
 mov r15, rax
 add dword [rip + CONST], CONST
 test rbx, rbx
 cjmp LABEL24
 test byte [rbx + CONST], CONST
 cjmp LABEL26
LABEL66:
 mov rdi, r14
 call CONST
 and dword [rbx + CONST], CONST
 mov qword [rbx + CONST], rax
LABEL79:
 sub dword [rip + CONST], CONST
 cjmp LABEL32
 mov eax, dword [rip + CONST]
 test eax, eax
 cjmp LABEL35
LABEL32:
 mov rbp, qword [r12 + CONST]
 add r12, CONST
 test rbp, rbp
 cjmp LABEL39
LABEL14:
 lea rdi, [rbp + CONST]
 mov esi, CONST
 call CONST
 test rax, rax
 cjmp LABEL44
 mov rdi, rbp
 call CONST
 mov rdi, qword [rax]
 test rdi, rdi
 cjmp LABEL49
 call CONST
 mov rbp, qword [r12 + CONST]
 add r12, CONST
 test rbp, rbp
 cjmp LABEL14
LABEL39:
 add rsp, CONST
 mov eax, r13d
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL26:
 mov rdi, qword [rbx + CONST]
 call CONST
 jmp LABEL66
LABEL24:
 mov edi, CONST
 call CONST
 mov rdi, rbp
 mov rbx, rax
 call CONST
 mov rdi, r14
 mov qword [rbx + CONST], rax
 call CONST
 mov dword [rbx + CONST], CONST
 mov qword [rbx + CONST], rax
 mov qword [rbx], CONST
 mov qword [r15], rbx
 jmp LABEL79
LABEL35:
 call CONST
 jmp LABEL32
LABEL49:
 mov rdi, qword [rip + CONST]
 mov rcx, rbp
 lea rdx, [rip + CONST]
 lea rsi, [rip + CONST]
 xor eax, eax
 mov r13d, CONST
 call CONST
 jmp LABEL32
LABEL9:
 lea rbp, [rip + CONST]
 lea r12, [rbp + CONST]
 nop dword [rax]
LABEL104:
 mov rbx, qword [rbp]
 test rbx, rbx
 cjmp LABEL95
 nop dword [rax]
LABEL101:
 mov rdi, rbx
 call CONST
 mov rbx, qword [rbx]
 test rbx, rbx
 cjmp LABEL101
LABEL95:
 add rbp, CONST
 cmp rbp, r12
 cjmp LABEL104
LABEL15:
 xor r13d, r13d
 jmp LABEL39
