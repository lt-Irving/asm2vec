 .name fcn.00007a70
 .offset 0000000000007a70
 .file dash
 endbr64
 push r14
 push r13
 mov r13d, esi
 push r12
 push rbp
 mov rbp, rdi
 push rbx
 sub rsp, CONST
 mov edx, dword [rdi + CONST]
 mov ecx, dword [rip + CONST]
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 lea r12, [rsp + CONST]
 lea r14, [rsp + CONST]
 lea eax, [rcx + CONST]
 mov esi, edx
 mov rdi, r12
 mov dword [rip + CONST], edx
 sub esi, eax
 test ecx, ecx
 mov eax, esi
 cmove eax, edx
 mov dword [rip + CONST], eax
 call CONST
 mov rbx, qword [rbp + CONST]
 mov qword [rsp + CONST], r14
 test rbx, rbx
 cjmp LABEL29
 nop dword [rax]
LABEL37:
 mov rdi, rbx
 mov edx, CONST
 mov rsi, r14
 call CONST
 mov rbx, qword [rbx + CONST]
 test rbx, rbx
 cjmp LABEL37
 mov r14, qword [rsp + CONST]
LABEL29:
 mov edx, dword [rip + CONST]
 mov qword [r14], CONST
 and r13d, CONST
 mov rbx, qword [rsp + CONST]
 lea eax, [rdx + CONST]
 mov dword [rip + CONST], eax
 test rbx, rbx
 cjmp LABEL46
 jmp LABEL47
LABEL63:
 and edx, CONST
 cjmp LABEL49
LABEL71:
 mov rbx, qword [rbx]
 test rbx, rbx
 cjmp LABEL49
LABEL46:
 mov rsi, qword [rbx + CONST]
 mov rdi, qword [rbp + CONST]
 xor edx, edx
 call CONST
 mov rdi, qword [rbp + CONST]
 mov esi, r13d
 call CONST
 mov edx, dword [rip + CONST]
 lea ecx, [rdx + CONST]
 cmp ecx, CONST
 cjmp LABEL63
 mov ecx, dword [rip + CONST]
 sub ecx, CONST
 mov dword [rip + CONST], ecx
 test ecx, ecx
 cjmp LABEL49
 mov dword [rip + CONST], CONST
 and edx, CONST
 cjmp LABEL71
 nop dword [rax + rax]
LABEL49:
 mov ecx, dword [rip + CONST]
 lea edx, [rcx + CONST]
LABEL91:
 mov rdi, r12
 mov dword [rsp + CONST], eax
 mov dword [rip + CONST], edx
 call CONST
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 mov eax, dword [rsp + CONST]
 cjmp LABEL82
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 ret
LABEL47:
 xor eax, eax
 jmp LABEL91
LABEL82:
 call CONST
