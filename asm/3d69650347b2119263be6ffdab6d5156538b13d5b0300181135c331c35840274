 .name fcn.000c41c0
 .offset 00000000000c41c0
 .file bash
 endbr64
 push r12
 push rbp
 sub rsp, CONST
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 mov eax, CONST
 test rdi, rdi
 cjmp LABEL9
 mov rbp, rdi
 call CONST
 lea rdi, [rax + CONST]
 call CONST
 mov rsi, rbp
 mov rdi, rax
 call CONST
 mov rdi, qword [rip + CONST]
 mov rbp, rax
 test rdi, rdi
 cjmp LABEL20
 call CONST
LABEL20:
 movzx esi, byte [rbp]
 cmp sil, CONST
 cjmp LABEL24
 cmp sil, CONST
 cjmp LABEL24
 mov dword [rsp + CONST], CONST
 movzx eax, byte [rbp]
 test al, al
 cjmp LABEL30
 mov esi, ebp
 lea rdx, [rbp + CONST]
 neg esi
 nop dword [rax]
LABEL45:
 cmp al, CONST
 cjmp LABEL36
 cmp al, CONST
 cjmp LABEL36
 lea eax, [rsi + rdx]
 mov rcx, rdx
 lea rdx, [rdx + CONST]
 mov dword [rsp + CONST], eax
 movzx eax, byte [rdx + CONST]
 test al, al
 cjmp LABEL45
 mov r12, rbp
LABEL82:
 mov byte [rcx], CONST
 mov rdi, rbp
 call CONST
 lea rdi, [rax + rax + CONST]
 call CONST
 lea rdx, [rsp + CONST]
 mov rdi, r12
 mov rsi, rax
 mov qword [rip + CONST], rax
 call CONST
 movsxd rax, dword [rsp + CONST]
 mov rdx, qword [rip + CONST]
 mov rdi, rbp
 mov byte [rdx + rax], CONST
 call CONST
 xor eax, eax
LABEL9:
 mov rcx, qword [rsp + CONST]
 xor rcx, qword fs:[CONST]
 cjmp LABEL65
 add rsp, CONST
 pop rbp
 pop r12
 ret
LABEL24:
 mov dword [rsp + CONST], CONST
 movzx eax, byte [rbp + CONST]
 lea r12, [rbp + CONST]
 cmp sil, al
 cjmp LABEL74
 test al, al
 cjmp LABEL74
 mov edi, ebp
 lea rax, [rbp + CONST]
 neg edi
 jmp LABEL80
LABEL89:
 test dl, dl
 cjmp LABEL82
LABEL80:
 lea edx, [rdi + rax]
 mov rcx, rax
 add rax, CONST
 mov dword [rsp + CONST], edx
 movzx edx, byte [rax + CONST]
 cmp sil, dl
 cjmp LABEL89
 jmp LABEL82
LABEL36:
 movsxd rcx, dword [rsp + CONST]
 mov r12, rbp
 add rcx, rbp
 jmp LABEL82
LABEL74:
 mov rcx, r12
 jmp LABEL82
LABEL30:
 mov r12, rbp
 mov rcx, rbp
 jmp LABEL82
LABEL65:
 call CONST
