 .name sym.tilde_expand
 .offset 00000000000dc2e0
 .file bash
 endbr64
 push r15
 mov esi, CONST
 push r14
 push r13
 push r12
 push rbp
 mov rbp, rdi
 push rbx
 sub rsp, CONST
 call CONST
 mov rdi, rbp
 mov rbx, rax
 call CONST
 test rbx, rbx
 cjmp LABEL15
 add eax, CONST
 movsxd rdi, eax
 mov dword [rsp + CONST], eax
 call CONST
 mov qword [rsp + CONST], rax
LABEL224:
 movzx eax, byte [rbp]
 xor ebx, ebx
 test al, al
 cjmp LABEL24
 nop dword [rax]
LABEL157:
 cmp al, CONST
 cjmp LABEL24
 mov rdi, rbp
 mov r14, qword [rip + CONST]
 call CONST
 mov r15, rax
 mov r13d, eax
 test r14, r14
 cjmp LABEL34
 test eax, eax
 cjmp LABEL34
 mov rax, qword [r14]
 mov dword [rsp + CONST], ebx
 xor r9d, r9d
 mov qword [rsp + CONST], r14
 mov qword [rsp + CONST], rax
 lea eax, [r15 + CONST]
 mov qword [rsp + CONST], rax
 mov dword [rsp + CONST], r15d
 mov qword [rsp + CONST], r15
 mov r15, r9
LABEL188:
 mov rax, qword [rsp + CONST]
 mov dword [rsp + CONST], r15d
 lea r12, [rbp + r15]
 lea r14, [rax + CONST]
 mov rax, qword [rsp + CONST]
 mov r13, rax
 test rax, rax
 cjmp LABEL54
 jmp LABEL55
LABEL68:
 mov r13, qword [r14]
 add r14, CONST
 test r13, r13
 cjmp LABEL55
LABEL54:
 mov rdi, r13
 call CONST
 mov rsi, r13
 mov rdi, r12
 mov rdx, rax
 mov rbx, rax
 call CONST
 test eax, eax
 cjmp LABEL68
 mov eax, dword [rsp + CONST]
 mov rdx, rbx
 mov ebx, dword [rsp + CONST]
 lea r13d, [rax + rdx + CONST]
 movsxd r15, r13d
 lea r12d, [rbx + r13]
 lea r14, [rbp + r15]
LABEL205:
 cmp dword [rsp + CONST], r12d
 cjmp LABEL77
LABEL163:
 movsxd rbx, ebx
 add rbx, qword [rsp + CONST]
 mov rsi, rbp
 mov rdx, r15
 mov rdi, rbx
 mov qword [rsp + CONST], rbx
 call CONST
 mov rdi, r14
 mov rbp, qword [rip + CONST]
 call CONST
 mov dword [rsp + CONST], eax
 test eax, eax
 cjmp LABEL90
 mov dword [rsp + CONST], r13d
 mov rbx, r14
 xor r15d, r15d
 mov dword [rsp + CONST], r12d
 mov r14d, r15d
 mov r12, rbp
 mov r15, rbx
LABEL119:
 cmp byte [rbx], CONST
 cjmp LABEL99
 test r12, r12
 cjmp LABEL101
 mov rbp, r12
 jmp LABEL103
LABEL115:
 mov rdi, r13
 add rbp, CONST
 call CONST
 mov rsi, r13
 mov rdi, rbx
 mov rdx, rax
 call CONST
 test eax, eax
 cjmp LABEL99
LABEL103:
 mov r13, qword [rbp]
 test r13, r13
 cjmp LABEL115
LABEL101:
 add r14d, CONST
 add rbx, CONST
 cmp dword [rsp + CONST], r14d
 cjmp LABEL119
 mov rax, r15
 movsxd rbx, r14d
 mov r12d, dword [rsp + CONST]
 mov r15, rbx
 mov r14, rax
 lea rbp, [rax + rbx]
 nop
LABEL183:
 lea edi, [r15 + CONST]
 movsxd rdi, edi
 call CONST
 mov rdx, rbx
 mov rsi, r14
 mov r13, rax
 mov rdi, rax
 call CONST
 mov byte [r13 + rbx], CONST
 mov rdi, r13
 call CONST
 mov rbx, rax
 test rax, rax
 cjmp LABEL140
 mov rdi, r13
 mov r13, rbx
 call CONST
LABEL140:
 mov rdi, r13
 call CONST
 lea ebx, [r12 + rax]
 cmp ebx, dword [rsp + CONST]
 cjmp LABEL148
LABEL197:
 mov rsi, r13
 movsxd rdi, r12d
 add rdi, qword [rsp + CONST]
 call CONST
 mov rdi, r13
 call CONST
 movzx eax, byte [rbp]
 test al, al
 cjmp LABEL157
LABEL24:
 mov r14, rbp
 mov r12d, ebx
 xor r15d, r15d
 xor r13d, r13d
 cmp dword [rsp + CONST], r12d
 cjmp LABEL163
LABEL77:
 mov eax, dword [rsp + CONST]
 mov rdi, qword [rsp + CONST]
 lea eax, [rax + r13 + CONST]
 lea esi, [rax + CONST]
 mov dword [rsp + CONST], eax
 movsxd rsi, esi
 call CONST
 mov qword [rsp + CONST], rax
 jmp LABEL163
LABEL99:
 mov r13d, dword [rsp + CONST]
 mov rax, r15
 mov r12d, dword [rsp + CONST]
 mov r15d, r14d
 mov r14, rax
 or r13d, r15d
LABEL218:
 test r13d, r13d
 cjmp LABEL180
 movsxd rbx, r15d
 lea rbp, [r14 + rbx]
 jmp LABEL183
LABEL55:
 lea rax, [r15 + CONST]
 cmp qword [rsp + CONST], r15
 cjmp LABEL186
 mov r15, rax
 jmp LABEL188
LABEL148:
 mov ecx, dword [rsp + CONST]
 mov rdi, qword [rsp + CONST]
 lea eax, [rcx + rax + CONST]
 lea esi, [rax + CONST]
 mov dword [rsp + CONST], eax
 movsxd rsi, esi
 call CONST
 mov qword [rsp + CONST], rax
 jmp LABEL197
LABEL186:
 mov ebx, dword [rsp + CONST]
 mov r13d, dword [rsp + CONST]
 mov r15, qword [rsp + CONST]
 nop
LABEL34:
 lea r12d, [rbx + r15]
 movsxd r15, r15d
 lea r14, [rbp + r15]
 jmp LABEL205
LABEL180:
 mov rax, qword [rsp + CONST]
 mov byte [rax], CONST
 mov rax, qword [rsp + CONST]
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL90:
 xor r15d, r15d
 jmp LABEL218
LABEL15:
 add eax, CONST
 movsxd rdi, eax
 mov dword [rsp + CONST], eax
 call CONST
 mov qword [rsp + CONST], rax
 jmp LABEL224
