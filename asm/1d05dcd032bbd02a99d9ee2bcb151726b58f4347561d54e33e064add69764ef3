 .name sym.rl_display_match_list
 .offset 00000000000c0eb0
 .file bash
 endbr64
 push r15
 push r14
 push r13
 push r12
 push rbp
 push rbx
 mov ebx, edx
 sub rsp, CONST
 mov r14d, dword [rip + CONST]
 mov qword [rsp + CONST], rdi
 mov dword [rsp + CONST], esi
 test r14d, r14d
 cjmp LABEL13
 mov r12, qword [rdi]
 mov r13d, dword [rip + CONST]
 mov rdi, r12
 test r13d, r13d
 cjmp LABEL18
 call CONST
 mov esi, CONST
 mov rdi, rax
 mov r12, rax
 call CONST
 mov r13, rax
 test rax, rax
 cjmp LABEL26
 mov rdi, rax
 call CONST
 mov rdi, r13
 mov ebp, eax
 call CONST
 mov r15d, eax
LABEL171:
 cmp r15d, ebp
 mov eax, ebp
 cmovge eax, r15d
 cmp eax, ebx
 cjmp LABEL37
 cmp dword [rip + CONST], CONST
 mov eax, CONST
 cmovge eax, dword [rip + CONST]
 cmp eax, ebp
 cjmp LABEL42
LABEL37:
 xor r15d, r15d
LABEL359:
 mov ebp, dword [rip + CONST]
 test ebp, ebp
 cjmp LABEL46
LABEL335:
 cmp ebp, dword [rip + CONST]
 mov ecx, ebp
 cjmp LABEL49
 lea rdi, [rip + CONST]
 call CONST
 test rax, rax
 cjmp LABEL53
 cmp byte [rax], CONST
 cjmp LABEL55
LABEL53:
 mov ecx, dword [rip + CONST]
 cmp ecx, ebp
 cmovge ecx, ebp
LABEL49:
 mov eax, ecx
 add ebx, CONST
 cdq
 mov dword [rsp + CONST], ebx
 idiv ebx
 mov edx, dword [rsp + CONST]
 mov dword [rsp + CONST], edx
 mov dword [rsp + CONST], eax
 cmp eax, CONST
 cjmp LABEL68
 imul ebx, eax
 mov edx, ebx
 mov ebx, eax
 lea eax, [rax + CONST]
 cmp edx, ecx
 cmovne eax, ebx
 cmp dword [rip + CONST], ecx
 mov dword [rsp + CONST], eax
 cjmp LABEL77
 test eax, eax
 cjmp LABEL77
LABEL289:
 mov eax, dword [rsp + CONST]
 mov dword [rsp + CONST], CONST
 mov dword [rsp + CONST], eax
LABEL68:
 mov ebx, dword [rip + CONST]
 test ebx, ebx
 cjmp LABEL85
 mov r11d, dword [rip + CONST]
 test r11d, r11d
 cjmp LABEL88
LABEL85:
 call CONST
 mov r10d, dword [rip + CONST]
 test r10d, r10d
 cjmp LABEL92
 mov rax, qword [rsp + CONST]
 xor r12d, r12d
 mov ebx, CONST
 mov r13, qword [rax + CONST]
 test r13, r13
 cjmp LABEL98
 mov eax, r12d
 mov rbp, qword [rsp + CONST]
 mov r12, r13
 mov r13d, eax
 jmp LABEL103
LABEL146:
 mov eax, r14d
 mov edi, edx
 cdq
 idiv edi
 test edx, edx
 cjmp LABEL109
LABEL145:
 call CONST
 mov eax, dword [rip + CONST]
 add r13d, CONST
 test eax, eax
 cjmp LABEL114
 mov eax, dword [rip + CONST]
 sub eax, CONST
 cmp eax, r13d
 cjmp LABEL118
 nop dword [rax]
LABEL114:
 add rbx, CONST
 mov r12, qword [rbp + rbx*CONST]
 test r12, r12
 cjmp LABEL98
LABEL103:
 mov edx, dword [rip + CONST]
 mov r14d, ebx
 mov rdi, r12
 test edx, edx
 cjmp LABEL128
 call CONST
 mov rdi, rax
LABEL128:
 mov edx, r15d
 mov rsi, r12
 call CONST
 mov ecx, eax
 mov eax, dword [rip + CONST]
 test eax, eax
 cjmp LABEL137
 mov eax, dword [rip + CONST]
 cmp eax, CONST
 cjmp LABEL140
LABEL137:
 cmp qword [rbp + rbx*CONST + CONST], CONST
 cjmp LABEL114
 mov edx, dword [rsp + CONST]
 cmp edx, CONST
 cjmp LABEL145
 cjmp LABEL146
LABEL109:
 mov eax, dword [rsp + CONST]
 mov rsi, qword [rip + CONST]
 cmp eax, ecx
 cjmp LABEL150
 mov edi, CONST
 add rbx, CONST
 call CONST
 mov r12, qword [rbp + rbx*CONST]
 test r12, r12
 cjmp LABEL103
LABEL98:
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 jmp CONST
LABEL26:
 mov rdi, r12
LABEL18:
 call CONST
 mov rdi, r12
 mov ebp, eax
 call CONST
 mov r15d, eax
 jmp LABEL171
LABEL150:
 mov r14d, eax
 xor r12d, r12d
 sub r14d, ecx
 jmp LABEL175
LABEL181:
 mov rsi, qword [rip + CONST]
LABEL175:
 mov edi, CONST
 add r12d, CONST
 call CONST
 cmp r12d, r14d
 cjmp LABEL181
 jmp LABEL114
LABEL92:
 movsxd rax, dword [rsp + CONST]
 test eax, eax
 cjmp LABEL140
 mov r9d, dword [rsp + CONST]
 mov qword [rsp + CONST], rax
 not rax
 mov dword [rsp + CONST], CONST
 test r9d, r9d
 mov dword [rsp + CONST], CONST
 setle byte [rsp + CONST]
 shl rax, CONST
 mov qword [rsp + CONST], rax
 mov qword [rsp + CONST], CONST
 nop dword [rax + rax]
LABEL261:
 mov ecx, dword [rsp + CONST]
 cmp dword [rsp + CONST], ecx
 cjmp LABEL199
 cmp byte [rsp + CONST], CONST
 cjmp LABEL199
 mov rax, qword [rsp + CONST]
 mov rcx, qword [rsp + CONST]
 xor ebp, ebp
 mov ebx, dword [rsp + CONST]
 add ebx, dword [rsp + CONST]
 lea r13, [rax + rcx]
 movsxd rbx, ebx
 add r13, qword [rsp + CONST]
 jmp LABEL210
LABEL235:
 mov edx, dword [rsp + CONST]
 mov rsi, qword [rip + CONST]
 cmp edx, eax
 cjmp LABEL214
 mov edi, CONST
 call CONST
LABEL280:
 mov eax, ebx
 add rbx, qword [rsp + CONST]
 cmp eax, dword [rsp + CONST]
 cjmp LABEL199
LABEL210:
 mov r12, qword [r13 + rbx*CONST]
 test r12, r12
 cjmp LABEL199
 mov r8d, dword [rip + CONST]
 mov rdi, r12
 test r8d, r8d
 cjmp LABEL227
 call CONST
 mov rdi, rax
LABEL227:
 mov edx, r15d
 mov rsi, r12
 add ebp, CONST
 call CONST
 cmp ebp, dword [rsp + CONST]
 cjmp LABEL235
LABEL199:
 call CONST
 mov eax, dword [rip + CONST]
 test eax, eax
 cjmp LABEL239
 mov eax, dword [rip + CONST]
 cmp eax, CONST
 cjmp LABEL140
LABEL239:
 mov esi, dword [rip + CONST]
 add dword [rsp + CONST], CONST
 mov ecx, dword [rsp + CONST]
 test esi, esi
 cjmp LABEL247
 mov eax, dword [rip + CONST]
 sub eax, CONST
 cmp eax, ecx
 cjmp LABEL247
 mov ebx, dword [rsp + CONST]
 cmp dword [rsp + CONST], ebx
 cjmp LABEL254
 nop dword [rax + rax]
LABEL247:
 add dword [rsp + CONST], CONST
 mov eax, dword [rsp + CONST]
 add qword [rsp + CONST], CONST
 sub qword [rsp + CONST], CONST
 cmp eax, dword [rsp + CONST]
 cjmp LABEL261
LABEL140:
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL214:
 mov r12d, edx
 xor r14d, r14d
 sub r12d, eax
 jmp LABEL273
LABEL279:
 mov rsi, qword [rip + CONST]
LABEL273:
 mov edi, CONST
 add r14d, CONST
 call CONST
 cmp r14d, r12d
 cjmp LABEL279
 jmp LABEL280
LABEL254:
 mov edi, ecx
 call CONST
 mov dword [rsp + CONST], eax
 test eax, eax
 cjmp LABEL247
 jmp LABEL140
LABEL77:
 mov ebp, dword [rsp + CONST]
 test ebp, ebp
 cjmp LABEL289
 mov ecx, dword [rsp + CONST]
 mov eax, dword [rsp + CONST]
 lea eax, [rcx + rax + CONST]
 cdq
 idiv ecx
 mov dword [rsp + CONST], eax
 jmp LABEL68
LABEL13:
 mov r12d, dword [rip + CONST]
 test r12d, r12d
 cjmp LABEL37
 mov rax, qword [rsp + CONST]
 mov r15d, dword [rip + CONST]
 mov r12, qword [rax]
 mov rdi, r12
 test r15d, r15d
 cjmp LABEL305
 call CONST
 mov esi, CONST
 mov rdi, rax
 mov r12, rax
 call CONST
 mov r13, rax
 test rax, rax
 cjmp LABEL313
 mov rdi, rax
 xor r15d, r15d
 call CONST
 cmp byte [r13 + CONST], CONST
 mov ebp, eax
 cjmp LABEL319
 cmp byte [r13 + CONST], CONST
 mov r15d, CONST
 cjmp LABEL319
 cmp byte [r13 + CONST], CONST
 mov r15d, CONST
 cjmp LABEL319
 lea rdi, [r13 + CONST]
 call CONST
 mov r15d, eax
LABEL319:
 cmp r15d, ebp
 cmovge ebp, r15d
 cmp ebp, ebx
 cjmp LABEL37
 mov ebp, dword [rip + CONST]
 test ebp, ebp
 cjmp LABEL335
LABEL46:
 lea rdi, [rip + CONST]
 call CONST
 test rax, rax
 cjmp LABEL339
 cmp byte [rax], CONST
 cjmp LABEL339
LABEL55:
 mov edx, CONST
 xor esi, esi
 mov rdi, rax
 call CONST
 mov ebp, eax
 test eax, eax
 cjmp LABEL53
LABEL339:
 mov ecx, dword [rip + CONST]
 jmp LABEL49
LABEL118:
 mov edi, r13d
 call CONST
 mov r13d, eax
 test eax, eax
 cjmp LABEL114
 jmp LABEL140
LABEL42:
 sub ebp, CONST
 sub ebx, ebp
 jmp LABEL359
LABEL305:
 call CONST
 mov ebp, eax
 test r12, r12
 cjmp LABEL319
LABEL387:
 xor r15d, r15d
 cmp byte [r12], CONST
 cjmp LABEL319
 cmp byte [r12 + CONST], CONST
 mov r15d, CONST
 cjmp LABEL319
 cmp byte [r12 + CONST], CONST
 mov r15d, CONST
 cjmp LABEL319
 mov rdi, r12
 call CONST
 mov r15d, eax
 jmp LABEL319
LABEL88:
 mov rax, qword [rsp + CONST]
 movsxd rsi, dword [rsp + CONST]
 mov edx, CONST
 lea rcx, [rip + CONST]
 lea rdi, [rax + CONST]
 call CONST
 jmp LABEL85
LABEL313:
 mov rdi, r12
 call CONST
 mov ebp, eax
 jmp LABEL387
