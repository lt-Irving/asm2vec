 .name sym.hash_search
 .offset 00000000000739a0
 .file bash
 endbr64
 push r15
 push r14
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 test rsi, rsi
 cjmp LABEL9
 mov ebp, edx
 mov r15, rdi
 mov r13, rsi
 and ebp, CONST
 mov dword [rsp + CONST], ebp
 cjmp LABEL15
LABEL83:
 movzx ebp, byte [r15]
 mov rdx, r15
 mov ebx, CONST
 movsx eax, bpl
 test bpl, bpl
 cjmp LABEL21
 nop dword [rax]
LABEL28:
 imul ebx, ebx, CONST
 add rdx, CONST
 xor ebx, eax
 movsx eax, byte [rdx]
 test al, al
 cjmp LABEL28
LABEL21:
 mov eax, dword [r13 + CONST]
 lea r14d, [rax + CONST]
 mov rax, qword [r13]
 and r14d, ebx
 test rax, rax
 cjmp LABEL34
 movsxd rdx, r14d
 mov r12, qword [rax + rdx*CONST]
 test r12, r12
 cjmp LABEL38
 jmp LABEL34
LABEL44:
 mov r12, qword [r12]
 test r12, r12
 cjmp LABEL34
LABEL38:
 cmp dword [r12 + CONST], ebx
 cjmp LABEL44
 mov rdi, qword [r12 + CONST]
 cmp byte [rdi], bpl
 cjmp LABEL44
 mov rsi, r15
 call CONST
 test eax, eax
 cjmp LABEL44
 add dword [r12 + CONST], CONST
LABEL65:
 add rsp, CONST
 mov rax, r12
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL34:
 mov eax, dword [rsp + CONST]
 xor r12d, r12d
 test eax, eax
 cjmp LABEL65
 mov edi, CONST
 movsxd r14, r14d
 call CONST
 mov r12, rax
 mov rax, qword [r13]
 lea rax, [rax + r14*CONST]
 mov rdx, qword [rax]
 mov qword [r12], rdx
 mov qword [rax], r12
 mov qword [r12 + CONST], CONST
 mov qword [r12 + CONST], r15
 mov dword [r12 + CONST], ebx
 mov dword [r12 + CONST], CONST
 add dword [r13 + CONST], CONST
 jmp LABEL65
LABEL15:
 mov edx, dword [rsi + CONST]
 test edx, edx
 cjmp LABEL83
LABEL9:
 xor r12d, r12d
 jmp LABEL65
