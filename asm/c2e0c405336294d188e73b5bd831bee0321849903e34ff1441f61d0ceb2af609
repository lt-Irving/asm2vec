 .name sym.sub_append_string
 .offset 0000000000060b70
 .file bash
 endbr64
 push r14
 push r13
 push r12
 mov r12, rsi
 push rbp
 push rbx
 sub rsp, CONST
 test rdi, rdi
 cjmp LABEL9
 cmp byte [rdi], CONST
 mov rbp, rdi
 mov r13, rdx
 cjmp LABEL13
 xor ebx, ebx
 xor r14d, r14d
LABEL49:
 movsxd rdi, dword [r13]
 mov eax, dword [rcx]
 sub eax, edi
 cdqe
 cmp rax, r14
 cjmp LABEL21
LABEL65:
 add rdi, r12
 mov rdx, r14
 mov rsi, rbp
 call CONST
 add ebx, dword [r13]
 mov rdi, rbp
 mov dword [r13], ebx
 movsxd rbx, ebx
 mov byte [r12 + rbx], CONST
 call CONST
LABEL9:
 add rsp, CONST
 mov rax, r12
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 ret
LABEL13:
 cmp byte [rdi + CONST], CONST
 cjmp LABEL41
 cmp byte [rdi + CONST], CONST
 cjmp LABEL43
 mov qword [rsp + CONST], rcx
 call CONST
 mov rcx, qword [rsp + CONST]
 mov r14, rax
 mov ebx, eax
 jmp LABEL49
LABEL21:
 add edi, ebx
 mov eax, edi
 lea esi, [rdi + CONST]
 sar eax, CONST
 shr eax, CONST
 add edi, eax
 and edi, CONST
 sub edi, eax
 sub esi, edi
 mov rdi, r12
 movsxd rsi, esi
 mov qword [rcx], rsi
 call CONST
 movsxd rdi, dword [r13]
 mov r12, rax
 jmp LABEL65
LABEL41:
 mov ebx, CONST
 mov r14d, CONST
 jmp LABEL49
LABEL43:
 mov ebx, CONST
 mov r14d, CONST
 jmp LABEL49
