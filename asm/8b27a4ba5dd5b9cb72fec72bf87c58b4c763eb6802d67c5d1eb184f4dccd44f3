 .name sym.wait_for_any_job
 .offset 000000000005d4c0
 .file bash
 endbr64
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov r9d, dword [rip + CONST]
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 test r9d, r9d
 cjmp LABEL11
 mov rbx, rsp
 lea rbp, [rsp + CONST]
 mov rdi, rbx
 call CONST
 mov esi, CONST
 mov rdi, rbx
 call CONST
 mov rdi, rbp
 call CONST
 mov rdx, rbp
 mov rsi, rbx
 xor edi, edi
 call CONST
 mov eax, dword [rip + CONST]
 test eax, eax
 cjmp LABEL27
 lea esi, [rax + CONST]
 mov rcx, qword [rip + CONST]
 xor eax, eax
 jmp LABEL31
LABEL39:
 lea rdx, [rax + CONST]
 cmp rsi, rax
 cjmp LABEL27
 mov rax, rdx
LABEL31:
 mov rdx, qword [rcx + rax*CONST]
 mov r12d, eax
 test rdx, rdx
 cjmp LABEL39
 cmp dword [rdx + CONST], CONST
 cjmp LABEL39
 test byte [rdx + CONST], CONST
 cjmp LABEL39
LABEL135:
 mov edi, r12d
 call CONST
 mov r13d, eax
 mov eax, dword [rip + CONST]
 test eax, eax
 cjmp LABEL49
 call CONST
 mov r8d, dword [rip + CONST]
 test r8d, r8d
 cjmp LABEL49
 mov edi, dword [rip + CONST]
 test edi, edi
 cjmp LABEL49
 xor esi, esi
 mov edi, r12d
 call CONST
LABEL49:
 call CONST
 xor edx, edx
 mov rsi, rbp
 mov edi, CONST
 call CONST
LABEL194:
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL67
 add rsp, CONST
 mov eax, r13d
 pop rbx
 pop rbp
 pop r12
 pop r13
 ret
LABEL156:
 xor edx, edx
 nop dword [rax + rax]
LABEL165:
 cmp edx, edi
 cjmp LABEL78
LABEL173:
 xor edx, edx
 mov rsi, rbp
 mov edi, CONST
 call CONST
 mov eax, dword [rip + CONST]
 test eax, eax
 cjmp LABEL85
LABEL188:
 mov eax, dword [rip + CONST]
 test eax, eax
 cjmp LABEL88
LABEL185:
 mov eax, dword [rip + CONST]
 test eax, eax
 cjmp LABEL91
LABEL183:
 mov esi, dword [rip + CONST]
 test esi, esi
 cjmp LABEL94
 mov ecx, dword [rip + CONST]
 test ecx, ecx
 cjmp LABEL94
 mov rax, qword [rip + CONST]
 cmp rax, qword [rip + CONST]
 cjmp LABEL94
 test rax, rax
 cjmp LABEL102
 nop
LABEL94:
 call CONST
 mov edi, CONST
 mov dword [rax], CONST
 mov r12, rax
 call CONST
 cmp eax, CONST
 cjmp LABEL110
LABEL175:
 mov rdi, rbx
 call CONST
 mov esi, CONST
 mov rdi, rbx
 call CONST
 mov rdi, rbp
 call CONST
 mov rdx, rbp
 mov rsi, rbx
 xor edi, edi
 call CONST
 mov eax, dword [rip + CONST]
 test eax, eax
 cjmp LABEL27
 lea esi, [rax + CONST]
 mov rcx, qword [rip + CONST]
 xor eax, eax
 jmp LABEL128
LABEL138:
 mov rax, rdx
LABEL128:
 mov rdx, qword [rcx + rax*CONST]
 mov r12d, eax
 test rdx, rdx
 cjmp LABEL133
 cmp dword [rdx + CONST], CONST
 cjmp LABEL135
LABEL133:
 lea rdx, [rax + CONST]
 cmp rsi, rax
 cjmp LABEL138
LABEL27:
 xor edx, edx
 mov rsi, rbp
 mov edi, CONST
 call CONST
 mov rdi, rbx
 call CONST
 mov esi, CONST
 mov rdi, rbx
 call CONST
 mov rdi, rbp
 call CONST
 xor edi, edi
 mov rdx, rbp
 mov rsi, rbx
 call CONST
 mov edi, dword [rip + CONST]
 test edi, edi
 cjmp LABEL156
 lea ecx, [rdi + CONST]
 mov rsi, qword [rip + CONST]
 mov eax, CONST
 add rcx, CONST
 jmp LABEL161
LABEL168:
 mov edx, eax
 add rax, CONST
 cmp rax, rcx
 cjmp LABEL165
LABEL161:
 mov rdx, qword [rsi + rax*CONST + CONST]
 test rdx, rdx
 cjmp LABEL168
 cmp dword [rdx + CONST], CONST
 cjmp LABEL168
 test byte [rdx + CONST], CONST
 cjmp LABEL168
 jmp LABEL173
LABEL110:
 cmp dword [r12], CONST
 cjmp LABEL175
 mov edx, dword [rip + CONST]
 test edx, edx
 cjmp LABEL175
 call CONST
 jmp LABEL175
LABEL91:
 mov edi, dword [rip + CONST]
 call CONST
 jmp LABEL183
LABEL88:
 call CONST
 jmp LABEL185
LABEL85:
 mov edi, dword [rip + CONST]
 call CONST
 jmp LABEL188
LABEL78:
 xor edx, edx
 mov rsi, rbp
 mov edi, CONST
 mov r13d, CONST
 call CONST
 jmp LABEL194
LABEL11:
 mov r13d, CONST
 jmp LABEL194
LABEL67:
 call CONST
LABEL102:
 mov esi, CONST
 lea rdi, [rip + CONST]
 call CONST
 nop dword [rax + rax]
