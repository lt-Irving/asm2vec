 .name fcn.000052f0
 .offset 00000000000052f0
 .file choom
 endbr64
 push rbp
 push rbx
 sub rsp, CONST
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 mov eax, dword [rip + CONST]
 test eax, eax
 cjmp LABEL9
LABEL42:
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL12
 add rsp, CONST
 pop rbx
 pop rbp
 ret
LABEL9:
 lea rdi, [rip + CONST]
 call CONST
 mov edx, CONST
 test rax, rax
 cjmp LABEL21
 mov rsi, rsp
 xor edx, edx
 mov rdi, rax
 call CONST
 mov rsi, qword [rsp]
 mov ebp, eax
 test rsi, rsi
 cjmp LABEL29
 mov ecx, CONST
 lea rdi, [rip + CONST]
 repe cmpsb byte [rsi], byte [rdi]
 seta dl
 sbb dl, CONST
 test dl, dl
 cjmp LABEL36
LABEL29:
 mov dword [rip + CONST], eax
 mov edx, CONST
 test eax, eax
 cjmp LABEL40
LABEL21:
 mov dword [rip + CONST], edx
 jmp LABEL42
LABEL36:
 mov dword [rip + CONST], CONST
 mov ebp, CONST
LABEL40:
 call CONST
 mov ebx, eax
 call CONST
 cmp ebx, eax
 cjmp LABEL49
LABEL70:
 or ebp, CONST
 mov dword [rip + CONST], ebp
 call CONST
 lea rdx, [rip + CONST]
 mov esi, CONST
 lea r8, [rip + CONST]
 mov ecx, eax
 mov rax, qword [rip + CONST]
 mov rdi, qword [rax]
 xor eax, eax
 call CONST
 mov edx, dword [rip + CONST]
 or edx, CONST
 jmp LABEL21
LABEL49:
 call CONST
 mov ebx, eax
 call CONST
 mov edx, ebp
 or edx, CONST
 cmp ebx, eax
 cjmp LABEL70
 jmp LABEL21
LABEL12:
 call CONST
