 .name sym.wait_for_single_pid
 .offset 000000000005cce0
 .file bash
 endbr64
 push r15
 push r14
 mov r14d, esi
 push r13
 mov r13d, edi
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 mov rbp, rsp
 lea r12, [rsp + CONST]
 mov rdi, rbp
 call CONST
 mov esi, CONST
 mov rdi, rbp
 call CONST
 mov rdi, r12
 call CONST
 xor edi, edi
 mov rdx, r12
 mov rsi, rbp
 call CONST
 xor edx, edx
 xor esi, esi
 mov edi, r13d
 call CONST
 xor edx, edx
 mov rsi, r12
 mov edi, CONST
 mov rbx, rax
 call CONST
 test rbx, rbx
 cjmp LABEL36
 mov edi, r13d
 and r14d, CONST
 call CONST
 mov r15d, eax
 test r14d, r14d
 cjmp LABEL42
 nop
LABEL65:
 mov rdi, rbp
 call CONST
 mov esi, CONST
 mov rdi, rbp
 call CONST
 mov rdi, r12
 call CONST
 xor edi, edi
 mov rdx, r12
 mov rsi, rbp
 call CONST
 xor edx, edx
 cmp dword [rbx + CONST], CONST
 mov rsi, r12
 mov edi, CONST
 cjmp LABEL59
LABEL119:
 call CONST
 mov edi, r13d
 call CONST
 mov r15d, eax
 test r14d, r14d
 cjmp LABEL65
 nop dword [rax + rax]
LABEL42:
 mov rdi, rbp
 call CONST
 mov esi, CONST
 mov rdi, rbp
 call CONST
 mov rdi, r12
 call CONST
 mov rdx, r12
 mov rsi, rbp
 xor edi, edi
 call CONST
 mov eax, dword [rip + CONST]
 test eax, eax
 cjmp LABEL80
 mov rdx, qword [rip + CONST]
 sub eax, CONST
 lea rdi, [rdx + rax*CONST + CONST]
LABEL89:
 mov rcx, qword [rdx]
 test rcx, rcx
 cjmp LABEL86
LABEL128:
 add rdx, CONST
 cmp rdx, rdi
 cjmp LABEL89
LABEL80:
 xor edx, edx
 mov rsi, r12
 mov edi, CONST
 call CONST
 mov ecx, dword [rip + CONST]
 test ecx, ecx
 cjmp LABEL96
 mov edx, dword [rip + CONST]
 test edx, edx
 cjmp LABEL99
 mov eax, dword [rip + CONST]
 test eax, eax
 cjmp LABEL99
 call CONST
LABEL99:
 mov edi, r13d
 call CONST
LABEL96:
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL108
 add rsp, CONST
 mov eax, r15d
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL59:
 cmp byte [rbx + CONST], CONST
 cjmp LABEL119
 call CONST
 jmp LABEL42
LABEL86:
 mov rsi, qword [rcx + CONST]
 mov rax, rsi
 cmp r13d, dword [rax + CONST]
 cjmp LABEL125
LABEL130:
 mov rax, qword [rax]
 cmp rsi, rax
 cjmp LABEL128
 cmp r13d, dword [rax + CONST]
 cjmp LABEL130
LABEL125:
 cmp dword [rcx + CONST], CONST
 cjmp LABEL80
 or dword [rcx + CONST], CONST
 jmp LABEL80
LABEL36:
 mov rdx, qword [rip + CONST]
 test rdx, rdx
 cjmp LABEL137
 mov edi, dword [rip + CONST]
 test edi, edi
 cjmp LABEL137
 mov esi, dword [rip + CONST]
 test esi, esi
 cjmp LABEL137
 mov ecx, r13d
 lea rax, [rip + CONST]
 and ecx, CONST
 mov ecx, dword [rax + rcx*CONST]
 mov esi, ecx
 jmp LABEL149
LABEL160:
 movsxd rax, esi
 shl rax, CONST
 add rax, rdx
 cmp r13d, dword [rax + CONST]
 cjmp LABEL154
 mov eax, dword [rax]
 cmp ecx, eax
 cjmp LABEL157
 mov esi, eax
LABEL149:
 cmp esi, CONST
 cjmp LABEL160
LABEL137:
 and r14d, CONST
 cjmp LABEL162
 mov r15d, CONST
 jmp LABEL96
LABEL154:
 movsx r15d, word [rax + CONST]
 test r15d, r15d
 cjmp LABEL96
 jmp LABEL137
LABEL157:
 lea rdi, [rip + CONST]
 xor eax, eax
 call CONST
 jmp LABEL137
LABEL162:
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 mov r15d, CONST
 call CONST
 movsxd rsi, r13d
 mov rdi, rax
 xor eax, eax
 call CONST
 jmp LABEL96
LABEL108:
 call CONST
