 .name sym.add_alias
 .offset 000000000007a7f0
 .file bash
 endbr64
 push r13
 push r12
 push rbp
 mov rbp, rdi
 push rbx
 mov rbx, rsi
 sub rsp, CONST
 cmp qword [rip + CONST], CONST
 cjmp LABEL9
 call CONST
 mov r12, rax
 test rax, rax
 cjmp LABEL13
 mov rdi, qword [rax + CONST]
 call CONST
 mov rdi, rbx
 call CONST
 lea rdi, [rax + CONST]
 call CONST
 mov rsi, rbx
 mov rdi, rax
 call CONST
 movzx ebp, byte [r12 + CONST]
 mov rdi, rbx
 mov qword [r12 + CONST], rax
 and ebp, CONST
 mov byte [r12 + CONST], bpl
 call CONST
 movsx eax, byte [rbx + rax + CONST]
 cmp eax, CONST
 cjmp LABEL31
 cmp eax, CONST
 cjmp LABEL31
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 ret
LABEL9:
 mov edi, CONST
 call CONST
 mov qword [rip + CONST], rax
LABEL13:
 mov edi, CONST
 call CONST
 mov rdi, rbp
 mov r12, rax
 call CONST
 lea rdi, [rax + CONST]
 call CONST
 mov rsi, rbp
 mov rdi, rax
 call CONST
 mov rdi, rbx
 mov qword [r12], rax
 call CONST
 lea rdi, [rax + CONST]
 call CONST
 mov rsi, rbx
 mov rdi, rax
 call CONST
 mov byte [r12 + CONST], CONST
 mov rdi, rbx
 mov qword [r12 + CONST], rax
 call CONST
 movsx eax, byte [rbx + rax + CONST]
 cmp eax, CONST
 cjmp LABEL67
 cmp eax, CONST
 cjmp LABEL67
LABEL91:
 mov rdi, rbp
 mov r13, qword [rip + CONST]
 call CONST
 lea rdi, [rax + CONST]
 call CONST
 mov rsi, rbp
 mov rdi, rax
 call CONST
 mov rsi, r13
 mov edx, CONST
 mov rdi, rax
 call CONST
 lea rdi, [rip + CONST]
 mov qword [rax + CONST], r12
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 jmp CONST
LABEL67:
 mov byte [r12 + CONST], CONST
 jmp LABEL91
LABEL31:
 or ebp, CONST
 mov byte [r12 + CONST], bpl
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 ret
