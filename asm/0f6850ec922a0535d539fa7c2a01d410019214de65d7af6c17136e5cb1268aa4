 .name fcn.000082e0
 .offset 00000000000082e0
 .file chfn
 endbr64
 push r15
 xor esi, esi
 lea rdi, [rip + CONST]
 push r14
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 call CONST
 test eax, eax
 cjmp LABEL12
LABEL24:
 mov eax, CONST
LABEL139:
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL12:
 mov rbx, qword [rip + CONST]
 test rbx, rbx
 cjmp LABEL24
 mov r15d, eax
 mov r14d, eax
 shl r15, CONST
 nop word cs:[rax + rax]
LABEL47:
 mov r12, qword [rbx + CONST]
 test byte [rbx + CONST], CONST
 cjmp LABEL31
 test r12, r12
 cjmp LABEL31
 mov rdx, qword [r12 + CONST]
 cmp qword [rdx], CONST
 cjmp LABEL31
 xor eax, eax
 nop dword [rax]
LABEL42:
 lea ecx, [rax + CONST]
 cmp qword [rdx + rcx*CONST], CONST
 mov rax, rcx
 cjmp LABEL42
 cmp r14d, ecx
 cjmp LABEL44
LABEL31:
 mov rbx, qword [rbx + CONST]
 test rbx, rbx
 cjmp LABEL47
 jmp LABEL24
LABEL44:
 mov edi, CONST
 call CONST
 mov rbp, rax
 test rax, rax
 cjmp LABEL53
 mov rdi, r12
 call CONST
 mov qword [rbp + CONST], rax
 mov r13, rax
 test rax, rax
 cjmp LABEL59
 or byte [rbp + CONST], CONST
 mov rax, qword [r12 + CONST]
 mov rdx, r15
 mov qword [rbp], CONST
 mov rdi, qword [rax + r15]
 mov eax, r14d
 test rdi, rdi
 cjmp LABEL67
 nop
LABEL81:
 mov dword [rsp + CONST], eax
 mov qword [rsp], rdx
 call CONST
 mov eax, dword [rsp + CONST]
 mov rcx, qword [r12 + CONST]
 mov rdx, qword [rsp]
 lea esi, [rax + CONST]
 mov qword [rcx + rdx], CONST
 mov rdi, qword [rcx + rsi*CONST]
 mov rax, rsi
 lea rdx, [rsi*CONST]
 test rdi, rdi
 cjmp LABEL81
LABEL67:
 mov rcx, qword [r13 + CONST]
 xor r12d, r12d
 mov rdx, r15
 cmp qword [rcx + r15], CONST
 mov rax, rcx
 cjmp LABEL87
 nop dword [rax]
LABEL107:
 mov ecx, r12d
 mov rdi, qword [rax + rcx*CONST]
 test rdi, rdi
 cjmp LABEL92
 mov qword [rsp + CONST], rcx
 mov qword [rsp], rdx
 call CONST
 mov rax, qword [r13 + CONST]
 mov rcx, qword [rsp + CONST]
 mov rdx, qword [rsp]
LABEL92:
 add rdx, rax
 add r12d, CONST
 mov rsi, qword [rdx]
 mov qword [rax + rcx*CONST], rsi
 lea ecx, [r14 + r12]
 mov qword [rdx], CONST
 cmp qword [rax + rcx*CONST], CONST
 lea rdx, [rcx*CONST]
 cjmp LABEL107
 mov edx, r12d
 shl rdx, CONST
 lea rcx, [rax + rdx]
LABEL133:
 mov rdi, qword [rcx]
 test rdi, rdi
 cjmp LABEL113
 nop word [rax + rax]
LABEL125:
 mov qword [rsp], rdx
 call CONST
 mov rax, qword [r13 + CONST]
 mov rdx, qword [rsp]
 lea ecx, [r12 + CONST]
 mov r12, rcx
 mov qword [rax + rdx], CONST
 mov rdi, qword [rax + rcx*CONST]
 lea rdx, [rcx*CONST]
 test rdi, rdi
 cjmp LABEL125
LABEL113:
 mov rax, qword [rbx + CONST]
 mov qword [rbp + CONST], rbx
 mov qword [rbp + CONST], rax
 mov qword [rbx + CONST], rbp
 mov rbx, rbp
 jmp LABEL47
LABEL87:
 xor edx, edx
 jmp LABEL133
LABEL59:
 mov rdi, rbp
 call CONST
LABEL53:
 call CONST
 mov dword [rax], CONST
 xor eax, eax
 jmp LABEL139
