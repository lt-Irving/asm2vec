 .name sym.user_command_matches
 .offset 000000000008b090
 .file bash
 endbr64
 push r15
 push r14
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov dword [rsp + CONST], edx
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 mov rax, qword [rip + CONST]
 test edx, edx
 cjmp LABEL14
 movsxd rdx, dword [rip + CONST]
 mov dword [rsp + CONST], edx
 lea rax, [rax + rdx*CONST]
LABEL109:
 mov rax, qword [rax]
 test rax, rax
 cjmp LABEL20
 mov r14d, dword [rsp + CONST]
 add r14d, CONST
 mov dword [rip + CONST], r14d
LABEL20:
 mov rbx, qword [rsp + CONST]
 xor rbx, qword fs:[CONST]
 cjmp LABEL26
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL14:
 mov r12, rdi
 mov r13d, esi
 test rax, rax
 cjmp LABEL38
LABEL135:
 mov eax, dword [rip + CONST]
 test eax, eax
 cjmp LABEL41
 mov rdx, qword [rip + CONST]
 lea ecx, [rax + CONST]
 lea rax, [rdx + CONST]
 lea rcx, [rax + rcx*CONST]
 jmp LABEL46
LABEL51:
 add rax, CONST
LABEL46:
 mov qword [rdx], CONST
 mov rdx, rax
 cmp rcx, rax
 cjmp LABEL51
LABEL41:
 mov dword [rip + CONST], CONST
 mov rdi, r12
 call CONST
 test eax, eax
 cjmp LABEL56
 lea rdx, [rsp + CONST]
 mov edi, CONST
 lea rsi, [rip + CONST]
 mov qword [rip + CONST], CONST
 mov dword [rip + CONST], CONST
 call CONST
 test eax, eax
 cjmp LABEL64
LABEL130:
 lea rdi, [rip + CONST]
 call CONST
 mov dword [rsp + CONST], CONST
 mov rbx, rax
LABEL127:
 lea r15, [rsp + CONST]
LABEL90:
 test rbx, rbx
 cjmp LABEL71
LABEL106:
 movsxd rax, dword [rsp + CONST]
 cmp byte [rbx + rax], CONST
 cjmp LABEL71
 mov rsi, r15
 mov rdi, rbx
 call CONST
 mov rbp, rax
 test rax, rax
 cjmp LABEL71
 mov rdi, r12
 lea rcx, [rsp + CONST]
 mov edx, r13d
 mov rsi, rax
 call CONST
 mov rdi, rbp
 mov r14, rax
 call CONST
 test r14, r14
 cjmp LABEL90
 movsxd rsi, dword [rip + CONST]
 mov rdi, qword [rip + CONST]
 lea edx, [rsi + CONST]
 cmp edx, dword [rip + CONST]
 cjmp LABEL95
LABEL118:
 mov dword [rip + CONST], edx
 movsxd rdx, edx
 mov qword [rdi + rsi*CONST], r14
 mov qword [rdi + rdx*CONST], CONST
 mov rdi, qword [rip + CONST]
 test rdi, rdi
 cjmp LABEL102
 call CONST
LABEL102:
 mov qword [rip + CONST], CONST
 test rbx, rbx
 cjmp LABEL106
LABEL71:
 mov dword [rip + CONST], CONST
 mov rax, qword [rip + CONST]
 jmp LABEL109
LABEL95:
 lea eax, [rsi + CONST]
 add esi, CONST
 mov dword [rip + CONST], eax
 call CONST
 movsxd rsi, dword [rip + CONST]
 mov qword [rip + CONST], rax
 mov rdi, rax
 lea edx, [rsi + CONST]
 jmp LABEL118
LABEL56:
 mov rbx, qword [rip + CONST]
 mov esi, r13d
 mov rdi, r12
 call CONST
 mov qword [rbx], rax
 mov rax, qword [rip + CONST]
 xor ebx, ebx
 mov qword [rax + CONST], CONST
 jmp LABEL127
LABEL64:
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], CONST
 jmp LABEL130
LABEL38:
 mov dword [rip + CONST], CONST
 mov edi, CONST
 call CONST
 mov qword [rip + CONST], rax
 jmp LABEL135
LABEL26:
 call CONST
