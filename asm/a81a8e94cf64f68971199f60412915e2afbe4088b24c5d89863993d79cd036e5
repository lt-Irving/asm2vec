 .name sym.evalstring
 .offset 00000000000975b0
 .file bash
 endbr64
 sub rsp, CONST
 mov eax, dword [rip + CONST]
 mov qword [rsp + CONST], rdi
 mov dword [rsp + CONST], eax
 mov eax, dword [rip + CONST]
 mov dword [rsp + CONST], CONST
 mov dword [rsp + CONST], eax
 mov eax, dword [rsp + CONST]
 mov qword [rsp + CONST], rsi
 mov dword [rsp + CONST], edx
 test eax, eax
 cjmp LABEL12
LABEL62:
 mov eax, dword [rsp + CONST]
 test eax, eax
 cjmp LABEL15
 mov edx, dword [rsp + CONST]
 mov rsi, qword [rsp + CONST]
 mov rdi, qword [rsp + CONST]
 call CONST
 mov dword [rsp + CONST], eax
 mov eax, dword [rsp + CONST]
 test eax, eax
 cjmp LABEL23
LABEL33:
 mov eax, dword [rsp + CONST]
 add rsp, CONST
 ret
LABEL15:
 mov edi, dword [rsp + CONST]
 call CONST
 mov eax, dword [rip + CONST]
 mov dword [rsp + CONST], eax
 mov eax, dword [rsp + CONST]
 test eax, eax
 cjmp LABEL33
LABEL23:
 lea rdi, [rip + CONST]
 call CONST
 mov eax, dword [rsp + CONST]
 test eax, eax
 cjmp LABEL33
 mov eax, dword [rip + CONST]
 test eax, eax
 cjmp LABEL33
 mov eax, dword [rsp + CONST]
 mov esi, CONST
 lea rdi, [rip + CONST]
 mov dword [rip + CONST], eax
 call CONST
 nop dword [rax]
LABEL12:
 lea rdi, [rip + CONST]
 call CONST
 mov esi, CONST
 lea rdi, [rip + CONST]
 call CONST
 mov esi, CONST
 lea rdi, [rip + CONST]
 call CONST
 xor esi, esi
 lea rdi, [rip + CONST]
 add dword [rip + CONST], CONST
 call CONST
 endbr64
 mov dword [rsp + CONST], eax
 jmp LABEL62
