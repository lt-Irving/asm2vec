 .name fcn.0000b150
 .offset 000000000000b150
 .file diff
 mov eax, dword [rdi]
 test eax, eax
 cjmp LABEL2
 push rbp
 push rbx
 mov rbx, rdi
 sub rsp, CONST
 mov eax, dword [rdi + CONST]
 and eax, CONST
 cmp eax, CONST
 cjmp LABEL10
 mov rax, qword [rdi + CONST]
LABEL67:
 mov rsi, qword [rbx + CONST]
 sub rsi, rax
 cjmp LABEL14
 cmp byte [rbx + CONST], CONST
 cjmp LABEL16
LABEL14:
 test rax, rax
 cjmp LABEL18
 mov rdx, qword [rbx + CONST]
 movabs rbp, CONST
LABEL34:
 cmp rax, rdx
 cjmp LABEL22
LABEL42:
 cmp rax, rbp
 cjmp LABEL24
 lea rsi, [rax + rax]
 mov rdi, qword [rbx + CONST]
 mov qword [rbx + CONST], rsi
 call CONST
 mov rdx, qword [rbx + CONST]
 mov qword [rbx + CONST], rax
 mov rax, qword [rbx + CONST]
 mov rsi, rdx
 sub rsi, rax
 cjmp LABEL34
 cmp byte [rbx + CONST], CONST
 cjmp LABEL34
 mov rdi, rbx
 call CONST
 mov rax, qword [rbx + CONST]
 mov rdx, qword [rbx + CONST]
 cmp rax, rdx
 cjmp LABEL42
 nop word cs:[rax + rax]
LABEL22:
 lea rsi, [rax + CONST]
 mov rdi, qword [rbx + CONST]
 and rsi, CONST
 mov qword [rbx + CONST], rsi
 call CONST
 mov qword [rbx + CONST], rax
LABEL18:
 add rsp, CONST
 pop rbx
 pop rbp
 ret
LABEL10:
 mov rbp, qword [rdi + CONST]
 mov rsi, rbp
 and rsi, CONST
 add rsi, CONST
 cmp rbp, rsi
 cjmp LABEL24
 movabs rax, CONST
 cmp rsi, rax
 cjmp LABEL24
 cmp qword [rdi + CONST], rsi
 cjmp LABEL64
LABEL85:
 mov rax, qword [rbx + CONST]
 cmp rax, rbp
 cjmp LABEL67
 mov rsi, rbp
 sub rsi, rax
 add rsi, CONST
 cjmp LABEL18
 cmp byte [rbx + CONST], CONST
 cjmp LABEL18
 mov rdi, rbx
 call CONST
 mov rax, qword [rbx + CONST]
 cmp rax, rbp
 cjmp LABEL67
 jmp LABEL18
LABEL2:
 ret
LABEL64:
 mov qword [rdi + CONST], rsi
 mov rdi, qword [rdi + CONST]
 call CONST
 mov qword [rbx + CONST], rax
 jmp LABEL85
LABEL16:
 mov rdi, rbx
 call CONST
 mov rax, qword [rbx + CONST]
 jmp LABEL14
LABEL24:
 call CONST
