 .name fcn.000059d0
 .offset 00000000000059d0
 .file chrt
LABEL104:
 push r15
 push r14
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 or qword [rsp], CONST
 sub rsp, CONST
 or qword [rsp], CONST
 sub rsp, CONST
 mov ecx, CONST
 mov edx, CONST
 xor r12d, r12d
 lea r8, [rip + CONST]
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 lea r15, [rsp + CONST]
 sub rsp, CONST
 mov r9d, edi
 push rsi
 mov rdi, r15
 mov esi, CONST
 call CONST
 xor esi, esi
 mov rdi, r15
 xor eax, eax
 call CONST
 pop rdx
 pop rcx
 test eax, eax
 cjmp LABEL32
 mov ebp, eax
 mov ecx, CONST
 mov rax, r12
 mov rdi, r15
 rep stosq qword [rdi], rax
 lea rax, [rsp + CONST]
 xor r14d, r14d
 xor r13d, r13d
 mov qword [rsp + CONST], rax
 mov ebx, CONST
 mov r12, r15
LABEL55:
 mov rdx, rbx
 mov rsi, r12
 mov edi, ebp
 call CONST
 test rax, rax
 cjmp LABEL49
 add r12, rax
 add r14, rax
 sub rbx, rax
 cjmp LABEL53
 xor r13d, r13d
 jmp LABEL55
LABEL49:
 cjmp LABEL56
 call CONST
 mov eax, dword [rax]
 cmp eax, CONST
 cjmp LABEL60
 cmp eax, CONST
 cjmp LABEL56
LABEL60:
 cmp r13d, CONST
 cjmp LABEL64
LABEL56:
 xor r12d, r12d
 test r14, r14
 cjmp LABEL67
LABEL53:
 xor eax, eax
 nop dword [rax + rax]
LABEL75:
 cmp byte [r15 + rax], CONST
 cjmp LABEL71
 mov byte [r15 + rax], CONST
LABEL71:
 add rax, CONST
 cmp rax, r14
 cjmp LABEL75
 mov rdi, r15
 mov byte [rsp + r14 + CONST], CONST
 call CONST
 mov r12, rax
LABEL67:
 mov edi, ebp
 call CONST
LABEL32:
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL84
 add rsp, CONST
 mov rax, r12
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL64:
 mov rdi, qword [rsp + CONST]
 xor esi, esi
 add r13d, CONST
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], CONST
 call CONST
 jmp LABEL55
LABEL84:
 call CONST
 endbr64
 lea rsi, [rip + CONST]
 jmp LABEL104
